{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nimport extractSupportQuery from './extractSupportQuery';\nimport rehydrateRules from './rehydrateRules';\nvar SUPPORT_REGEX = /@supports[^{]+\\{([\\s\\S]+?})\\s*}/gi;\nexport default function rehydrateSupportRules(css) {\n  var media = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var decl = void 0; // eslint-disable-next-line no-cond-assign\n\n  while (decl = SUPPORT_REGEX.exec(css)) {\n    var _decl = decl,\n        _decl2 = _slicedToArray(_decl, 2),\n        ruleSet = _decl2[0],\n        cssRules = _decl2[1];\n\n    var supportQuery = extractSupportQuery(ruleSet);\n    rehydrateRules(cssRules, media, supportQuery, cache);\n  }\n\n  return cache;\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/Teams_Clone/Group_Call/Calling/ClientApp/node_modules/fela-dom/es/dom/rehydration/rehydrateSupportRules.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","extractSupportQuery","rehydrateRules","SUPPORT_REGEX","rehydrateSupportRules","css","media","arguments","cache","decl","exec","_decl","_decl2","ruleSet","cssRules","supportQuery"],"mappings":"AAAA,IAAIA,cAAc,GAAG,YAAY;AAAE,WAASC,aAAT,CAAuBC,GAAvB,EAA4BC,CAA5B,EAA+B;AAAE,QAAIC,IAAI,GAAG,EAAX;AAAe,QAAIC,EAAE,GAAG,IAAT;AAAe,QAAIC,EAAE,GAAG,KAAT;AAAgB,QAAIC,EAAE,GAAGC,SAAT;;AAAoB,QAAI;AAAE,WAAK,IAAIC,EAAE,GAAGP,GAAG,CAACQ,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCC,EAAtC,EAA0C,EAAEP,EAAE,GAAG,CAACO,EAAE,GAAGH,EAAE,CAACI,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyET,EAAE,GAAG,IAA9E,EAAoF;AAAED,QAAAA,IAAI,CAACW,IAAL,CAAUH,EAAE,CAACI,KAAb;;AAAqB,YAAIb,CAAC,IAAIC,IAAI,CAACa,MAAL,KAAgBd,CAAzB,EAA4B;AAAQ;AAAE,KAAvJ,CAAwJ,OAAOe,GAAP,EAAY;AAAEZ,MAAAA,EAAE,GAAG,IAAL;AAAWC,MAAAA,EAAE,GAAGW,GAAL;AAAW,KAA5L,SAAqM;AAAE,UAAI;AAAE,YAAI,CAACb,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAb,EAAyBA,EAAE,CAAC,QAAD,CAAF;AAAiB,OAAhD,SAAyD;AAAE,YAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE;;AAAC,WAAOH,IAAP;AAAc;;AAAC,SAAO,UAAUF,GAAV,EAAeC,CAAf,EAAkB;AAAE,QAAIgB,KAAK,CAACC,OAAN,CAAclB,GAAd,CAAJ,EAAwB;AAAE,aAAOA,GAAP;AAAa,KAAvC,MAA6C,IAAIQ,MAAM,CAACC,QAAP,IAAmBU,MAAM,CAACnB,GAAD,CAA7B,EAAoC;AAAE,aAAOD,aAAa,CAACC,GAAD,EAAMC,CAAN,CAApB;AAA+B,KAArE,MAA2E;AAAE,YAAM,IAAImB,SAAJ,CAAc,sDAAd,CAAN;AAA8E;AAAE,GAArO;AAAwO,CAAhoB,EAArB;;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAIC,aAAa,GAAG,mCAApB;AAEA,eAAe,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC;AACjD,MAAIC,KAAK,GAAGC,SAAS,CAACZ,MAAV,GAAmB,CAAnB,IAAwBY,SAAS,CAAC,CAAD,CAAT,KAAiBrB,SAAzC,GAAqDqB,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,MAAIC,KAAK,GAAGD,SAAS,CAACZ,MAAV,GAAmB,CAAnB,IAAwBY,SAAS,CAAC,CAAD,CAAT,KAAiBrB,SAAzC,GAAqDqB,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AAEA,MAAIE,IAAI,GAAG,KAAK,CAAhB,CAJiD,CAMjD;;AACA,SAAOA,IAAI,GAAGN,aAAa,CAACO,IAAd,CAAmBL,GAAnB,CAAd,EAAuC;AACrC,QAAIM,KAAK,GAAGF,IAAZ;AAAA,QACIG,MAAM,GAAGlC,cAAc,CAACiC,KAAD,EAAQ,CAAR,CAD3B;AAAA,QAEIE,OAAO,GAAGD,MAAM,CAAC,CAAD,CAFpB;AAAA,QAGIE,QAAQ,GAAGF,MAAM,CAAC,CAAD,CAHrB;;AAKA,QAAIG,YAAY,GAAGd,mBAAmB,CAACY,OAAD,CAAtC;AACAX,IAAAA,cAAc,CAACY,QAAD,EAAWR,KAAX,EAAkBS,YAAlB,EAAgCP,KAAhC,CAAd;AACD;;AAED,SAAOA,KAAP;AACD","sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nimport extractSupportQuery from './extractSupportQuery';\nimport rehydrateRules from './rehydrateRules';\n\nvar SUPPORT_REGEX = /@supports[^{]+\\{([\\s\\S]+?})\\s*}/gi;\n\nexport default function rehydrateSupportRules(css) {\n  var media = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var decl = void 0;\n\n  // eslint-disable-next-line no-cond-assign\n  while (decl = SUPPORT_REGEX.exec(css)) {\n    var _decl = decl,\n        _decl2 = _slicedToArray(_decl, 2),\n        ruleSet = _decl2[0],\n        cssRules = _decl2[1];\n\n    var supportQuery = extractSupportQuery(ruleSet);\n    rehydrateRules(cssRules, media, supportQuery, cache);\n  }\n\n  return cache;\n}"]},"metadata":{},"sourceType":"module"}