{"ast":null,"code":"import _merge from \"lodash/merge\";\nimport { treeItemBehavior } from './treeItemBehavior';\nimport { treeTitleAsListItemTitleBehavior } from './treeTitleAsListItemTitleBehavior';\n/**\n * @description\n * Adds role 'listitem' to a non-leaf item and 'none' to a leaf item.\n */\n\nexport var treeItemAsListItemBehavior = function treeItemAsListItemBehavior(props) {\n  var behavior = treeItemBehavior(props);\n\n  var definition = _merge(behavior, {\n    attributes: {\n      root: Object.assign({}, props.hasSubtree && {\n        role: 'listitem'\n      })\n    },\n    childBehaviors: {\n      title: treeTitleAsListItemTitleBehavior\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production' && props.hasSubtree) {\n    // Override the default trigger's accessibility schema class.\n    definition.attributes.root['data-aa-class'] = 'TreeItemList';\n  }\n\n  return definition;\n};","map":{"version":3,"sources":["behaviors/Tree/treeItemAsListItemBehavior.ts"],"names":["treeItemAsListItemBehavior","behavior","treeItemBehavior","definition","attributes","root","props","role","childBehaviors","title","treeTitleAsListItemTitleBehavior","process"],"mappings":";AAEA,SAAA,gBAAA,QAAA,oBAAA;AACA,SAAA,gCAAA,QAAA,oCAAA;AAEA;;;;;AAIA,OAAO,IAAMA,0BAAgE,GAAG,SAAnEA,0BAAmE,CAAA,KAAA,EAAS;AACvF,MAAMC,QAAQ,GAAGC,gBAAgB,CAAjC,KAAiC,CAAjC;;AAEA,MAAMC,UAAU,GAAG,MAAA,CAAA,QAAA,EAAkB;AACnCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACEC,KAAK,CAALA,UAAAA,IAAoB;AACtBC,QAAAA,IAAI,EAAE;AADgB,OADtB;AADM,KADuB;AAQnCC,IAAAA,cAAc,EAAE;AACdC,MAAAA,KAAK,EAAEC;AADO;AARmB,GAAlB,CAAnB;;AAaA,MAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,IAAyCL,KAAK,CAAlD,UAAA,EAA+D;AAC7D;AACAH,IAAAA,UAAU,CAAVA,UAAAA,CAAAA,IAAAA,CAAAA,eAAAA,IAAAA,cAAAA;AACD;;AAED,SAAA,UAAA;AArBK,CAAA","sourcesContent":["import * as _ from 'lodash';\nimport { Accessibility } from '../../types';\nimport { treeItemBehavior, TreeItemBehaviorProps } from './treeItemBehavior';\nimport { treeTitleAsListItemTitleBehavior } from './treeTitleAsListItemTitleBehavior';\n\n/**\n * @description\n * Adds role 'listitem' to a non-leaf item and 'none' to a leaf item.\n */\nexport const treeItemAsListItemBehavior: Accessibility<TreeItemBehaviorProps> = props => {\n  const behavior = treeItemBehavior(props);\n\n  const definition = _.merge(behavior, {\n    attributes: {\n      root: {\n        ...(props.hasSubtree && {\n          role: 'listitem',\n        }),\n      },\n    },\n    childBehaviors: {\n      title: treeTitleAsListItemTitleBehavior,\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production' && props.hasSubtree) {\n    // Override the default trigger's accessibility schema class.\n    definition.attributes.root['data-aa-class'] = 'TreeItemList';\n  }\n\n  return definition;\n};\n"]},"metadata":{},"sourceType":"module"}