{"ast":null,"code":"import * as React from 'react';\nimport { createShorthandFactory, commonPropTypes, childrenExist } from '../../utils';\nimport { useTelemetry, getElementType, useUnhandledProps, useFluentContext, useAccessibility, useStyles } from '@fluentui/react-bindings';\nexport var dialogFooterClassName = 'ui-dialog__footer';\n/**\n * A DialogFooter represents footer content in Dialog, usually shows dialog actions.\n */\n\nexport var DialogFooter = /*#__PURE__*/function () {\n  var DialogFooter = function DialogFooter(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(DialogFooter.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var children = props.children,\n        content = props.content,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables,\n        accessibility = props.accessibility;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(DialogFooter.handledProps, props);\n    var getA11yProps = useAccessibility(accessibility, {\n      debugName: DialogFooter.displayName,\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(DialogFooter.displayName, {\n      className: dialogFooterClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), childrenExist(children) ? children : content);\n    setEnd();\n    return element;\n  };\n\n  DialogFooter.displayName = 'DialogFooter';\n  DialogFooter.propTypes = Object.assign({}, commonPropTypes.createCommon());\n  DialogFooter.handledProps = Object.keys(DialogFooter.propTypes);\n  DialogFooter.create = createShorthandFactory({\n    Component: DialogFooter,\n    mappedProp: 'content'\n  });\n  return DialogFooter;\n}();","map":{"version":3,"sources":["components/Dialog/DialogFooter.tsx"],"names":["dialogFooterClassName","DialogFooter","context","useFluentContext","setStart","setEnd","useTelemetry","children","content","className","design","styles","variables","accessibility","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToInlineStyles","element","root","childrenExist","commonPropTypes","Object","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface DialogFooterProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\nexport const dialogFooterClassName = 'ui-dialog__footer';\n\nexport type DialogFooterStylesProps = never;\n\n/**\n * A DialogFooter represents footer content in Dialog, usually shows dialog actions.\n */\nexport const DialogFooter: ComponentWithAs<'div', DialogFooterProps> &\n  FluentComponentStaticProps<DialogFooterProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DialogFooter.displayName, context.telemetry);\n  setStart();\n  const { children, content, className, design, styles, variables, accessibility } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DialogFooter.handledProps, props);\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: DialogFooter.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<DialogFooterStylesProps>(DialogFooter.displayName, {\n    className: dialogFooterClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n  const element = (\n    <ElementType {...getA11yProps('root', { className: classes.root, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nDialogFooter.displayName = 'DialogFooter';\n\nDialogFooter.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nDialogFooter.handledProps = Object.keys(DialogFooter.propTypes) as any;\n\nDialogFooter.create = createShorthandFactory({ Component: DialogFooter, mappedProp: 'content' });\n"]},"metadata":{},"sourceType":"module"}