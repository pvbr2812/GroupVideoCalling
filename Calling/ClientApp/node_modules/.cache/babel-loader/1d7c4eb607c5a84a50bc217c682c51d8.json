{"ast":null,"code":"var animationProps = ['animation', 'animationName', 'animationDuration', 'animationTimingFunction', 'animationDelay', 'animationIterationCount', 'animationDirection', 'animationFillMode', 'animationPlayState'];\n\nfunction isPlainObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n/**\n * Fela plugin for disabling animations. The animations are disabled or not based on the\n * props' disableAnimations param. If the value of the prop is true, all animation related\n * styles are removed.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\n\n\nexport var felaDisableAnimationsPlugin = function felaDisableAnimationsPlugin(styles, type, renderer, props) {\n  if (props && props.disableAnimations && type === 'RULE') {\n    return Object.keys(styles).reduce(function (acc, cssPropertyName) {\n      var _Object$assign2;\n\n      var cssPropertyValue = styles[cssPropertyName];\n\n      if (animationProps.indexOf(cssPropertyName) !== -1) {\n        return acc;\n      }\n\n      if (isPlainObject(cssPropertyValue)) {\n        var _Object$assign;\n\n        return Object.assign({}, acc, (_Object$assign = {}, _Object$assign[cssPropertyName] = felaDisableAnimationsPlugin(cssPropertyValue, type, renderer, props), _Object$assign));\n      }\n\n      return Object.assign({}, acc, (_Object$assign2 = {}, _Object$assign2[cssPropertyName] = styles[cssPropertyName], _Object$assign2));\n    }, {});\n  }\n\n  return styles;\n};","map":{"version":3,"sources":["felaDisableAnimationsPlugin.ts"],"names":["animationProps","val","Array","felaDisableAnimationsPlugin","props","type","cssPropertyValue","styles","isPlainObject"],"mappings":"AAGA,IAAMA,cAAuC,GAAG,CAAA,WAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,yBAAA,EAAA,gBAAA,EAAA,yBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAhD,oBAAgD,CAAhD;;AAYA,SAAA,aAAA,CAAA,GAAA,EAAiC;AAC/B,SAAOC,GAAG,IAAHA,IAAAA,IAAe,OAAA,GAAA,KAAfA,QAAAA,IAA0CC,KAAK,CAALA,OAAAA,CAAAA,GAAAA,MAAjD,KAAA;AACD;AAED;;;;;;;;;;AAQA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAKvB;AAClB,MAAIC,KAAK,IAAIA,KAAK,CAAdA,iBAAAA,IAAoCC,IAAI,KAA5C,MAAA,EAAyD;AACvD,WAAO,MAAM,CAAN,IAAA,CAAA,MAAA,EAAA,MAAA,CAA2B,UAAA,GAAA,EAAA,eAAA,EAA+C;AAAA,UAAA,eAAA;;AAC/E,UAAMC,gBAAgB,GAAGC,MAAM,CAA/B,eAA+B,CAA/B;;AAEA,UAAIP,cAAc,CAAdA,OAAAA,CAAAA,eAAAA,MAAsD,CAA1D,CAAA,EAA8D;AAC5D,eAAA,GAAA;AACD;;AAED,UAAIQ,aAAa,CAAjB,gBAAiB,CAAjB,EAAqC;AAAA,YAAA,cAAA;;AACnC,eAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,cAAA,GAAA,EAAA,EAAA,cAAA,CAAA,eAAA,CAAA,GAEqBL,2BAA2B,CAAA,gBAAA,EAAA,IAAA,EAAA,QAAA,EAFhD,KAEgD,CAFhD,EAAA,cAAA,EAAA;AAID;;AAED,aAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAoCI,MAAM,CAA1C,eAA0C,CAA1C,EAAA,eAAA,EAAA;AAdK,KAAA,EAAP,EAAO,CAAP;AAgBD;;AACD,SAAA,MAAA;AAxBK,CAAA","sourcesContent":["import { ICSSInJSStyle } from '@fluentui/styles';\nimport { FelaRenderer, FelaRendererParam } from './types';\n\nconst animationProps: (keyof ICSSInJSStyle)[] = [\n  'animation',\n  'animationName',\n  'animationDuration',\n  'animationTimingFunction',\n  'animationDelay',\n  'animationIterationCount',\n  'animationDirection',\n  'animationFillMode',\n  'animationPlayState',\n];\n\nfunction isPlainObject(val: any) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n\n/**\n * Fela plugin for disabling animations. The animations are disabled or not based on the\n * props' disableAnimations param. If the value of the prop is true, all animation related\n * styles are removed.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\nexport const felaDisableAnimationsPlugin = (\n  styles: ICSSInJSStyle,\n  type: string,\n  renderer?: FelaRenderer,\n  props?: Partial<FelaRendererParam>,\n): ICSSInJSStyle => {\n  if (props && props.disableAnimations && type === 'RULE') {\n    return Object.keys(styles).reduce((acc, cssPropertyName: keyof ICSSInJSStyle) => {\n      const cssPropertyValue = styles[cssPropertyName];\n\n      if (animationProps.indexOf(cssPropertyName as string) !== -1) {\n        return acc;\n      }\n\n      if (isPlainObject(cssPropertyValue)) {\n        return {\n          ...acc,\n          [cssPropertyName]: felaDisableAnimationsPlugin(cssPropertyValue, type, renderer, props),\n        };\n      }\n\n      return { ...acc, [cssPropertyName]: styles[cssPropertyName] };\n    }, {});\n  }\n  return styles;\n};\n"]},"metadata":{},"sourceType":"module"}