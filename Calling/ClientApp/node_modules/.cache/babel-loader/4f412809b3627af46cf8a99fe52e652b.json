{"ast":null,"code":"import { compose } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes } from '../../utils';\nimport { Box } from '../Box/Box';\nexport var menuItemContentClassName = 'ui-menu__itemcontent';\n/**\n * A MenuItemContent allows a user to have a dedicated component that can be targeted from the theme.\n */\n\nexport var MenuItemContent = /*#__PURE__*/function () {\n  var MenuItemContent = compose(Box, {\n    className: menuItemContentClassName,\n    displayName: 'MenuItemContent',\n    mapPropsToStylesProps: function mapPropsToStylesProps(props) {\n      return {\n        hasMenu: props.hasMenu,\n        hasIcon: props.hasIcon,\n        vertical: props.vertical,\n        inSubmenu: props.inSubmenu\n      };\n    },\n    handledProps: ['hasMenu', 'hasIcon', 'vertical', 'inSubmenu'],\n    overrideStyles: true,\n    shorthandConfig: {\n      mappedProp: 'content'\n    }\n  });\n  MenuItemContent.defaultProps = {\n    as: 'span'\n  };\n  MenuItemContent.propTypes = Object.assign({}, commonPropTypes.createCommon(), {\n    hasIcon: PropTypes.bool,\n    hasMenu: PropTypes.bool,\n    vertical: PropTypes.bool,\n    inSubmenu: PropTypes.bool\n  });\n  return MenuItemContent;\n}();","map":{"version":3,"sources":["components/Menu/MenuItemContent.tsx"],"names":["menuItemContentClassName","MenuItemContent","compose","className","displayName","mapPropsToStylesProps","hasMenu","props","hasIcon","vertical","inSubmenu","handledProps","overrideStyles","shorthandConfig","mappedProp","as","commonPropTypes","PropTypes","bool"],"mappings":"AAAA,SAAA,OAAA,QAAA,0BAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,SAAA,eAAA,QAAA,aAAA;AACA,SAAA,GAAA,QAAA,YAAA;AAmBA,OAAO,IAAMA,wBAAwB,GAA9B,sBAAA;AAEP;;;;AAGA,OAAO,IAAMC,eAAN,GAAA,aAAA,YAAA;AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAA,GAAA,EAA8E;AAClHC,IAAAA,SAAS,EADyG,wBAAA;AAElHC,IAAAA,WAAW,EAFuG,iBAAA;AAGlHC,IAAAA,qBAAqB,EAAE,SAAA,qBAAA,CAAA,KAAA,EAAK;AAAA,aAAK;AAC/BC,QAAAA,OAAO,EAAEC,KAAK,CADiB,OAAA;AAE/BC,QAAAA,OAAO,EAAED,KAAK,CAFiB,OAAA;AAG/BE,QAAAA,QAAQ,EAAEF,KAAK,CAHgB,QAAA;AAI/BG,QAAAA,SAAS,EAAEH,KAAK,CAACG;AAJc,OAAL;AAHsF,KAAA;AASlHC,IAAAA,YAAY,EAAE,CAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAToG,WASpG,CAToG;AAWlHC,IAAAA,cAAc,EAXoG,IAAA;AAYlHC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG;AAZiG,GAA9E,CAA/B;AAiBPb,EAAAA,eAAe,CAAfA,YAAAA,GAA+B;AAC7Bc,IAAAA,EAAE,EAAE;AADyB,GAA/Bd;AAGAA,EAAAA,eAAe,CAAfA,SAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EACKe,eAAe,CADpBf,YACKe,EADLf,EAAAA;AAEEO,IAAAA,OAAO,EAAES,SAAS,CAFpBhB,IAAAA;AAGEK,IAAAA,OAAO,EAAEW,SAAS,CAHpBhB,IAAAA;AAIEQ,IAAAA,QAAQ,EAAEQ,SAAS,CAJrBhB,IAAAA;AAKES,IAAAA,SAAS,EAAEO,SAAS,CAACC;AALvBjB,GAAAA,CAAAA;AApBO,SAAA,eAAA;AAAA,CAAA,EAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemContentOwnProps {\n  /** Indicates whether the parent menu item has menu. */\n  hasMenu?: boolean;\n\n  /** Indicates whether the parent menu item has icon. */\n  hasIcon?: boolean;\n\n  /** Indicates whether the parent menu item is inside vertical menu. */\n  vertical?: boolean;\n\n  /** Indicates whether the parent menu item is part of submenu. */\n  inSubmenu?: boolean;\n}\n\nexport interface MenuItemContentProps extends BoxProps, MenuItemContentOwnProps {}\nexport type MenuItemContentStylesProps = Pick<MenuItemContentProps, 'hasMenu' | 'hasIcon' | 'vertical' | 'inSubmenu'>;\n\nexport const menuItemContentClassName = 'ui-menu__itemcontent';\n\n/**\n * A MenuItemContent allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemContent = compose<'span', MenuItemContentProps, MenuItemContentStylesProps, BoxProps, {}>(Box, {\n  className: menuItemContentClassName,\n  displayName: 'MenuItemContent',\n  mapPropsToStylesProps: props => ({\n    hasMenu: props.hasMenu,\n    hasIcon: props.hasIcon,\n    vertical: props.vertical,\n    inSubmenu: props.inSubmenu,\n  }),\n  handledProps: ['hasMenu', 'hasIcon', 'vertical', 'inSubmenu'],\n\n  overrideStyles: true,\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nMenuItemContent.defaultProps = {\n  as: 'span',\n};\nMenuItemContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  hasIcon: PropTypes.bool,\n  hasMenu: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}