{"ast":null,"code":"import { createContext } from '@fluentui/react-context-selector';\nexport var MenuContext = createContext({\n  activeIndex: -1,\n  variables: {},\n  onItemClick: null,\n  slotProps: {\n    item: {},\n    divider: {}\n  },\n  behaviors: {\n    item: undefined,\n    divider: undefined\n  },\n  slots: {\n    menu: null\n  }\n}, {\n  strict: false\n});\nexport var MenuContextProvider = MenuContext.Provider;","map":{"version":3,"sources":["components/Menu/menuContext.ts"],"names":["MenuContext","createContext","activeIndex","variables","onItemClick","slotProps","item","divider","behaviors","undefined","slots","menu","strict","MenuContextProvider"],"mappings":"AAAA,SAAA,aAAA,QAAA,kCAAA;AAqCA,OAAO,IAAMA,WAAW,GAAGC,aAAa,CACtC;AACEC,EAAAA,WAAW,EAAE,CADf,CAAA;AAEEC,EAAAA,SAAS,EAFX,EAAA;AAGEC,EAAAA,WAAW,EAHb,IAAA;AAKEC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EADK,EAAA;AAETC,IAAAA,OAAO,EAAE;AAFA,GALb;AASEC,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EADK,SAAA;AAETC,IAAAA,OAAO,EAAEE;AAFA,GATb;AAaEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD;AAbT,CADsC,EAkBtC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAlBsC,CAAjC;AAqBP,OAAO,IAAMC,mBAAmB,GAAGb,WAAW,CAAvC,QAAA","sourcesContent":["import { createContext } from '@fluentui/react-context-selector';\nimport { ComponentVariablesInput } from '@fluentui/styles';\nimport * as React from 'react';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport type MenuContextValue = {\n  activeIndex: number;\n  variables: ComponentVariablesInput;\n  onItemClick: (e: React.KeyboardEvent | React.MouseEvent, itemIndex: number) => void;\n\n  slotProps: {\n    item: Record<string, any>;\n    divider: Record<string, any>;\n  };\n\n  behaviors: {\n    item: Accessibility;\n    divider: Accessibility;\n  };\n\n  slots: {\n    menu: React.ElementType;\n  };\n};\n\nexport type MenuItemSubscribedValue = Pick<MenuContextValue, 'variables' | 'onItemClick'> & {\n  slotProps: MenuContextValue['slotProps']['item'];\n  accessibility: MenuContextValue['behaviors']['item'];\n  menuSlot: MenuContextValue['slots']['menu'];\n  active: boolean;\n};\n\nexport type MenuDividerSubscribedValue = Pick<MenuContextValue, 'variables'> & {\n  slotProps: MenuContextValue['slotProps']['divider'];\n  accessibility: MenuContextValue['behaviors']['divider'];\n};\n\nexport const MenuContext = createContext<MenuContextValue>(\n  {\n    activeIndex: -1,\n    variables: {},\n    onItemClick: null,\n\n    slotProps: {\n      item: {},\n      divider: {},\n    },\n    behaviors: {\n      item: undefined,\n      divider: undefined,\n    },\n    slots: {\n      menu: null,\n    },\n  },\n  { strict: false },\n);\n\nexport const MenuContextProvider = MenuContext.Provider;\n"]},"metadata":{},"sourceType":"module"}