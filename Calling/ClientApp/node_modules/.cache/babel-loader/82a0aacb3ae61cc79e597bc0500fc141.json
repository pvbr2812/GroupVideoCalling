{"ast":null,"code":"import _isNil from \"lodash/isNil\";\nimport _invoke from \"lodash/invoke\";\nimport { attachmentBehavior } from '@fluentui/accessibility';\nimport { compose, getElementType, mergeVariablesOverrides, useAccessibility, useStyles, useFluentContext, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { createShorthandFactory, commonPropTypes, createShorthand } from '../../utils';\nimport { AttachmentAction } from './AttachmentAction';\nimport { AttachmentBody } from './AttachmentBody';\nimport { AttachmentDescription } from './AttachmentDescription';\nimport { AttachmentHeader } from './AttachmentHeader';\nimport { AttachmentIcon } from './AttachmentIcon';\nexport var attachmentClassName = 'ui-attachment';\n/**\n * An Attachment represents a file or media attachment, which may contain some metadata or actions.\n */\n\nexport var Attachment = /*#__PURE__*/function () {\n  var Attachment = compose(function (props, ref, composeOptions) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(composeOptions.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var accessibility = props.accessibility,\n        action = props.action,\n        actionable = props.actionable,\n        body = props.body,\n        className = props.className,\n        description = props.description,\n        design = props.design,\n        disabled = props.disabled,\n        header = props.header,\n        icon = props.icon,\n        onClick = props.onClick,\n        progress = props.progress,\n        styles = props.styles,\n        variables = props.variables;\n    var getA11Props = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: function performClick(e) {\n          if (e.currentTarget === e.target) {\n            e.stopPropagation();\n            handleClick(e);\n          }\n        }\n      },\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          actionable: actionable\n        };\n      },\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(composeOptions.displayName, {\n      className: attachmentClassName,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          actionable: actionable || !!onClick,\n          disabled: disabled\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl,\n      composeOptions: composeOptions,\n      unstable_props: props\n    }),\n        classes = _useStyles.classes;\n\n    var slotProps = composeOptions.resolveSlotProps(props);\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    var handleClick = function handleClick(e) {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(props, 'onClick', e, props);\n    };\n\n    var element = getA11Props.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({\n      className: classes.root,\n      onClick: handleClick,\n      ref: ref\n    }, unhandledProps)), createShorthand(composeOptions.slots.icon, icon, {\n      defaultProps: function defaultProps() {\n        return slotProps.icon;\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return {\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n        };\n      }\n    }), (header || description) && createShorthand(composeOptions.slots.body, body, {\n      defaultProps: function defaultProps() {\n        return slotProps.body;\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return {\n          content: /*#__PURE__*/React.createElement(React.Fragment, null, createShorthand(composeOptions.slots.header, header, {\n            defaultProps: function defaultProps() {\n              return slotProps.header;\n            },\n            overrideProps: function overrideProps(predefinedProps) {\n              return {\n                variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n              };\n            }\n          }), createShorthand(composeOptions.slots.description, description, {\n            defaultProps: function defaultProps() {\n              return slotProps.description;\n            },\n            overrideProps: function overrideProps(predefinedProps) {\n              return {\n                variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n              };\n            }\n          })),\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n        };\n      }\n    }), createShorthand(composeOptions.slots.action, action, {\n      defaultProps: function defaultProps() {\n        return slotProps.action;\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return {\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n        };\n      }\n    }), !_isNil(progress) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui-attachment__progress\",\n      style: {\n        width: progress + \"%\"\n      }\n    })));\n    setEnd();\n    return element;\n  }, {\n    className: attachmentClassName,\n    displayName: 'Attachment',\n    slots: {\n      action: AttachmentAction,\n      body: AttachmentBody,\n      description: AttachmentDescription,\n      header: AttachmentHeader,\n      icon: AttachmentIcon\n    },\n    handledProps: ['accessibility', 'action', 'actionable', 'as', 'body', 'children', 'className', 'description', 'design', 'header', 'icon', 'onClick', 'progress', 'styles', 'variables']\n  });\n  Attachment.create = createShorthandFactory({\n    Component: Attachment,\n    mappedProp: 'header'\n  });\n  Attachment.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: false\n  }), {\n    action: customPropTypes.itemShorthand,\n    actionable: PropTypes.bool,\n    body: customPropTypes.itemShorthand,\n    description: customPropTypes.itemShorthand,\n    header: customPropTypes.itemShorthand,\n    icon: customPropTypes.shorthandAllowingChildren,\n    onClick: PropTypes.func,\n    progress: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  });\n  Attachment.defaultProps = {\n    accessibility: attachmentBehavior,\n    body: {}\n  };\n  Attachment.Action = AttachmentAction;\n  Attachment.Body = AttachmentBody;\n  Attachment.Description = AttachmentDescription;\n  Attachment.Header = AttachmentHeader;\n  Attachment.Icon = AttachmentIcon;\n  return Attachment;\n}();","map":{"version":3,"sources":["components/Attachment/Attachment.tsx"],"names":["attachmentClassName","Attachment","compose","context","useFluentContext","setStart","setEnd","useTelemetry","composeOptions","accessibility","action","actionable","body","className","description","design","disabled","header","icon","onClick","progress","styles","variables","props","getA11Props","useAccessibility","debugName","actionHandlers","performClick","e","handleClick","mapPropsToBehavior","rtl","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","slotProps","ElementType","getElementType","unhandledProps","useUnhandledProps","element","ref","createShorthand","defaultProps","overrideProps","mergeVariablesOverrides","predefinedProps","content","width","displayName","slots","AttachmentIcon","handledProps","createShorthandFactory","Component","mappedProp","customPropTypes","PropTypes"],"mappings":"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","sourcesContent":["import { Accessibility, attachmentBehavior, AttachmentBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler, ShorthandValue } from '../../types';\nimport {\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  createShorthand,\n  ShorthandFactory,\n} from '../../utils';\nimport { AttachmentAction, AttachmentActionProps } from './AttachmentAction';\nimport { AttachmentBody, AttachmentBodyProps } from './AttachmentBody';\nimport { AttachmentDescription, AttachmentDescriptionProps } from './AttachmentDescription';\nimport { AttachmentHeader, AttachmentHeaderProps } from './AttachmentHeader';\nimport { AttachmentIcon, AttachmentIconProps } from './AttachmentIcon';\n\nexport interface AttachmentProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<AttachmentBehaviorProps>;\n\n  /** Button shorthand for the action slot. */\n  action?: ShorthandValue<AttachmentActionProps>;\n\n  /** An Attachment can be styled to indicate possible user interaction. */\n  actionable?: boolean;\n\n  /** Contains a header and a description for an Attachment. */\n  body?: ShorthandValue<AttachmentBodyProps>;\n\n  /** A string describing the attachment. */\n  description?: ShorthandValue<AttachmentDescriptionProps>;\n\n  /** An attachment can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** The name of the attachment. */\n  header?: ShorthandValue<AttachmentHeaderProps>;\n\n  /** Shorthand for the icon. */\n  icon?: ShorthandValue<AttachmentIconProps>;\n\n  /** Value indicating percent complete. */\n  progress?: string | number;\n\n  /**\n   * Called after user's click.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AttachmentProps>;\n}\n\nexport type AttachmentStylesProps = Required<Pick<AttachmentProps, 'actionable' | 'disabled'>>;\nexport const attachmentClassName = 'ui-attachment';\n\n/**\n * An Attachment represents a file or media attachment, which may contain some metadata or actions.\n */\nexport const Attachment = compose<'div', AttachmentProps, AttachmentStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      action,\n      actionable,\n      body,\n      className,\n      description,\n      design,\n      disabled,\n      header,\n      icon,\n      onClick,\n      progress,\n      styles,\n      variables,\n    } = props;\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: e => {\n          if (e.currentTarget === e.target) {\n            e.stopPropagation();\n            handleClick(e);\n          }\n        },\n      },\n      mapPropsToBehavior: () => ({ actionable }),\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<AttachmentStylesProps>(composeOptions.displayName, {\n      className: attachmentClassName,\n      mapPropsToStyles: () => ({\n        actionable: actionable || !!onClick,\n        disabled,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const slotProps = composeOptions.resolveSlotProps<AttachmentProps>(props);\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const handleClick = (e: React.KeyboardEvent | React.MouseEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const element = getA11Props.unstable_wrapWithFocusZone(\n      <ElementType {...getA11Props('root', { className: classes.root, onClick: handleClick, ref, ...unhandledProps })}>\n        {createShorthand(composeOptions.slots.icon, icon, {\n          defaultProps: () => slotProps.icon,\n          overrideProps: predefinedProps => ({\n            variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n          }),\n        })}\n\n        {(header || description) &&\n          createShorthand(composeOptions.slots.body, body, {\n            defaultProps: () => slotProps.body,\n            overrideProps: predefinedProps => ({\n              content: (\n                <>\n                  {createShorthand(composeOptions.slots.header, header, {\n                    defaultProps: () => slotProps.header,\n                    overrideProps: predefinedProps => ({\n                      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n                    }),\n                  })}\n                  {createShorthand(composeOptions.slots.description, description, {\n                    defaultProps: () => slotProps.description,\n                    overrideProps: predefinedProps => ({\n                      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n                    }),\n                  })}\n                </>\n              ),\n              variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n            }),\n          })}\n\n        {createShorthand(composeOptions.slots.action, action, {\n          defaultProps: () => slotProps.action,\n          overrideProps: predefinedProps => ({\n            variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n          }),\n        })}\n        {!_.isNil(progress) && <div className=\"ui-attachment__progress\" style={{ width: `${progress}%` }} />}\n      </ElementType>,\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: attachmentClassName,\n    displayName: 'Attachment',\n    slots: {\n      action: AttachmentAction,\n      body: AttachmentBody,\n      description: AttachmentDescription,\n      header: AttachmentHeader,\n      icon: AttachmentIcon,\n    },\n    handledProps: [\n      'accessibility',\n      'action',\n      'actionable',\n      'as',\n      'body',\n      'children',\n      'className',\n      'description',\n      'design',\n      'header',\n      'icon',\n      'onClick',\n      'progress',\n      'styles',\n      'variables',\n    ],\n  },\n) as ComponentWithAs<'div', AttachmentProps> & {\n  create: ShorthandFactory<AttachmentProps>;\n  Action: typeof AttachmentAction;\n  Body: typeof AttachmentBody;\n  Description: typeof AttachmentDescription;\n  Header: typeof AttachmentHeader;\n  Icon: typeof AttachmentIcon;\n};\n\nAttachment.create = createShorthandFactory({ Component: Attachment, mappedProp: 'header' });\n\nAttachment.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  action: customPropTypes.itemShorthand,\n  actionable: PropTypes.bool,\n  body: customPropTypes.itemShorthand,\n  description: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  icon: customPropTypes.shorthandAllowingChildren,\n  onClick: PropTypes.func,\n  progress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\nAttachment.defaultProps = {\n  accessibility: attachmentBehavior,\n  body: {},\n};\n\nAttachment.Action = AttachmentAction;\nAttachment.Body = AttachmentBody;\nAttachment.Description = AttachmentDescription;\nAttachment.Header = AttachmentHeader;\nAttachment.Icon = AttachmentIcon;\n"]},"metadata":{},"sourceType":"module"}