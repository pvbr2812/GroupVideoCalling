{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport { NestingContext } from './NestingContext';\n\nvar NestingChildInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(NestingChildInner, _React$Component);\n\n  function NestingChildInner() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.childRef = /*#__PURE__*/React.createRef();\n\n    _this.getRefs = function () {\n      return _this.props.getContextRefs(_this.childRef);\n    };\n\n    return _this;\n  }\n\n  var _proto = NestingChildInner.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.register(this.childRef);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.unregister(this.childRef);\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.getRefs, this.childRef);\n  };\n\n  return NestingChildInner;\n}(React.Component);\n\nexport var NestingChild = function NestingChild(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(NestingContext.Consumer, null, function (contextValue) {\n    return /*#__PURE__*/React.createElement(NestingChildInner, contextValue, children);\n  });\n};","map":{"version":3,"sources":["NestingChild.tsx"],"names":["NestingChildInner","React","Component","childRef","componentDidMount","componentWillUnmount","getRefs","render","NestingChild","children"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,SAAA,cAAA,QAAA,kBAAA;;IAKMA,iB;;;;;;;;;;;UACJG,Q,gBAAWF,KAAK,CAALA,SAAAA,E;;UAUXK,O,GAAU,YAAA;AAAA,aAAiB,KAAA,CAAA,KAAA,CAAA,cAAA,CAA0B,KAAA,CAA3C,QAAiB,CAAjB;;;;;;;;SARVF,iB,GAAAA,SAAAA,iBAAAA,GAAoB;AAClB,SAAA,KAAA,CAAA,QAAA,CAAoB,KAApB,QAAA;;;SAGFC,oB,GAAAA,SAAAA,oBAAAA,GAAuB;AACrB,SAAA,KAAA,CAAA,UAAA,CAAsB,KAAtB,QAAA;;;SAKFE,M,GAAAA,SAAAA,MAAAA,GAAS;AACP,WAAO,KAAA,KAAA,CAAA,QAAA,CAAoB,KAApB,OAAA,EAAkC,KAAzC,QAAO,CAAP;;;;EAd4CN,KAAK,CAACC,S;;AAkBtD,OAAO,IAAMM,YAAmD,GAAG,SAAtDA,YAAsD,CAAA,IAAA,EAAA;AAAA,MAAGC,QAAH,GAAA,IAAA,CAAA,QAAA;AAAA,SAAA,aACjE,KAAA,CAAA,aAAA,CAAC,cAAD,CAAA,QAAA,EAAA,IAAA,EACG,UAAA,YAAA,EAAA;AAAA,WAAA,aAAuC,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,YAAA,EAAvC,QAAuC,CAAvC;AAF8D,GACjE,CADiE;AAA5D,CAAA","sourcesContent":["import * as React from 'react';\n\nimport { NestingContext } from './NestingContext';\nimport { NestingContextValue, NestingProps, NodeRef } from './types';\n\ntype NestingChildInnerProps = NestingContextValue & NestingProps;\n\nclass NestingChildInner<T extends Node> extends React.Component<NestingChildInnerProps> {\n  childRef = React.createRef<T>();\n\n  componentDidMount() {\n    this.props.register(this.childRef as any);\n  }\n\n  componentWillUnmount() {\n    this.props.unregister(this.childRef as any);\n  }\n\n  getRefs = (): NodeRef[] => this.props.getContextRefs(this.childRef as any);\n\n  render() {\n    return this.props.children(this.getRefs, this.childRef as any);\n  }\n}\n\nexport const NestingChild: React.FunctionComponent<NestingProps> = ({ children }) => (\n  <NestingContext.Consumer>\n    {(contextValue: NestingContextValue) => <NestingChildInner {...contextValue}>{children}</NestingChildInner>}\n  </NestingContext.Consumer>\n);\n"]},"metadata":{},"sourceType":"module"}