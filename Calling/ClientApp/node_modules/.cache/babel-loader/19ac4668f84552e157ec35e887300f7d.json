{"ast":null,"code":"export var extendColorScheme = function extendColorScheme(colorScheme, overrides) {\n  var result = colorScheme;\n  Object.keys(overrides).forEach(function (color) {\n    var _Object$assign;\n\n    result = Object.assign({}, result, (_Object$assign = {}, _Object$assign[color] = Object.assign({}, colorScheme[color], overrides[color]), _Object$assign));\n  });\n  return result;\n};\nexport function pickValuesFromColorScheme(colorScheme, componentAreas) {\n  var result = {};\n  Object.keys(colorScheme).forEach(function (color) {\n    var _Object$assign3;\n\n    var colorValues = componentAreas.reduce(function (accumulator, area) {\n      var _Object$assign2;\n\n      return Object.assign({}, accumulator, (_Object$assign2 = {}, _Object$assign2[area] = colorScheme[color][area], _Object$assign2));\n    }, {});\n    result = Object.assign({}, result, (_Object$assign3 = {}, _Object$assign3[color] = colorValues, _Object$assign3));\n  });\n  return result;\n}","map":{"version":3,"sources":["themes/colorUtils.ts"],"names":["extendColorScheme","result","Object","colorScheme","overrides","colorValues"],"mappings":"AAEA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,WAAA,EAAA,SAAA,EAGR;AACvB,MAAIC,MAAM,GAAV,WAAA;AACAC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,SAAAA,EAAAA,OAAAA,CAA+B,UAAA,KAAA,EAAS;AAAA,QAAA,cAAA;;AACtCD,IAAAA,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,GAAA,cAAA,GAAA,EAAA,EAAA,cAAA,CAAA,KAAA,CAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAGCE,WAAW,CAHZ,KAGY,CAHZ,EAICC,SAAS,CAJV,KAIU,CAJV,CAAA,EAANH,cAAM,EAANA;AADFC,GAAAA;AASA,SAAA,MAAA;AAdK,CAAA;AAiBP,OAAO,SAAA,yBAAA,CAAA,WAAA,EAAA,cAAA,EAG+B;AACpC,MAAID,MAAM,GAAV,EAAA;AACAC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,WAAAA,EAAAA,OAAAA,CAAiC,UAAA,KAAA,EAAS;AAAA,QAAA,eAAA;;AACxC,QAAMG,WAAW,GAAG,cAAc,CAAd,MAAA,CAAsB,UAAA,WAAA,EAAA,IAAA,EAAuB;AAAA,UAAA,eAAA;;AAC/D,aAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,IAAA,CAAA,GAEUF,WAAW,CAAXA,KAAW,CAAXA,CAFV,IAEUA,CAFV,EAAA,eAAA,EAAA;AADkB,KAAA,EAApB,EAAoB,CAApB;AAMAF,IAAAA,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,CAAA,GAAA,WAAA,EAANA,eAAM,EAANA;AAPFC,GAAAA;AAYA,SAAA,MAAA;AACD","sourcesContent":["import { ColorSchemeMapping, ColorScheme, ColorSchemeMappingOverrides, ComponentAreaName } from './types';\n\nexport const extendColorScheme = (\n  colorScheme: ColorSchemeMapping,\n  overrides: ColorSchemeMappingOverrides,\n): ColorSchemeMapping => {\n  let result = colorScheme;\n  Object.keys(overrides).forEach(color => {\n    result = {\n      ...result,\n      [color]: {\n        ...colorScheme[color],\n        ...overrides[color],\n      },\n    };\n  });\n  return result;\n};\n\nexport function pickValuesFromColorScheme<T extends ComponentAreaName | string = ComponentAreaName>(\n  colorScheme: ColorSchemeMapping,\n  componentAreas: T[],\n): ColorSchemeMapping<ColorScheme<T>> {\n  let result = {};\n  Object.keys(colorScheme).forEach(color => {\n    const colorValues = componentAreas.reduce((accumulator, area) => {\n      return {\n        ...accumulator,\n        [area]: colorScheme[color][area],\n      };\n    }, {});\n    result = {\n      ...result,\n      [color]: colorValues,\n    };\n  });\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}