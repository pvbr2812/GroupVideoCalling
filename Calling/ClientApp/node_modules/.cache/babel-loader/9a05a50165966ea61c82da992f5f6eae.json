{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VISHWANATH REDDY\\\\Documents\\\\VSCODE2\\\\communication-services-web-calling-hero\\\\Calling\\\\ClientApp\\\\src\\\\components\\\\LocalSettings.tsx\";\n// © Microsoft Corporation. All rights reserved.\nimport React from 'react';\nimport { Stack, Dropdown } from '@fluentui/react';\nimport { localSettingsContainer, dropDownStyles, micStackTokens, mainStackTokens } from './styles/LocalSettings.styles';\nexport default (props => {\n  const defaultPlaceHolder = 'Select an option';\n  const cameraLabel = 'Camera';\n  const micLabel = 'Microphone';\n\n  const getDropDownList = list => {\n    return list.map(item => ({\n      val: item,\n      key: item.id,\n      text: item.name === '' ? item.deviceType : item.name\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Stack, {\n    className: localSettingsContainer,\n    tokens: mainStackTokens,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    placeholder: defaultPlaceHolder,\n    label: cameraLabel,\n    options: getDropDownList(props.videoDeviceList),\n    styles: dropDownStyles,\n    disabled: props.videoDeviceList.length === 0,\n    defaultSelectedKey: props.videoDeviceInfo ? props.videoDeviceInfo.id : '',\n    onChange: (...args) => {\n      var _args$;\n\n      const index = (_args$ = args[2]) !== null && _args$ !== void 0 ? _args$ : 0;\n      props.setVideoDeviceInfo(props.videoDeviceList[index]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Stack, {\n    tokens: micStackTokens,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    placeholder: defaultPlaceHolder,\n    label: micLabel,\n    styles: dropDownStyles,\n    disabled: props.audioDeviceList.length === 0,\n    options: getDropDownList(props.audioDeviceList),\n    defaultSelectedKey: props.audioDeviceInfo ? props.audioDeviceInfo.id : '',\n    onChange: (...args) => {\n      var _args$2;\n\n      const index = (_args$2 = args[2]) !== null && _args$2 !== void 0 ? _args$2 : 0;\n      props.setAudioDeviceInfo(props.audioDeviceList[index]);\n      props.deviceManager.selectMicrophone(props.audioDeviceList[index]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/VSCODE2/communication-services-web-calling-hero/Calling/ClientApp/src/components/LocalSettings.tsx"],"names":["React","Stack","Dropdown","localSettingsContainer","dropDownStyles","micStackTokens","mainStackTokens","props","defaultPlaceHolder","cameraLabel","micLabel","getDropDownList","list","map","item","val","key","id","text","name","deviceType","videoDeviceList","length","videoDeviceInfo","args","index","setVideoDeviceInfo","audioDeviceList","audioDeviceInfo","setAudioDeviceInfo","deviceManager","selectMicrophone"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAiD,iBAAjD;AAEA,SAASC,sBAAT,EAAiCC,cAAjC,EAAiDC,cAAjD,EAAiEC,eAAjE,QAAwF,+BAAxF;AAYA,gBAAgBC,KAAD,IAA4C;AACzD,QAAMC,kBAAkB,GAAG,kBAA3B;AACA,QAAMC,WAAW,GAAG,QAApB;AACA,QAAMC,QAAQ,GAAG,YAAjB;;AAEA,QAAMC,eAAe,GAAIC,IAAD,IAAuE;AAC7F,WAAOA,IAAI,CAACC,GAAL,CAAUC,IAAD,KAAW;AACzBC,MAAAA,GAAG,EAAED,IADoB;AAEzBE,MAAAA,GAAG,EAAEF,IAAI,CAACG,EAFe;AAGzBC,MAAAA,IAAI,EAAEJ,IAAI,CAACK,IAAL,KAAc,EAAd,GAAmBL,IAAI,CAACM,UAAxB,GAAqCN,IAAI,CAACK;AAHvB,KAAX,CAAT,CAAP;AAKD,GAND;;AAOA,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEhB,sBAAlB;AAA0C,IAAA,MAAM,EAAEG,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAEE,kBADf;AAEE,IAAA,KAAK,EAAEC,WAFT;AAGE,IAAA,OAAO,EAAEE,eAAe,CAACJ,KAAK,CAACc,eAAP,CAH1B;AAIE,IAAA,MAAM,EAAEjB,cAJV;AAKE,IAAA,QAAQ,EAAEG,KAAK,CAACc,eAAN,CAAsBC,MAAtB,KAAiC,CAL7C;AAME,IAAA,kBAAkB,EAAEf,KAAK,CAACgB,eAAN,GAAwBhB,KAAK,CAACgB,eAAN,CAAsBN,EAA9C,GAAmD,EANzE;AAOE,IAAA,QAAQ,EAAE,CAAC,GAAGO,IAAJ,KAAmB;AAAA;;AAC3B,YAAMC,KAAK,aAAGD,IAAI,CAAC,CAAD,CAAP,2CAAc,CAAzB;AACAjB,MAAAA,KAAK,CAACmB,kBAAN,CAAyBnB,KAAK,CAACc,eAAN,CAAsBI,KAAtB,CAAzB;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEpB,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAEG,kBADf;AAEE,IAAA,KAAK,EAAEE,QAFT;AAGE,IAAA,MAAM,EAAEN,cAHV;AAIE,IAAA,QAAQ,EAAEG,KAAK,CAACoB,eAAN,CAAsBL,MAAtB,KAAiC,CAJ7C;AAKE,IAAA,OAAO,EAAEX,eAAe,CAACJ,KAAK,CAACoB,eAAP,CAL1B;AAME,IAAA,kBAAkB,EAAEpB,KAAK,CAACqB,eAAN,GAAwBrB,KAAK,CAACqB,eAAN,CAAsBX,EAA9C,GAAmD,EANzE;AAOE,IAAA,QAAQ,EAAE,CAAC,GAAGO,IAAJ,KAAmB;AAAA;;AAC3B,YAAMC,KAAK,cAAGD,IAAI,CAAC,CAAD,CAAP,6CAAc,CAAzB;AACAjB,MAAAA,KAAK,CAACsB,kBAAN,CAAyBtB,KAAK,CAACoB,eAAN,CAAsBF,KAAtB,CAAzB;AACAlB,MAAAA,KAAK,CAACuB,aAAN,CAAoBC,gBAApB,CAAqCxB,KAAK,CAACoB,eAAN,CAAsBF,KAAtB,CAArC;AACD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF;AA+BD,CA3CD","sourcesContent":["// © Microsoft Corporation. All rights reserved.\r\nimport React from 'react';\r\nimport { Stack, Dropdown, IDropdownOption } from '@fluentui/react';\r\nimport { VideoDeviceInfo, AudioDeviceInfo, DeviceManager } from '@azure/communication-calling';\r\nimport { localSettingsContainer, dropDownStyles, micStackTokens, mainStackTokens } from './styles/LocalSettings.styles';\r\n\r\nexport interface LocalSettingsProps {\r\n  deviceManager: DeviceManager;\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\r\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\r\n}\r\n\r\nexport default (props: LocalSettingsProps): JSX.Element => {\r\n  const defaultPlaceHolder = 'Select an option';\r\n  const cameraLabel = 'Camera';\r\n  const micLabel = 'Microphone';\r\n\r\n  const getDropDownList = (list: Array<VideoDeviceInfo | AudioDeviceInfo>): IDropdownOption[] => {\r\n    return list.map((item) => ({\r\n      val: item,\r\n      key: item.id,\r\n      text: item.name === '' ? item.deviceType : item.name\r\n    }));\r\n  };\r\n  return (\r\n    <Stack className={localSettingsContainer} tokens={mainStackTokens}>\r\n      <Dropdown\r\n        placeholder={defaultPlaceHolder}\r\n        label={cameraLabel}\r\n        options={getDropDownList(props.videoDeviceList)}\r\n        styles={dropDownStyles}\r\n        disabled={props.videoDeviceList.length === 0}\r\n        defaultSelectedKey={props.videoDeviceInfo ? props.videoDeviceInfo.id : ''}\r\n        onChange={(...args): void => {\r\n          const index = args[2] ?? 0;\r\n          props.setVideoDeviceInfo(props.videoDeviceList[index]);\r\n        }}\r\n      />\r\n      <Stack tokens={micStackTokens}>\r\n        <Dropdown\r\n          placeholder={defaultPlaceHolder}\r\n          label={micLabel}\r\n          styles={dropDownStyles}\r\n          disabled={props.audioDeviceList.length === 0}\r\n          options={getDropDownList(props.audioDeviceList)}\r\n          defaultSelectedKey={props.audioDeviceInfo ? props.audioDeviceInfo.id : ''}\r\n          onChange={(...args): void => {\r\n            const index = args[2] ?? 0;\r\n            props.setAudioDeviceInfo(props.audioDeviceList[index]);\r\n            props.deviceManager.selectMicrophone(props.audioDeviceList[index]);\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}