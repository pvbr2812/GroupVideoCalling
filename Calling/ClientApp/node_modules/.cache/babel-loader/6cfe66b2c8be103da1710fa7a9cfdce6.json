{"ast":null,"code":"import { menuItemBehavior } from '../Menu/menuItemBehavior';\n/**\n * @description\n * The behavior is designed for particular structure of menu item. The item consists of root element and anchor inside the root element.\n *\n * @specification\n * Adds role 'presentation' to 'wrapper' slot.\n * Adds role 'menuitem' to 'root' slot.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=false' to 'root' slot if 'disabled' property is true. Sets the attribute to 'true' otherwise.\n * Adds attribute 'aria-label' based on the property 'aria-label' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Adds attribute 'aria-describedby' based on the property 'aria-describedby' to 'root' slot.\n * Adds attribute 'aria-expanded=true' based on the property 'menuOpen' if the component has 'hasMenu' property to 'root' slot.\n * Adds attribute 'aria-haspopup=true' to 'root' slot if 'hasMenu' property is set.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n * Triggers 'closeMenuAndFocusTrigger' action with 'Escape' on 'wrapper'.\n * Triggers 'closeAllMenusAndFocusNextParentItem' action with 'ArrowRight' on 'wrapper'.\n * Triggers 'closeMenu' action with 'ArrowLeft' on 'wrapper'.\n * Triggers 'openMenu' action with 'ArrowRight' on 'wrapper'.\n */\n\nexport var toolbarMenuItemBehavior = function toolbarMenuItemBehavior(props) {\n  return menuItemBehavior(Object.assign({}, props, {\n    vertical: true\n  }));\n};","map":{"version":3,"sources":["behaviors/Toolbar/toolbarMenuItemBehavior.ts"],"names":["toolbarMenuItemBehavior","menuItemBehavior","vertical"],"mappings":"AACA,SAAA,gBAAA,QAAA,0BAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAO,IAAMA,uBAAoE,GAAG,SAAvEA,uBAAuE,CAAA,KAAA,EAAS;AAC3F,SAAOC,gBAAgB,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAA,CAAA,CAAvB;AADK,CAAA","sourcesContent":["import { Accessibility, AccessibilityAttributes } from '../../types';\nimport { menuItemBehavior } from '../Menu/menuItemBehavior';\n\n/**\n * @description\n * The behavior is designed for particular structure of menu item. The item consists of root element and anchor inside the root element.\n *\n * @specification\n * Adds role 'presentation' to 'wrapper' slot.\n * Adds role 'menuitem' to 'root' slot.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=false' to 'root' slot if 'disabled' property is true. Sets the attribute to 'true' otherwise.\n * Adds attribute 'aria-label' based on the property 'aria-label' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Adds attribute 'aria-describedby' based on the property 'aria-describedby' to 'root' slot.\n * Adds attribute 'aria-expanded=true' based on the property 'menuOpen' if the component has 'hasMenu' property to 'root' slot.\n * Adds attribute 'aria-haspopup=true' to 'root' slot if 'hasMenu' property is set.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n * Triggers 'closeMenuAndFocusTrigger' action with 'Escape' on 'wrapper'.\n * Triggers 'closeAllMenusAndFocusNextParentItem' action with 'ArrowRight' on 'wrapper'.\n * Triggers 'closeMenu' action with 'ArrowLeft' on 'wrapper'.\n * Triggers 'openMenu' action with 'ArrowRight' on 'wrapper'.\n */\nexport const toolbarMenuItemBehavior: Accessibility<ToolbarMenuItemBehaviorProps> = props => {\n  return menuItemBehavior({ ...props, vertical: true });\n};\n\nexport type ToolbarMenuItemBehaviorProps = {\n  /** Indicated if menu item has submenu. TODO: fix types for all behaviours */\n  menu?: any;\n  /** Defines if submenu is opened. */\n  menuOpen?: boolean;\n  /** If a menu item can is currently unable to be interacted with. */\n  disabled?: boolean;\n} & Pick<AccessibilityAttributes, 'aria-label' | 'aria-labelledby' | 'aria-describedby'>;\n"]},"metadata":{},"sourceType":"module"}