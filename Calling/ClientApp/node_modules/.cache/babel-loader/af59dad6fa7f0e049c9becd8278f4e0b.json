{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport * as React from 'react';\nimport { datepickerCalendarHeaderBehavior } from '@fluentui/accessibility';\nimport { DEFAULT_CALENDAR_STRINGS } from '../../utils/date-time-utilities';\nimport { getElementType, useAccessibility, useFluentContext, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes, createShorthand, createShorthandFactory } from '../../utils';\nimport { DatepickerCalendarHeaderAction } from './DatepickerCalendarHeaderAction';\nimport { Text } from '../Text/Text';\nexport var datepickerCalendarHeaderClassName = 'ui-datepicker__calendarheader';\n/**\n * A DatepickerCalendarHeader is used to display header block above calendar grid.\n */\n\nexport var DatepickerCalendarHeader = /*#__PURE__*/function () {\n  var DatepickerCalendarHeader = function DatepickerCalendarHeader(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(DatepickerCalendarHeader.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables,\n        label = props.label,\n        nextButton = props.nextButton,\n        previousButton = props.previousButton,\n        onPreviousClick = props.onPreviousClick,\n        onNextClick = props.onNextClick;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(DatepickerCalendarHeader.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: DatepickerCalendarHeader.displayName,\n      actionHandlers: {},\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(DatepickerCalendarHeader.displayName, {\n      className: datepickerCalendarHeaderClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), createShorthand(Text, label, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('label', {\n          className: classes.label\n        });\n      }\n    }), createShorthand(DatepickerCalendarHeaderAction, previousButton, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('previousButton', {\n          title: props.prevMonthAriaLabel,\n          direction: 'previous',\n          'aria-disabled': props.disabledPreviousButton,\n          disabledNavigatableButton: props.disabledPreviousButton\n        });\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return {\n          onClick: function onClick(e, data) {\n            if (!props.disabledPreviousButton) {\n              onPreviousClick(e, data);\n\n              _invoke(predefinedProps, 'onClick', e, data);\n            }\n          }\n        };\n      }\n    }), createShorthand(DatepickerCalendarHeaderAction, nextButton, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('nextButton', {\n          title: props.nextMonthAriaLabel,\n          direction: 'next',\n          'aria-disabled': props.disabledNextButton,\n          disabledNavigatableButton: props.disabledNextButton\n        });\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return {\n          onClick: function onClick(e, data) {\n            if (!props.disabledNextButton) {\n              onNextClick(e, data);\n\n              _invoke(predefinedProps, 'onClick', e, data);\n            }\n          }\n        };\n      }\n    }));\n    setEnd();\n    return element;\n  };\n\n  DatepickerCalendarHeader.displayName = 'DatepickerCalendarHeader';\n  DatepickerCalendarHeader.propTypes = Object.assign({}, commonPropTypes.createCommon(), {\n    label: customPropTypes.itemShorthand,\n    nextButton: customPropTypes.itemShorthand,\n    previousButton: customPropTypes.itemShorthand,\n    onPreviousClick: PropTypes.func,\n    onNextClick: PropTypes.func,\n    disabledNextButton: PropTypes.bool,\n    disabledPreviousButton: PropTypes.bool,\n    prevMonthAriaLabel: PropTypes.string,\n    nextMonthAriaLabel: PropTypes.string\n  });\n  DatepickerCalendarHeader.defaultProps = {\n    accessibility: datepickerCalendarHeaderBehavior,\n    nextButton: {},\n    previousButton: {},\n    label: {},\n    prevMonthAriaLabel: DEFAULT_CALENDAR_STRINGS.prevMonthAriaLabel,\n    nextMonthAriaLabel: DEFAULT_CALENDAR_STRINGS.nextMonthAriaLabel\n  };\n  DatepickerCalendarHeader.handledProps = Object.keys(DatepickerCalendarHeader.propTypes);\n  DatepickerCalendarHeader.create = createShorthandFactory({\n    Component: DatepickerCalendarHeader\n  });\n  return DatepickerCalendarHeader;\n}();","map":{"version":3,"sources":["components/Datepicker/DatepickerCalendarHeader.tsx"],"names":["datepickerCalendarHeaderClassName","DatepickerCalendarHeader","context","useFluentContext","setStart","setEnd","useTelemetry","className","design","styles","variables","label","nextButton","previousButton","onPreviousClick","onNextClick","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","actionHandlers","rtl","classes","useStyles","mapPropsToInlineStyles","element","root","createShorthand","defaultProps","title","direction","disabledNavigatableButton","disabledPreviousButton","overrideProps","onClick","disabledNextButton","commonPropTypes","customPropTypes","PropTypes","prevMonthAriaLabel","nextMonthAriaLabel","string","accessibility","DEFAULT_CALENDAR_STRINGS","Object","createShorthandFactory","Component"],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport {\n  Accessibility,\n  datepickerCalendarHeaderBehavior,\n  DatepickerCalendarHeaderBehaviorProps,\n} from '@fluentui/accessibility';\nimport { ICalendarStrings, DEFAULT_CALENDAR_STRINGS } from '../../utils/date-time-utilities';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { FluentComponentStaticProps, ShorthandValue, ComponentEventHandler } from '../../types';\nimport {\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthand,\n  createShorthandFactory,\n  UIComponentProps,\n} from '../../utils';\nimport { DatepickerCalendarHeaderAction, DatepickerCalendarHeaderActionProps } from './DatepickerCalendarHeaderAction';\nimport { Text, TextProps } from '../Text/Text';\n\nexport interface DatepickerCalendarHeaderProps\n  extends UIComponentProps,\n    ContentComponentProps,\n    Pick<ICalendarStrings, 'prevMonthAriaLabel' | 'nextMonthAriaLabel'> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerCalendarHeaderBehaviorProps>;\n\n  /** Shorthand for text label. */\n  label?: ShorthandValue<TextProps>;\n\n  /** Action to happen on click on the previous button */\n  onPreviousClick?: ComponentEventHandler<DatepickerCalendarHeaderActionProps>;\n\n  /** Action to happen on click on the next button */\n  onNextClick?: ComponentEventHandler<DatepickerCalendarHeaderActionProps>;\n\n  /** Shorthand for the button that navigates to the previous calendar screen. */\n  previousButton?: ShorthandValue<DatepickerCalendarHeaderActionProps>;\n\n  /** Shorthand for the button that navigates to the next calendar screen. */\n  nextButton?: ShorthandValue<DatepickerCalendarHeaderActionProps>;\n\n  /** Decides whether next button is actionable._align_baseline. */\n  disabledNextButton?: boolean;\n\n  /** Decides whether previous button is actionable._align_baseline. */\n  disabledPreviousButton?: boolean;\n}\n\nexport type DatepickerCalendarHeaderStylesProps = never;\n\nexport const datepickerCalendarHeaderClassName = 'ui-datepicker__calendarheader';\n\n/**\n * A DatepickerCalendarHeader is used to display header block above calendar grid.\n */\nexport const DatepickerCalendarHeader: ComponentWithAs<'div', DatepickerCalendarHeaderProps> &\n  FluentComponentStaticProps<DatepickerCalendarHeaderProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DatepickerCalendarHeader.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    label,\n    nextButton,\n    previousButton,\n    onPreviousClick,\n    onNextClick,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DatepickerCalendarHeader.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: DatepickerCalendarHeader.displayName,\n    actionHandlers: {},\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<DatepickerCalendarHeaderStylesProps>(DatepickerCalendarHeader.displayName, {\n    className: datepickerCalendarHeaderClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {createShorthand(Text, label, {\n        defaultProps: () =>\n          getA11yProps('label', {\n            className: classes.label,\n          }),\n      })}\n\n      {createShorthand(DatepickerCalendarHeaderAction, previousButton, {\n        defaultProps: () =>\n          getA11yProps('previousButton', {\n            title: props.prevMonthAriaLabel,\n            direction: 'previous',\n            'aria-disabled': props.disabledPreviousButton,\n            disabledNavigatableButton: props.disabledPreviousButton,\n          }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderActionProps): DatepickerCalendarHeaderActionProps => ({\n          onClick: (e, data) => {\n            if (!props.disabledPreviousButton) {\n              onPreviousClick(e, data);\n              _.invoke(predefinedProps, 'onClick', e, data);\n            }\n          },\n        }),\n      })}\n      {createShorthand(DatepickerCalendarHeaderAction, nextButton, {\n        defaultProps: () =>\n          getA11yProps('nextButton', {\n            title: props.nextMonthAriaLabel,\n            direction: 'next',\n            'aria-disabled': props.disabledNextButton,\n            disabledNavigatableButton: props.disabledNextButton,\n          }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderActionProps): DatepickerCalendarHeaderActionProps => ({\n          onClick: (e, data) => {\n            if (!props.disabledNextButton) {\n              onNextClick(e, data);\n              _.invoke(predefinedProps, 'onClick', e, data);\n            }\n          },\n        }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nDatepickerCalendarHeader.displayName = 'DatepickerCalendarHeader';\n\nDatepickerCalendarHeader.propTypes = {\n  ...commonPropTypes.createCommon(),\n  label: customPropTypes.itemShorthand,\n  nextButton: customPropTypes.itemShorthand,\n  previousButton: customPropTypes.itemShorthand,\n  onPreviousClick: PropTypes.func,\n  onNextClick: PropTypes.func,\n  disabledNextButton: PropTypes.bool,\n  disabledPreviousButton: PropTypes.bool,\n\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n};\n\nDatepickerCalendarHeader.defaultProps = {\n  accessibility: datepickerCalendarHeaderBehavior,\n  nextButton: {},\n  previousButton: {},\n  label: {},\n\n  prevMonthAriaLabel: DEFAULT_CALENDAR_STRINGS.prevMonthAriaLabel,\n  nextMonthAriaLabel: DEFAULT_CALENDAR_STRINGS.nextMonthAriaLabel,\n};\n\nDatepickerCalendarHeader.handledProps = Object.keys(DatepickerCalendarHeader.propTypes) as any;\n\nDatepickerCalendarHeader.create = createShorthandFactory({ Component: DatepickerCalendarHeader });\n"]},"metadata":{},"sourceType":"module"}