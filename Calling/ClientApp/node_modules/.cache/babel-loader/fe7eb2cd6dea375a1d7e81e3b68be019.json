{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VISHWANATH REDDY\\\\Documents\\\\VSCODE2\\\\communication-services-web-calling-hero\\\\Calling\\\\ClientApp\\\\src\\\\components\\\\DisplayNameField.tsx\";\nimport React from 'react';\nimport { TextField } from '@fluentui/react';\nimport { inputBoxStyle, inputBoxTextStyle, inputBoxWarningStyle, labelFontStyle, warningStyle } from './styles/Configuration.styles';\nconst TextFieldStyleProps = {\n  wrapper: {\n    height: '2.3rem'\n  },\n  fieldGroup: {\n    height: '2.3rem'\n  }\n};\nexport default (props => {\n  const onNameTextChange = event => {\n    props.setName(event.target.value);\n\n    if (event.target.value) {\n      props.setEmptyWarning(false);\n    } else {\n      props.setEmptyWarning(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: labelFontStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"off\",\n    inputClassName: inputBoxTextStyle,\n    ariaLabel: \"Choose your name\",\n    borderless: true,\n    className: props.isEmpty ? inputBoxWarningStyle : inputBoxStyle,\n    onChange: onNameTextChange,\n    id: \"name\",\n    placeholder: \"Enter your name\",\n    defaultValue: props.name,\n    styles: TextFieldStyleProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), props.isEmpty && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"alert\",\n    className: warningStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, ' ', \"Name cannot be empty\", ' '));\n});","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/VSCODE2/communication-services-web-calling-hero/Calling/ClientApp/src/components/DisplayNameField.tsx"],"names":["React","TextField","inputBoxStyle","inputBoxTextStyle","inputBoxWarningStyle","labelFontStyle","warningStyle","TextFieldStyleProps","wrapper","height","fieldGroup","props","onNameTextChange","event","setName","target","value","setEmptyWarning","isEmpty","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SACEC,aADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,cAJF,EAKEC,YALF,QAMO,+BANP;AAeA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD,GADiB;AAI1BC,EAAAA,UAAU,EAAE;AACVD,IAAAA,MAAM,EAAE;AADE;AAJc,CAA5B;AASA,gBAAgBE,KAAD,IAA+C;AAC5D,QAAMC,gBAAgB,GAAIC,KAAD,IAAsB;AAC7CF,IAAAA,KAAK,CAACG,OAAN,CAAcD,KAAK,CAACE,MAAN,CAAaC,KAA3B;;AACA,QAAIH,KAAK,CAACE,MAAN,CAAaC,KAAjB,EAAwB;AACtBL,MAAAA,KAAK,CAACM,eAAN,CAAsB,KAAtB;AACD,KAFD,MAEO;AACLN,MAAAA,KAAK,CAACM,eAAN,CAAsB,IAAtB;AACD;AACF,GAPD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEZ,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,cAAc,EAAEF,iBAFlB;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAIE,IAAA,UAAU,EAAE,IAJd;AAKE,IAAA,SAAS,EAAEQ,KAAK,CAACO,OAAN,GAAgBd,oBAAhB,GAAuCF,aALpD;AAME,IAAA,QAAQ,EAAEU,gBANZ;AAOE,IAAA,EAAE,EAAC,MAPL;AAQE,IAAA,WAAW,EAAC,iBARd;AASE,IAAA,YAAY,EAAED,KAAK,CAACQ,IATtB;AAUE,IAAA,MAAM,EAAEZ,mBAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcGI,KAAK,CAACO,OAAN,iBACC;AAAK,IAAA,IAAI,EAAC,OAAV;AAAkB,IAAA,SAAS,EAAEZ,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,0BAEuB,GAFvB,CAfJ,CADF;AAuBD,CAjCD","sourcesContent":["import React from 'react';\r\nimport { TextField } from '@fluentui/react';\r\n\r\nimport {\r\n  inputBoxStyle,\r\n  inputBoxTextStyle,\r\n  inputBoxWarningStyle,\r\n  labelFontStyle,\r\n  warningStyle\r\n} from './styles/Configuration.styles';\r\n\r\ninterface DisplayNameFieldProps {\r\n  setName(name: string): void;\r\n  name: string;\r\n  setEmptyWarning(isEmpty: boolean): void;\r\n  isEmpty: boolean;\r\n}\r\n\r\nconst TextFieldStyleProps = {\r\n  wrapper: {\r\n    height: '2.3rem'\r\n  },\r\n  fieldGroup: {\r\n    height: '2.3rem'\r\n  }\r\n};\r\n\r\nexport default (props: DisplayNameFieldProps): JSX.Element => {\r\n  const onNameTextChange = (event: any): void => {\r\n    props.setName(event.target.value);\r\n    if (event.target.value) {\r\n      props.setEmptyWarning(false);\r\n    } else {\r\n      props.setEmptyWarning(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={labelFontStyle}>Name</div>\r\n      <TextField\r\n        autoComplete=\"off\"\r\n        inputClassName={inputBoxTextStyle}\r\n        ariaLabel=\"Choose your name\"\r\n        borderless={true}\r\n        className={props.isEmpty ? inputBoxWarningStyle : inputBoxStyle}\r\n        onChange={onNameTextChange}\r\n        id=\"name\"\r\n        placeholder=\"Enter your name\"\r\n        defaultValue={props.name}\r\n        styles={TextFieldStyleProps}\r\n      />\r\n      {props.isEmpty && (\r\n        <div role=\"alert\" className={warningStyle}>\r\n          {' '}\r\n          Name cannot be empty{' '}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}