{"ast":null,"code":"import { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemAsToolbarButtonBehavior } from './menuItemAsToolbarButtonBehavior';\n/**\n * @description\n * Implements ARIA Toolbar design pattern.\n * Child item components need to have menuItemAsToolbarButtonBehavior assigned.\n * @specification\n * Adds role 'toolbar' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\n\nexport var menuAsToolbarBehavior = function menuAsToolbarBehavior() {\n  return {\n    attributes: {\n      root: {\n        role: 'toolbar'\n      }\n    },\n    focusZone: {\n      props: {\n        shouldFocusInnerElementWhenReceivedFocus: true,\n        direction: FocusZoneDirection.bidirectionalDomOrder\n      }\n    },\n    childBehaviors: {\n      item: menuItemAsToolbarButtonBehavior\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Toolbar/menuAsToolbarBehavior.ts"],"names":["menuAsToolbarBehavior","attributes","root","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","FocusZoneDirection","bidirectionalDomOrder","childBehaviors","item","menuItemAsToolbarButtonBehavior"],"mappings":"AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,SAAA,+BAAA,QAAA,mCAAA;AAEA;;;;;;;;;;AASA,OAAO,IAAMA,qBAAoC,GAAG,SAAvCA,qBAAuC,GAAA;AAAA,SAAO;AACzDC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD6C;AAMzDC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,wCAAwC,EADnC,IAAA;AAELC,QAAAA,SAAS,EAAEC,kBAAkB,CAACC;AAFzB;AADE,KAN8C;AAYzDC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEC;AADQ;AAZyC,GAAP;AAA7C,CAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemAsToolbarButtonBehavior } from './menuItemAsToolbarButtonBehavior';\n\n/**\n * @description\n * Implements ARIA Toolbar design pattern.\n * Child item components need to have menuItemAsToolbarButtonBehavior assigned.\n * @specification\n * Adds role 'toolbar' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nexport const menuAsToolbarBehavior: Accessibility = () => ({\n  attributes: {\n    root: {\n      role: 'toolbar',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n  childBehaviors: {\n    item: menuItemAsToolbarButtonBehavior,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}