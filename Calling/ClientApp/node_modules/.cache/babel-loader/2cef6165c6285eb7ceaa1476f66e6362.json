{"ast":null,"code":"import { callable } from '@fluentui/styles';\nimport { pxToRem } from '../../../../utils';\n\nvar getPaddedStyle = function getPaddedStyle() {\n  return {\n    padding: pxToRem(4)\n  };\n};\n\nvar getBorderedStyles = function getBorderedStyles(boxShadowColor) {\n  return Object.assign({}, getPaddedStyle(), {\n    boxShadow: \"0 0 0 .05rem \" + boxShadowColor + \" inset\"\n  });\n};\n\nvar getIconSize = function getIconSize(size, v) {\n  var modifiedSizes = {\n    large: {\n      x: 24,\n      xx: 28\n    }\n  };\n  return v.sizeModifier && modifiedSizes[size] && modifiedSizes[size][v.sizeModifier] ? pxToRem(modifiedSizes[size][v.sizeModifier]) : v[size + \"Size\"];\n};\n\nvar getXSpacingStyles = function getXSpacingStyles(xSpacing, horizontalSpace) {\n  switch (xSpacing) {\n    case 'none':\n      return {\n        marginLeft: 0,\n        marginRight: 0\n      };\n\n    case 'before':\n      return {\n        marginLeft: horizontalSpace,\n        marginRight: 0\n      };\n\n    case 'after':\n      return {\n        marginLeft: 0,\n        marginRight: horizontalSpace\n      };\n\n    case 'both':\n      return {\n        marginLeft: horizontalSpace,\n        marginRight: horizontalSpace\n      };\n  }\n};\n\nexport var svgIconStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    return Object.assign({\n      speak: 'none',\n      verticalAlign: 'middle'\n    }, getXSpacingStyles(p.xSpacing, v.horizontalSpace), p.circular && Object.assign({}, getPaddedStyle(), {\n      borderRadius: '50%'\n    }), p.disabled && {\n      color: v.disabledColor\n    }, {\n      display: 'inline-block'\n    }, (p.bordered || v.borderColor) && getBorderedStyles(v.borderColor || v.color || 'currentColor'), {\n      backgroundColor: v.backgroundColor\n    });\n  },\n  outlinePart: function outlinePart(_ref2) {\n    var p = _ref2.props;\n    return Object.assign({\n      display: 'none'\n    }, p.outline && {\n      display: 'block'\n    });\n  },\n  filledPart: function filledPart(_ref3) {\n    var p = _ref3.props;\n    return Object.assign({}, p.outline && {\n      display: 'none'\n    });\n  },\n  svg: function svg(_ref4) {\n    var _ref4$props = _ref4.props,\n        size = _ref4$props.size,\n        disabled = _ref4$props.disabled,\n        rotate = _ref4$props.rotate,\n        v = _ref4.variables,\n        rtl = _ref4.rtl;\n    var iconSizeInRems = getIconSize(size, v);\n    return Object.assign({\n      display: 'block',\n      width: iconSizeInRems,\n      height: iconSizeInRems,\n      fill: v.color || 'currentColor'\n    }, disabled && {\n      fill: v.disabledColor\n    }, {\n      // Manual flipping to make it compatible with Emotion and Fela in the same time\n      transform: \"rotate(\" + rotate + \"deg) /* @noflip */\"\n    }, rtl && {\n      transform: \"rotate(\" + -1 * rotate + \"deg) /* @noflip */\"\n    });\n  },\n  svgFlippingInRtl: function svgFlippingInRtl(config) {\n    var props = config.props,\n        rtl = config.rtl;\n    return Object.assign({}, callable(svgIconStyles.svg)(config), rtl && {\n      transform: \"scaleX(-1) rotate(\" + props.rotate + \"deg) /* @noflip */\"\n    });\n  },\n  redPath: function redPath(_ref5) {\n    var v = _ref5.variables;\n    return {\n      fill: v.redColor\n    };\n  }\n};","map":{"version":3,"sources":["themes/teams/components/SvgIcon/svgIconStyles.ts"],"names":["getPaddedStyle","padding","pxToRem","getBorderedStyles","boxShadow","getIconSize","modifiedSizes","large","x","xx","v","size","getXSpacingStyles","marginLeft","marginRight","horizontalSpace","svgIconStyles","root","p","speak","verticalAlign","borderRadius","color","disabledColor","display","backgroundColor","outlinePart","props","filledPart","svg","disabled","rotate","variables","rtl","iconSizeInRems","width","height","fill","transform","svgFlippingInRtl","config","callable","redPath","redColor"],"mappings":"AAAA,SAAA,QAAA,QAAA,kBAAA;AAGA,SAAA,OAAA,QAAA,mBAAA;;AAQA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAA;AAAA,SAAsB;AAC3CC,IAAAA,OAAO,EAAEC,OAAO,CAAA,CAAA;AAD2B,GAAtB;AAAvB,CAAA;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,cAAA,EAA2C;AACnE,SAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACKH,cADL,EAAA,EAAA;AAGEI,IAAAA,SAAS,EAAA,kBAAA,cAAA,GAAA;AAHX,GAAA,CAAA;AADF,CAAA;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA,CAAA,EAAkD;AACpE,MAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,CAAC,EADI,EAAA;AAELC,MAAAA,EAAE,EAAE;AAFC;AADa,GAAtB;AAOA,SAAOC,CAAC,CAADA,YAAAA,IAAkBJ,aAAa,CAA/BI,IAA+B,CAA/BA,IAAyCJ,aAAa,CAAbA,IAAa,CAAbA,CAAoBI,CAAC,CAA9DA,YAAyCJ,CAAzCI,GACHR,OAAO,CAACI,aAAa,CAAbA,IAAa,CAAbA,CAAoBI,CAAC,CAD1BA,YACKJ,CAAD,CADJI,GAEHA,CAAC,CAAIC,IAAJ,GAFL,MAEK,CAFL;AARF,CAAA;;AAaA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,QAAA,EAAA,eAAA,EAAuE;AAC/F,UAAA,QAAA;AACE,SAAA,MAAA;AACE,aAAO;AAAEC,QAAAA,UAAU,EAAZ,CAAA;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAAP;;AACF,SAAA,QAAA;AACE,aAAO;AAAED,QAAAA,UAAU,EAAZ,eAAA;AAA+BC,QAAAA,WAAW,EAAE;AAA5C,OAAP;;AACF,SAAA,OAAA;AACE,aAAO;AAAED,QAAAA,UAAU,EAAZ,CAAA;AAAiBC,QAAAA,WAAW,EAAEC;AAA9B,OAAP;;AACF,SAAA,MAAA;AACE,aAAO;AAAEF,QAAAA,UAAU,EAAZ,eAAA;AAA+BC,QAAAA,WAAW,EAAEC;AAA5C,OAAP;AARJ;AADF,CAAA;;AAaA,OAAO,IAAMC,aAAgF,GAAG;AAC9FC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAAA;AAAA,QAAUC,CAAV,GAAA,IAAA,CAAA,KAAA;AAAA,QAAwBR,CAAxB,GAAA,IAAA,CAAA,SAAA;AAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AACJS,MAAAA,KAAK,EADD,MAAA;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAAA,EAIDR,iBAAiB,CAACM,CAAC,CAAF,QAAA,EAAaR,CAAC,CAJ9B,eAIgB,CAJhB,EAMA,CAAC,CAAD,QAAA,IAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAmBV,cAAnB,EAAA,EAAA;AAAqCqB,MAAAA,YAAY,EAAE;AAAnD,KAAA,CANA,EAOAH,CAAC,CAADA,QAAAA,IAAc;AAChBI,MAAAA,KAAK,EAAEZ,CAAC,CAACa;AADO,KAPd,EAAA;AAUJC,MAAAA,OAAO,EAAE;AAVL,KAAA,EAYA,CAACN,CAAC,CAADA,QAAAA,IAAcR,CAAC,CAAhB,WAAA,KAAiCP,iBAAiB,CAACO,CAAC,CAADA,WAAAA,IAAiBA,CAAC,CAAlBA,KAAAA,IAZnD,cAYkD,CAZlD,EAAA;AAcJe,MAAAA,eAAe,EAAEf,CAAC,CAACe;AAdf,KAAA,CAAA;AADwF,GAAA;AAkB9FC,EAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,KAAA,EAAiC;AAAA,QAAvBR,CAAuB,GAAA,KAAA,CAA9BS,KAA8B;AAC5C,WAAA,MAAA,CAAA,MAAA,CAAA;AACEH,MAAAA,OAAO,EAAE;AADX,KAAA,EAGMN,CAAC,CAADA,OAAAA,IAAa;AACfM,MAAAA,OAAO,EAAE;AADM,KAHnB,CAAA;AAnB4F,GAAA;AA4B9FI,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,KAAA,EAAiC;AAAA,QAAvBV,CAAuB,GAAA,KAAA,CAA9BS,KAA8B;AAC3C,WAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACMT,CAAC,CAADA,OAAAA,IAAa;AACfM,MAAAA,OAAO,EAAE;AADM,KADnB,CAAA;AA7B4F,GAAA;AAoC9FK,EAAAA,GAAG,EAAE,SAAA,GAAA,CAAA,KAAA,EAA6E;AAAA,QAAA,WAAA,GAAA,KAAA,CAA1EF,KAA0E;AAAA,QAAjEhB,IAAiE,GAAA,WAAA,CAAjEA,IAAiE;AAAA,QAA3DmB,QAA2D,GAAA,WAAA,CAA3DA,QAA2D;AAAA,QAAjDC,MAAiD,GAAA,WAAA,CAAjDA,MAAiD;AAAA,QAA5BrB,CAA4B,GAAA,KAAA,CAAvCsB,SAAuC;AAAA,QAAzBC,GAAyB,GAAA,KAAA,CAAzBA,GAAyB;AAChF,QAAMC,cAAc,GAAG7B,WAAW,CAAA,IAAA,EAAlC,CAAkC,CAAlC;AAEA,WAAA,MAAA,CAAA,MAAA,CAAA;AACEmB,MAAAA,OAAO,EADT,OAAA;AAEEW,MAAAA,KAAK,EAFP,cAAA;AAGEC,MAAAA,MAAM,EAHR,cAAA;AAIEC,MAAAA,IAAI,EAAE3B,CAAC,CAADA,KAAAA,IAAW;AAJnB,KAAA,EAMMoB,QAAQ,IAAI;AACdO,MAAAA,IAAI,EAAE3B,CAAC,CAACa;AADM,KANlB,EAAA;AAUE;AACAe,MAAAA,SAAS,EAAA,YAAA,MAAA,GAAA;AAXX,KAAA,EAYML,GAAG,IAAI;AACTK,MAAAA,SAAS,EAAA,YAAY,CAAA,CAAA,GAAZ,MAAA,GAAA;AADA,KAZb,CAAA;AAvC4F,GAAA;AAyD9FC,EAAAA,gBAAgB,EAAE,SAAA,gBAAA,CAAA,MAAA,EAAU;AAAA,QAClBZ,KADkB,GACHa,MADG,CAAA,KAAA;AAAA,QACXP,GADW,GACHO,MADG,CAAA,GAAA;AAE1B,WAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACKC,QAAQ,CAACzB,aAAa,CAAtByB,GAAQ,CAARA,CADL,MACKA,CADL,EAEMR,GAAG,IAAI;AACTK,MAAAA,SAAS,EAAA,uBAAuBX,KAAK,CAA5B,MAAA,GAAA;AADA,KAFb,CAAA;AA3D4F,GAAA;AAmE9Fe,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,QAAchC,CAAd,GAAA,KAAA,CAAA,SAAA;AAAA,WAAuB;AAC9B2B,MAAAA,IAAI,EAAE3B,CAAC,CAACiC;AADsB,KAAvB;AAAA;AAnEqF,CAAzF","sourcesContent":["import { callable, ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { SvgIconXSpacing, SvgIconProps } from '@fluentui/react-icons-northstar';\n\nimport { pxToRem, SizeValue } from '../../../../utils';\nimport { SvgIconVariables } from './svgIconVariables';\n\nexport type SvgIconStylesProps = Pick<\n  SvgIconProps,\n  'bordered' | 'circular' | 'disabled' | 'outline' | 'rotate' | 'size' | 'xSpacing'\n>;\n\nconst getPaddedStyle = (): ICSSInJSStyle => ({\n  padding: pxToRem(4),\n});\n\nconst getBorderedStyles = (boxShadowColor: string): ICSSInJSStyle => {\n  return {\n    ...getPaddedStyle(),\n\n    boxShadow: `0 0 0 .05rem ${boxShadowColor} inset`,\n  };\n};\n\nconst getIconSize = (size: SizeValue, v: SvgIconVariables): string => {\n  const modifiedSizes = {\n    large: {\n      x: 24,\n      xx: 28,\n    },\n  };\n\n  return v.sizeModifier && modifiedSizes[size] && modifiedSizes[size][v.sizeModifier]\n    ? pxToRem(modifiedSizes[size][v.sizeModifier])\n    : v[`${size}Size`];\n};\n\nconst getXSpacingStyles = (xSpacing: SvgIconXSpacing, horizontalSpace: string): ICSSInJSStyle => {\n  switch (xSpacing) {\n    case 'none':\n      return { marginLeft: 0, marginRight: 0 };\n    case 'before':\n      return { marginLeft: horizontalSpace, marginRight: 0 };\n    case 'after':\n      return { marginLeft: 0, marginRight: horizontalSpace };\n    case 'both':\n      return { marginLeft: horizontalSpace, marginRight: horizontalSpace };\n  }\n};\n\nexport const svgIconStyles: ComponentSlotStylesPrepared<SvgIconStylesProps, SvgIconVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    speak: 'none',\n    verticalAlign: 'middle',\n\n    ...getXSpacingStyles(p.xSpacing, v.horizontalSpace),\n\n    ...(p.circular && { ...getPaddedStyle(), borderRadius: '50%' }),\n    ...(p.disabled && {\n      color: v.disabledColor,\n    }),\n    display: 'inline-block',\n\n    ...((p.bordered || v.borderColor) && getBorderedStyles(v.borderColor || v.color || 'currentColor')),\n\n    backgroundColor: v.backgroundColor,\n  }),\n\n  outlinePart: ({ props: p }): ICSSInJSStyle => {\n    return {\n      display: 'none',\n\n      ...(p.outline && {\n        display: 'block',\n      }),\n    };\n  },\n\n  filledPart: ({ props: p }): ICSSInJSStyle => {\n    return {\n      ...(p.outline && {\n        display: 'none',\n      }),\n    };\n  },\n\n  svg: ({ props: { size, disabled, rotate }, variables: v, rtl }): ICSSInJSStyle => {\n    const iconSizeInRems = getIconSize(size, v);\n\n    return {\n      display: 'block',\n      width: iconSizeInRems,\n      height: iconSizeInRems,\n      fill: v.color || 'currentColor',\n\n      ...(disabled && {\n        fill: v.disabledColor,\n      }),\n\n      // Manual flipping to make it compatible with Emotion and Fela in the same time\n      transform: `rotate(${rotate}deg) /* @noflip */`,\n      ...(rtl && {\n        transform: `rotate(${-1 * rotate}deg) /* @noflip */`,\n      }),\n    };\n  },\n\n  svgFlippingInRtl: config => {\n    const { props, rtl } = config;\n    return {\n      ...callable(svgIconStyles.svg)(config),\n      ...(rtl && {\n        transform: `scaleX(-1) rotate(${props.rotate}deg) /* @noflip */`,\n      }),\n    };\n  },\n\n  redPath: ({ variables: v }) => ({\n    fill: v.redColor,\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}