{"ast":null,"code":"import _get from \"lodash/get\";\nimport { pxToRem } from '../../../../utils';\nvar toggleMovementDistance = pxToRem(20);\nvar padding = pxToRem(2);\nvar defaultValue = 'red';\nexport var checkboxVariables = function checkboxVariables(siteVars) {\n  return {\n    checkboxColor: 'transparent',\n    toggleBackground: 'transparent',\n    toggleBorderColor: siteVars.colors.grey[300],\n    toggleBorderStyle: \"solid\",\n    toggleBorderWidth: pxToRem(1),\n    toggleIndicatorColor: 'inherit',\n    checkboxCheckedColor: siteVars.colors.grey[500],\n    checkboxToggleCheckedBackground: 'transparent',\n    checkboxToggleCheckedBorderColor: siteVars.colors.grey[500],\n    checkboxToggleCheckedColor: 'inherit',\n    disabledColor: siteVars.colors.grey[300],\n    disabledCheckboxColor: siteVars.colors.grey[300],\n    disabledToggleBackground: 'transparent',\n    disabledToggleBorderColor: siteVars.colors.grey[200],\n    textColor: _get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n    background: 'transparent',\n    borderColor: _get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n    borderStyle: 'solid',\n    borderRadius: pxToRem(3),\n    borderWidth: pxToRem(1),\n    indicatorColor: 'transparent',\n    gap: pxToRem(12),\n    margin: pxToRem(2.8) + \" 0 0 0\",\n    padding: padding,\n    rootPadding: '3px 5px',\n    textColorHover: _get(siteVars, 'colorScheme.default.foreground', defaultValue),\n    borderColorHover: _get(siteVars, 'colorScheme.default.foreground', defaultValue),\n    checkedBackgroundHover: _get(siteVars, 'colorScheme.brand.backgroundHover', defaultValue),\n    toggleBorderRadius: pxToRem(999),\n    toggleIndicatorSize: pxToRem(14),\n    toggleMargin: '0',\n    togglePadding: padding + \" \" + toggleMovementDistance + \" \" + padding + \" \" + padding,\n    toggleWidth: pxToRem(38),\n    toggleHeight: pxToRem(20),\n    checkedTextColor: _get(siteVars, 'colorScheme.default.foreground', defaultValue),\n    checkedBackground: _get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n    checkedBorderColor: _get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n    checkedIndicatorColor: _get(siteVars, 'colorScheme.default.background', defaultValue),\n    toggleCheckedPadding: padding + \" \" + padding + \" \" + padding + \" \" + toggleMovementDistance,\n    disabledBackground: _get(siteVars, 'colorScheme.default.background', defaultValue),\n    disabledBackgroundChecked: _get(siteVars, 'colorScheme.default.backgroundDisabled', defaultValue),\n    disabledBorderColor: _get(siteVars, 'colorScheme.default.foregroundDisabled1', defaultValue),\n    disabledCheckedIndicatorColor: _get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n    disabledToggleIndicatorColor: _get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue)\n  };\n};","map":{"version":3,"sources":["themes/teams/components/Checkbox/checkboxVariables.ts"],"names":["toggleMovementDistance","pxToRem","padding","defaultValue","checkboxVariables","checkboxColor","toggleBackground","toggleBorderColor","siteVars","toggleBorderStyle","toggleBorderWidth","toggleIndicatorColor","checkboxCheckedColor","checkboxToggleCheckedBackground","checkboxToggleCheckedBorderColor","checkboxToggleCheckedColor","disabledColor","disabledCheckboxColor","disabledToggleBackground","disabledToggleBorderColor","textColor","background","borderColor","borderStyle","borderRadius","borderWidth","indicatorColor","gap","margin","rootPadding","textColorHover","borderColorHover","checkedBackgroundHover","toggleBorderRadius","toggleIndicatorSize","toggleMargin","togglePadding","toggleWidth","toggleHeight","checkedTextColor","checkedBackground","checkedBorderColor","checkedIndicatorColor","toggleCheckedPadding","disabledBackground","disabledBackgroundChecked","disabledBorderColor","disabledCheckedIndicatorColor","disabledToggleIndicatorColor"],"mappings":"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","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport * as _ from 'lodash';\n\nexport type CheckboxVariables = {\n  rootPadding: string;\n\n  textColor: string;\n  indicatorColor: string;\n\n  textColorHover: string;\n  borderColorHover: string;\n  background: string;\n  borderColor: string;\n  borderStyle: string;\n  borderRadius: string;\n  borderWidth: string;\n  checkboxColor: string;\n  gap: string;\n  margin: string;\n  padding: string;\n\n  toggleBackground: string;\n  toggleBorderColor: string;\n  toggleBorderStyle: string;\n  toggleBorderRadius: string;\n  toggleBorderWidth: string;\n  toggleIndicatorColor: string;\n  toggleMargin: string;\n  togglePadding: string;\n\n  checkedBackground: string;\n  checkedBorderColor: string;\n  checkboxCheckedColor: string;\n  checkedBackgroundHover: string;\n  checkedTextColor: string;\n  checkedIndicatorColor: string;\n  checkboxToggleCheckedColor: string;\n  checkboxToggleCheckedBackground: string;\n  checkboxToggleCheckedBorderColor: string;\n  toggleCheckedPadding: string;\n  toggleIndicatorSize: string;\n  toggleWidth: string;\n  toggleHeight: string;\n\n  disabledColor: string;\n  disabledBackground: string;\n  disabledBorderColor: string;\n  disabledCheckboxColor: string;\n  disabledToggleIndicatorColor: string;\n  disabledToggleBackground: string;\n  disabledToggleBorderColor: string;\n  disabledBackgroundChecked: string;\n  disabledCheckedIndicatorColor: string;\n};\n\nconst toggleMovementDistance = pxToRem(20);\nconst padding = pxToRem(2);\nconst defaultValue = 'red';\n\nexport const checkboxVariables = (siteVars: any): CheckboxVariables => ({\n  checkboxColor: 'transparent',\n\n  toggleBackground: 'transparent',\n  toggleBorderColor: siteVars.colors.grey[300],\n  toggleBorderStyle: `solid`,\n  toggleBorderWidth: pxToRem(1),\n  toggleIndicatorColor: 'inherit',\n\n  checkboxCheckedColor: siteVars.colors.grey[500],\n  checkboxToggleCheckedBackground: 'transparent',\n  checkboxToggleCheckedBorderColor: siteVars.colors.grey[500],\n  checkboxToggleCheckedColor: 'inherit',\n\n  disabledColor: siteVars.colors.grey[300],\n\n  disabledCheckboxColor: siteVars.colors.grey[300],\n  disabledToggleBackground: 'transparent',\n  disabledToggleBorderColor: siteVars.colors.grey[200],\n  textColor: _.get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n  background: 'transparent',\n  borderColor: _.get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n  borderStyle: 'solid',\n  borderRadius: pxToRem(3),\n  borderWidth: pxToRem(1),\n  indicatorColor: 'transparent',\n  gap: pxToRem(12),\n  margin: `${pxToRem(2.8)} 0 0 0`,\n  padding,\n  rootPadding: '3px 5px',\n\n  textColorHover: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  borderColorHover: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  checkedBackgroundHover: _.get(siteVars, 'colorScheme.brand.backgroundHover', defaultValue),\n\n  toggleBorderRadius: pxToRem(999),\n  toggleIndicatorSize: pxToRem(14),\n  toggleMargin: '0',\n  togglePadding: `${padding} ${toggleMovementDistance} ${padding} ${padding}`,\n  toggleWidth: pxToRem(38),\n  toggleHeight: pxToRem(20),\n\n  checkedTextColor: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  checkedBackground: _.get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n  checkedBorderColor: _.get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n  checkedIndicatorColor: _.get(siteVars, 'colorScheme.default.background', defaultValue),\n  toggleCheckedPadding: `${padding} ${padding} ${padding} ${toggleMovementDistance}`,\n\n  disabledBackground: _.get(siteVars, 'colorScheme.default.background', defaultValue),\n  disabledBackgroundChecked: _.get(siteVars, 'colorScheme.default.backgroundDisabled', defaultValue),\n  disabledBorderColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled1', defaultValue),\n  disabledCheckedIndicatorColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n  disabledToggleIndicatorColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n});\n"]},"metadata":{},"sourceType":"module"}