{"ast":null,"code":"import { formatDay } from './formatDay';\nimport { formatYear } from './formatYear';\nimport { formatMonthDayYear } from './formatMonthDayYear';\nimport { formatMonthYear } from './formatMonthYear';\nexport var DEFAULT_LOCALIZED_STRINGS = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\nexport var DEFAULT_DATE_FORMATTING = Object.assign({\n  formatDay: formatDay,\n  formatYear: formatYear,\n  formatMonthDayYear: formatMonthDayYear,\n  formatMonthYear: formatMonthYear,\n  parseDate: function parseDate(dateStr) {\n    var date = Date.parse(dateStr);\n\n    if (date) {\n      return new Date(date);\n    }\n\n    return null;\n  }\n}, DEFAULT_LOCALIZED_STRINGS);\nexport var DEFAULT_CALENDAR_STRINGS = Object.assign({}, DEFAULT_DATE_FORMATTING, {\n  goToToday: 'Go to today',\n  openCalendarTitle: 'Open calendar',\n  inputPlaceholder: 'Select a date...',\n  weekNumberFormatString: 'Week number {0}',\n  prevMonthAriaLabel: 'Previous month',\n  nextMonthAriaLabel: 'Next month',\n  prevYearAriaLabel: 'Previous year',\n  nextYearAriaLabel: 'Next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close',\n  selectedDateFormatString: 'Selected date {0}',\n  todayDateFormatString: \"Today's date {0}\",\n  monthPickerHeaderAriaLabel: '{0}, select to change the year',\n  yearPickerHeaderAriaLabel: '{0}, select to change the month',\n  isRequiredErrorMessage: 'A date selection is required',\n  invalidInputErrorMessage: 'Manually entered date is not in correct format.',\n  isOutOfBoundsErrorMessage: 'The selected date is from the restricted range.',\n  inputAriaLabel: 'Select a date.',\n  inputBoundedFormatString: 'Input a date between {0} and {1}.',\n  inputMinBoundedFormatString: 'Input a date starting from {0}.',\n  inputMaxBoundedFormatString: 'Input a date ending at {0}.'\n});","map":{"version":3,"sources":["utils/date-time-utilities/dateFormatting/dateFormatting.defaults.ts"],"names":["DEFAULT_LOCALIZED_STRINGS","months","shortMonths","days","shortDays","DEFAULT_DATE_FORMATTING","formatDay","formatYear","formatMonthDayYear","formatMonthYear","parseDate","date","Date","DEFAULT_CALENDAR_STRINGS","goToToday","openCalendarTitle","inputPlaceholder","weekNumberFormatString","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","closeButtonAriaLabel","selectedDateFormatString","todayDateFormatString","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","inputAriaLabel","inputBoundedFormatString","inputMinBoundedFormatString","inputMaxBoundedFormatString"],"mappings":"AACA,SAAA,SAAA,QAAA,aAAA;AACA,SAAA,UAAA,QAAA,cAAA;AACA,SAAA,kBAAA,QAAA,sBAAA;AACA,SAAA,eAAA,QAAA,mBAAA;AAEA,OAAO,IAAMA,yBAA2C,GAAG;AACzDC,EAAAA,MAAM,EAAE,CAAA,SAAA,EAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAA,SAAA,EAAA,UAAA,EADiD,UACjD,CADiD;AAezDC,EAAAA,WAAW,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAf4C,KAe5C,CAf4C;AAgBzDC,EAAAA,IAAI,EAAE,CAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,QAAA,EAhBmD,UAgBnD,CAhBmD;AAiBzDC,EAAAA,SAAS,EAAE,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA;AAjB8C,CAApD;AAoBP,OAAO,IAAMC,uBAAwC,GAAA,MAAA,CAAA,MAAA,CAAA;AACnDC,EAAAA,SAAS,EAD0C,SAAA;AAEnDC,EAAAA,UAAU,EAFyC,UAAA;AAGnDC,EAAAA,kBAAkB,EAHiC,kBAAA;AAInDC,EAAAA,eAAe,EAJoC,eAAA;AAKnDC,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,OAAA,EAAqB;AAC9B,QAAMC,IAAI,GAAGC,IAAI,CAAJA,KAAAA,CAAb,OAAaA,CAAb;;AACA,QAAA,IAAA,EAAU;AACR,aAAO,IAAA,IAAA,CAAP,IAAO,CAAP;AACD;;AAED,WAAA,IAAA;AACD;AAZkD,CAAA,EAA9C,yBAA8C,CAA9C;AAgBP,OAAO,IAAMC,wBAA0C,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,uBAAA,EAAA;AAGrDC,EAAAA,SAAS,EAH4C,aAAA;AAIrDC,EAAAA,iBAAiB,EAJoC,eAAA;AAKrDC,EAAAA,gBAAgB,EALqC,kBAAA;AAMrDC,EAAAA,sBAAsB,EAN+B,iBAAA;AAOrDC,EAAAA,kBAAkB,EAPmC,gBAAA;AAQrDC,EAAAA,kBAAkB,EARmC,YAAA;AASrDC,EAAAA,iBAAiB,EAToC,eAAA;AAUrDC,EAAAA,iBAAiB,EAVoC,WAAA;AAWrDC,EAAAA,sBAAsB,EAX+B,qBAAA;AAYrDC,EAAAA,sBAAsB,EAZ+B,iBAAA;AAarDC,EAAAA,oBAAoB,EAbiC,OAAA;AAcrDC,EAAAA,wBAAwB,EAd6B,mBAAA;AAerDC,EAAAA,qBAAqB,EAfgC,kBAAA;AAgBrDC,EAAAA,0BAA0B,EAhB2B,gCAAA;AAiBrDC,EAAAA,yBAAyB,EAjB4B,iCAAA;AAkBrDC,EAAAA,sBAAsB,EAlB+B,8BAAA;AAmBrDC,EAAAA,wBAAwB,EAnB6B,iDAAA;AAoBrDC,EAAAA,yBAAyB,EApB4B,iDAAA;AAqBrDC,EAAAA,cAAc,EArBuC,gBAAA;AAsBrDC,EAAAA,wBAAwB,EAtB6B,mCAAA;AAuBrDC,EAAAA,2BAA2B,EAvB0B,iCAAA;AAwBrDC,EAAAA,2BAA2B,EAAE;AAxBwB,CAAA,CAAhD","sourcesContent":["import { IDateGridStrings, IDateFormatting, ICalendarStrings } from './dateFormatting.types';\nimport { formatDay } from './formatDay';\nimport { formatYear } from './formatYear';\nimport { formatMonthDayYear } from './formatMonthDayYear';\nimport { formatMonthYear } from './formatMonthYear';\n\nexport const DEFAULT_LOCALIZED_STRINGS: IDateGridStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n};\n\nexport const DEFAULT_DATE_FORMATTING: IDateFormatting = {\n  formatDay,\n  formatYear,\n  formatMonthDayYear,\n  formatMonthYear,\n  parseDate: (dateStr: string) => {\n    const date = Date.parse(dateStr);\n    if (date) {\n      return new Date(date);\n    }\n\n    return null;\n  },\n  ...DEFAULT_LOCALIZED_STRINGS,\n};\n\nexport const DEFAULT_CALENDAR_STRINGS: ICalendarStrings = {\n  ...DEFAULT_DATE_FORMATTING,\n\n  goToToday: 'Go to today',\n  openCalendarTitle: 'Open calendar',\n  inputPlaceholder: 'Select a date...',\n  weekNumberFormatString: 'Week number {0}',\n  prevMonthAriaLabel: 'Previous month',\n  nextMonthAriaLabel: 'Next month',\n  prevYearAriaLabel: 'Previous year',\n  nextYearAriaLabel: 'Next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close',\n  selectedDateFormatString: 'Selected date {0}',\n  todayDateFormatString: \"Today's date {0}\",\n  monthPickerHeaderAriaLabel: '{0}, select to change the year',\n  yearPickerHeaderAriaLabel: '{0}, select to change the month',\n  isRequiredErrorMessage: 'A date selection is required',\n  invalidInputErrorMessage: 'Manually entered date is not in correct format.',\n  isOutOfBoundsErrorMessage: 'The selected date is from the restricted range.',\n  inputAriaLabel: 'Select a date.',\n  inputBoundedFormatString: 'Input a date between {0} and {1}.',\n  inputMinBoundedFormatString: 'Input a date starting from {0}.',\n  inputMaxBoundedFormatString: 'Input a date ending at {0}.',\n};\n"]},"metadata":{},"sourceType":"module"}