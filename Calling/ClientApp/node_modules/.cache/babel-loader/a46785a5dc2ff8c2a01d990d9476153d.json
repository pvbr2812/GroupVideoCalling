{"ast":null,"code":"/**\n * @description\n * Loader is usually an element that displays the progress status for a task that take a long time or consists of several steps.\n * Adds attribute 'aria-labelledby' on 'root' when loader has 'tabIndex' prop. This can be overriden by providing 'aria-labelledby' or 'aria-label' property directly to the component.\n *\n * @specification\n * Adds role 'progressbar' to 'root' slot.\n */\nexport var loaderBehavior = function loaderBehavior(props) {\n  return {\n    attributes: {\n      root: {\n        role: 'progressbar',\n        'aria-labelledby': getDefaultAriaLabelledBy(props)\n      }\n    }\n  };\n};\n/**\n * Returns the id of the loader label if user provide tabIndex prop. It is used when user does not provide aria-label or\n * aria-labelledby as prop.\n */\n\nvar getDefaultAriaLabelledBy = function getDefaultAriaLabelledBy(props) {\n  if (props['aria-label'] || props['aria-labelledby']) {\n    return undefined;\n  }\n\n  return props['tabIndex'] === undefined ? undefined : props.labelId;\n};","map":{"version":3,"sources":["behaviors/Loader/loaderBehavior.ts"],"names":["loaderBehavior","attributes","root","role","getDefaultAriaLabelledBy","props"],"mappings":"AAEA;;;;;;;;AAQA,OAAO,IAAMA,cAAkD,GAAG,SAArDA,cAAqD,CAAA,KAAA,EAAS;AACzE,SAAO;AACLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EADA,aAAA;AAEJ,2BAAmBC,wBAAwB,CAAA,KAAA;AAFvC;AADI;AADP,GAAP;AADK,CAAA;AAgBP;;;;;AAIA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA,KAAA,EAAgC;AAC/D,MAAIC,KAAK,CAALA,YAAK,CAALA,IAAuBA,KAAK,CAAhC,iBAAgC,CAAhC,EAAqD;AACnD,WAAA,SAAA;AACD;;AACD,SAAOA,KAAK,CAALA,UAAK,CAALA,KAAAA,SAAAA,GAAAA,SAAAA,GAA8CA,KAAK,CAA1D,OAAA;AAJF,CAAA","sourcesContent":["import { Accessibility } from '../../types';\n\n/**\n * @description\n * Loader is usually an element that displays the progress status for a task that take a long time or consists of several steps.\n * Adds attribute 'aria-labelledby' on 'root' when loader has 'tabIndex' prop. This can be overriden by providing 'aria-labelledby' or 'aria-label' property directly to the component.\n *\n * @specification\n * Adds role 'progressbar' to 'root' slot.\n */\nexport const loaderBehavior: Accessibility<LoaderBehaviorProps> = props => {\n  return {\n    attributes: {\n      root: {\n        role: 'progressbar',\n        'aria-labelledby': getDefaultAriaLabelledBy(props),\n      },\n    },\n  };\n};\n\nexport type LoaderBehaviorProps = {\n  /** id of the loader label element. */\n  labelId?: string;\n};\n\n/**\n * Returns the id of the loader label if user provide tabIndex prop. It is used when user does not provide aria-label or\n * aria-labelledby as prop.\n */\nconst getDefaultAriaLabelledBy = (props: LoaderBehaviorProps) => {\n  if (props['aria-label'] || props['aria-labelledby']) {\n    return undefined;\n  }\n  return props['tabIndex'] === undefined ? undefined : props.labelId;\n};\n"]},"metadata":{},"sourceType":"module"}