{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport { listItemBehavior } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useFluentContext, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Box } from '../Box/Box';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { ListContext } from './listContext';\nexport var listItemClassName = 'ui-list__item';\nexport var listItemSlotClassNames = {\n  header: listItemClassName + \"__header\",\n  headerMedia: listItemClassName + \"__headerMedia\",\n  headerWrapper: listItemClassName + \"__headerWrapper\",\n  main: listItemClassName + \"__main\",\n  content: listItemClassName + \"__content\",\n  contentMedia: listItemClassName + \"__contentMedia\",\n  contentWrapper: listItemClassName + \"__contentWrapper\",\n  media: listItemClassName + \"__media\",\n  endMedia: listItemClassName + \"__endMedia\"\n};\n/**\n * A ListItem contains a single piece of content within a List.\n */\n\nexport var ListItem = /*#__PURE__*/function () {\n  var ListItem = function ListItem(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(ListItem.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var accessibility = props.accessibility,\n        className = props.className,\n        content = props.content,\n        contentMedia = props.contentMedia,\n        design = props.design,\n        endMedia = props.endMedia,\n        header = props.header,\n        important = props.important,\n        headerMedia = props.headerMedia,\n        media = props.media,\n        styles = props.styles;\n    var parentProps = useContextSelectors(ListContext, {\n      debug: function debug(v) {\n        return v.debug;\n      },\n      navigable: function navigable(v) {\n        return v.navigable;\n      },\n      selectable: function selectable(v) {\n        return v.selectable;\n      },\n      truncateContent: function truncateContent(v) {\n        return v.truncateContent;\n      },\n      truncateHeader: function truncateHeader(v) {\n        return v.truncateHeader;\n      },\n      variables: function variables(v) {\n        return v.variables;\n      },\n      onItemClick: function onItemClick(v) {\n        return v.onItemClick;\n      },\n      selected: function selected(v) {\n        return v.selectedIndex === props.index;\n      }\n    });\n    var _props$debug = props.debug,\n        debug = _props$debug === void 0 ? parentProps.debug : _props$debug,\n        _props$navigable = props.navigable,\n        navigable = _props$navigable === void 0 ? parentProps.navigable : _props$navigable,\n        _props$selectable = props.selectable,\n        selectable = _props$selectable === void 0 ? parentProps.selectable : _props$selectable,\n        _props$selected = props.selected,\n        selected = _props$selected === void 0 ? parentProps.selected : _props$selected,\n        _props$truncateConten = props.truncateContent,\n        truncateContent = _props$truncateConten === void 0 ? parentProps.truncateContent : _props$truncateConten,\n        _props$truncateHeader = props.truncateHeader,\n        truncateHeader = _props$truncateHeader === void 0 ? parentProps.truncateHeader : _props$truncateHeader,\n        _props$variables = props.variables,\n        variables = _props$variables === void 0 ? parentProps.variables : _props$variables;\n    var getA11Props = useAccessibility(accessibility, {\n      debugName: ListItem.displayName,\n      actionHandlers: {\n        performClick: function performClick(e) {\n          e.preventDefault();\n          handleClick(e);\n        }\n      },\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          navigable: navigable,\n          selectable: selectable,\n          selected: selected\n        };\n      },\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(ListItem.displayName, {\n      className: listItemClassName,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          debug: debug,\n          navigable: navigable,\n          important: important,\n          selectable: selectable,\n          selected: selected,\n          truncateContent: truncateContent,\n          truncateHeader: truncateHeader,\n          hasContent: !!content,\n          hasContentMedia: !!contentMedia,\n          hasHeader: !!header,\n          hasHeaderMedia: !!headerMedia\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes,\n        resolvedStyles = _useStyles.styles;\n\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(ListItem.handledProps, props);\n\n    var handleClick = function handleClick(e) {\n      _invoke(props, 'onClick', e, props);\n\n      parentProps.onItemClick(e, props.index);\n    };\n\n    var contentElement = Box.create(content, {\n      defaultProps: function defaultProps() {\n        return {\n          className: listItemSlotClassNames.content,\n          styles: resolvedStyles.content\n        };\n      }\n    });\n    var contentMediaElement = Box.create(contentMedia, {\n      defaultProps: function defaultProps() {\n        return {\n          className: listItemSlotClassNames.contentMedia,\n          styles: resolvedStyles.contentMedia\n        };\n      }\n    });\n    var headerElement = Box.create(header, {\n      defaultProps: function defaultProps() {\n        return {\n          className: listItemSlotClassNames.header,\n          styles: resolvedStyles.header\n        };\n      }\n    });\n    var headerMediaElement = Box.create(headerMedia, {\n      defaultProps: function defaultProps() {\n        return {\n          className: listItemSlotClassNames.headerMedia,\n          styles: resolvedStyles.headerMedia\n        };\n      }\n    });\n    var endMediaElement = Box.create(endMedia, {\n      defaultProps: function defaultProps() {\n        return {\n          className: listItemSlotClassNames.endMedia,\n          styles: resolvedStyles.endMedia\n        };\n      }\n    });\n    var mediaElement = Box.create(media, {\n      defaultProps: function defaultProps() {\n        return {\n          className: listItemSlotClassNames.media,\n          styles: resolvedStyles.media\n        };\n      }\n    });\n    var element = getA11Props.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({\n      className: classes.root,\n      onClick: handleClick\n    }, unhandledProps)), mediaElement, /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(listItemSlotClassNames.main, classes.main)\n    }, (headerElement || headerMediaElement) && /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(listItemSlotClassNames.headerWrapper, classes.headerWrapper)\n    }, headerElement, headerMediaElement), (contentElement || contentMediaElement) && /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(listItemSlotClassNames.contentWrapper, classes.contentWrapper)\n    }, contentElement, contentMediaElement)), endMediaElement));\n    setEnd();\n    return element;\n  };\n\n  ListItem.displayName = 'ListItem';\n  ListItem.defaultProps = {\n    as: 'li',\n    accessibility: listItemBehavior\n  };\n  ListItem.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: false\n  }), {\n    contentMedia: PropTypes.any,\n    content: PropTypes.any,\n    debug: PropTypes.bool,\n    header: PropTypes.any,\n    endMedia: PropTypes.any,\n    headerMedia: PropTypes.any,\n    important: PropTypes.bool,\n    media: PropTypes.any,\n    selectable: PropTypes.bool,\n    navigable: PropTypes.bool,\n    index: PropTypes.number,\n    selected: PropTypes.bool,\n    truncateContent: PropTypes.bool,\n    truncateHeader: PropTypes.bool,\n    onClick: PropTypes.func\n  });\n  ListItem.handledProps = Object.keys(ListItem.propTypes);\n  ListItem.create = createShorthandFactory({\n    Component: ListItem,\n    mappedProp: 'content'\n  });\n  return ListItem;\n}();","map":{"version":3,"sources":["components/List/ListItem.tsx"],"names":["listItemClassName","listItemSlotClassNames","header","headerMedia","headerWrapper","main","content","contentMedia","contentWrapper","media","endMedia","ListItem","context","useFluentContext","setStart","setEnd","useTelemetry","accessibility","className","design","important","styles","props","parentProps","useContextSelectors","debug","v","navigable","selectable","truncateContent","truncateHeader","variables","onItemClick","selected","getA11Props","useAccessibility","debugName","actionHandlers","performClick","e","handleClick","mapPropsToBehavior","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","hasContent","hasContentMedia","hasHeader","hasHeaderMedia","mapPropsToInlineStyles","ElementType","getElementType","unhandledProps","useUnhandledProps","contentElement","defaultProps","contentMediaElement","headerElement","headerMediaElement","endMediaElement","mediaElement","element","onClick","cx","as","listItemBehavior","PropTypes","index","func","Object","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, listItemBehavior, ListItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { Box, BoxProps } from '../Box/Box';\nimport { ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { createShorthandFactory, UIComponentProps, commonPropTypes, ContentComponentProps } from '../../utils';\nimport { ListContext, ListContextSubscribedValue } from './listContext';\n\nexport interface ListItemSlotClassNames {\n  header: string;\n  headerMedia: string;\n  headerWrapper: string;\n  content: string;\n  contentMedia: string;\n  contentWrapper: string;\n  main: string;\n  media: string;\n  endMedia: string;\n}\n\nexport interface ListItemProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ListItemBehaviorProps>;\n  contentMedia?: ShorthandValue<BoxProps>;\n  /** Toggle debug mode. */\n  debug?: boolean;\n  header?: ShorthandValue<BoxProps>;\n  endMedia?: ShorthandValue<BoxProps>;\n  headerMedia?: ShorthandValue<BoxProps>;\n\n  /** A list item can appear more important and draw the user's attention. */\n  important?: boolean;\n  media?: ShorthandValue<BoxProps>;\n\n  index?: number;\n  /** A list item can indicate that it can be selected. */\n  selectable?: boolean;\n\n  /** A list item can indicate that it can be navigable. */\n  navigable?: boolean;\n\n  /** Indicates if the current list item is selected. */\n  selected?: boolean;\n  truncateContent?: boolean;\n  truncateHeader?: boolean;\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ListItemProps>;\n}\n\nexport type ListItemStylesProps = Pick<\n  ListItemProps,\n  'debug' | 'important' | 'navigable' | 'selectable' | 'selected' | 'truncateContent' | 'truncateHeader'\n> & {\n  hasContent?: boolean;\n  hasContentMedia?: boolean;\n  hasHeader?: boolean;\n  hasHeaderMedia?: boolean;\n};\n\nexport const listItemClassName = 'ui-list__item';\nexport const listItemSlotClassNames: ListItemSlotClassNames = {\n  header: `${listItemClassName}__header`,\n  headerMedia: `${listItemClassName}__headerMedia`,\n  headerWrapper: `${listItemClassName}__headerWrapper`,\n  main: `${listItemClassName}__main`,\n  content: `${listItemClassName}__content`,\n  contentMedia: `${listItemClassName}__contentMedia`,\n  contentWrapper: `${listItemClassName}__contentWrapper`,\n  media: `${listItemClassName}__media`,\n  endMedia: `${listItemClassName}__endMedia`,\n};\n\n/**\n * A ListItem contains a single piece of content within a List.\n */\nexport const ListItem: ComponentWithAs<'li', ListItemProps & { index: number }> &\n  FluentComponentStaticProps<ListItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ListItem.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    accessibility,\n    className,\n    content,\n    contentMedia,\n    design,\n    endMedia,\n    header,\n    important,\n    headerMedia,\n    media,\n    styles,\n  } = props;\n\n  const parentProps: ListContextSubscribedValue = useContextSelectors(ListContext, {\n    debug: v => v.debug,\n    navigable: v => v.navigable,\n    selectable: v => v.selectable,\n    truncateContent: v => v.truncateContent,\n    truncateHeader: v => v.truncateHeader,\n    variables: v => v.variables,\n    onItemClick: v => v.onItemClick,\n    selected: v => v.selectedIndex === props.index,\n  });\n  const {\n    debug = parentProps.debug,\n    navigable = parentProps.navigable,\n    selectable = parentProps.selectable,\n    selected = parentProps.selected,\n    truncateContent = parentProps.truncateContent,\n    truncateHeader = parentProps.truncateHeader,\n    variables = parentProps.variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: ListItem.displayName,\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      navigable,\n      selectable,\n      selected,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ListItemStylesProps>(ListItem.displayName, {\n    className: listItemClassName,\n    mapPropsToStyles: () => ({\n      debug,\n      navigable,\n      important,\n      selectable,\n      selected,\n      truncateContent,\n      truncateHeader,\n\n      hasContent: !!content,\n      hasContentMedia: !!contentMedia,\n      hasHeader: !!header,\n      hasHeaderMedia: !!headerMedia,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ListItem.handledProps, props);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n    parentProps.onItemClick(e, props.index);\n  };\n\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n  const contentMediaElement = Box.create(contentMedia, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.contentMedia,\n      styles: resolvedStyles.contentMedia,\n    }),\n  });\n  const headerElement = Box.create(header, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.header,\n      styles: resolvedStyles.header,\n    }),\n  });\n  const headerMediaElement = Box.create(headerMedia, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.headerMedia,\n      styles: resolvedStyles.headerMedia,\n    }),\n  });\n  const endMediaElement = Box.create(endMedia, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.endMedia,\n      styles: resolvedStyles.endMedia,\n    }),\n  });\n  const mediaElement = Box.create(media, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.media,\n      styles: resolvedStyles.media,\n    }),\n  });\n\n  const element = getA11Props.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n    >\n      {mediaElement}\n\n      <div className={cx(listItemSlotClassNames.main, classes.main)}>\n        {(headerElement || headerMediaElement) && (\n          <div className={cx(listItemSlotClassNames.headerWrapper, classes.headerWrapper)}>\n            {headerElement}\n            {headerMediaElement}\n          </div>\n        )}\n        {(contentElement || contentMediaElement) && (\n          <div className={cx(listItemSlotClassNames.contentWrapper, classes.contentWrapper)}>\n            {contentElement}\n            {contentMediaElement}\n          </div>\n        )}\n      </div>\n\n      {endMediaElement}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n};\n\nListItem.displayName = 'ListItem';\n\nListItem.defaultProps = {\n  as: 'li',\n  accessibility: listItemBehavior,\n};\n\nListItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentMedia: PropTypes.any,\n  content: PropTypes.any,\n\n  debug: PropTypes.bool,\n\n  header: PropTypes.any,\n  endMedia: PropTypes.any,\n  headerMedia: PropTypes.any,\n\n  important: PropTypes.bool,\n  media: PropTypes.any,\n\n  selectable: PropTypes.bool,\n  navigable: PropTypes.bool,\n  index: PropTypes.number,\n  selected: PropTypes.bool,\n\n  truncateContent: PropTypes.bool,\n  truncateHeader: PropTypes.bool,\n\n  onClick: PropTypes.func,\n};\nListItem.handledProps = Object.keys(ListItem.propTypes) as any;\n\nListItem.create = createShorthandFactory({ Component: ListItem, mappedProp: 'content' });\n"]},"metadata":{},"sourceType":"module"}