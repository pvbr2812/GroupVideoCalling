{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport { RefStack } from './utils/RefStack';\nimport { NestingContext } from './NestingContext';\nexport var NestingRoot = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(NestingRoot, _React$Component);\n\n  function NestingRoot() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.registry = new RefStack();\n    _this.parentRef = /*#__PURE__*/React.createRef();\n\n    _this.getRefs = function () {\n      return _this.registry.getContextRefs(_this.parentRef);\n    };\n\n    return _this;\n  }\n\n  var _proto = NestingRoot.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.registry.register(this.parentRef);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.registry.unregister(this.parentRef);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(NestingContext.Provider, {\n      value: this.registry\n    }, this.props.children(this.getRefs, this.parentRef));\n  };\n\n  return NestingRoot;\n}(React.Component);","map":{"version":3,"sources":["NestingRoot.tsx"],"names":["NestingRoot","React","componentDidMount","componentWillUnmount","render","registry"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,SAAA,QAAA,QAAA,kBAAA;AACA,SAAA,cAAA,QAAA,kBAAA;AAGA,OAAA,IAAaA,WAAb,GAAA,aAAA,UAAA,gBAAA,EAAA;AAAA,EAAA,cAAA,CAAA,WAAA,EAAA,gBAAA,CAAA;;AAAA,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AAAA;;AAAA,IAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,KAAA,IAAA;AAAA,IAAA,KAAA,CAAA,QAAA,GACa,IADb,QACa,EADb;AAAA,IAAA,KAAA,CAAA,SAAA,GAAA,aAEcC,KAAK,CAFnB,SAEcA,EAFd;;AAAA,IAAA,KAAA,CAAA,OAAA,GAYY,YAAA;AAAA,aAAiB,KAAA,CAAA,QAAA,CAAA,cAAA,CAA6B,KAAA,CAA9C,SAAiB,CAAjB;AAZZ,KAAA;;AAAA,WAAA,KAAA;AAAA;;AAAA,MAAA,MAAA,GAAA,WAAA,CAAA,SAAA;;AAAA,EAAA,MAAA,CAAA,iBAAA,GAIEC,SAAAA,iBAAAA,GAAoB;AAClB,SAAA,QAAA,CAAA,QAAA,CAAuB,KAAvB,SAAA;AALJ,GAAA;;AAAA,EAAA,MAAA,CAAA,oBAAA,GAQEC,SAAAA,oBAAAA,GAAuB;AACrB,SAAA,QAAA,CAAA,UAAA,CAAyB,KAAzB,SAAA;AATJ,GAAA;;AAAA,EAAA,MAAA,CAAA,MAAA,GAcEC,SAAAA,MAAAA,GAAS;AACP,WAAA,aACE,KAAA,CAAA,aAAA,CAAC,cAAD,CAAA,QAAA,EAAA;AAAyB,MAAA,KAAK,EAAE,KAAKC;AAArC,KAAA,EACG,KAAA,KAAA,CAAA,QAAA,CAAoB,KAApB,OAAA,EAAkC,KAFvC,SAEK,CADH,CADF;AAfJ,GAAA;;AAAA,SAAA,WAAA;AAAA,CAAA,CAAiDJ,KAAK,CAAtD,SAAA,CAAA","sourcesContent":["import * as React from 'react';\n\nimport { RefStack } from './utils/RefStack';\nimport { NestingContext } from './NestingContext';\nimport { NestingProps, NodeRef } from './types';\n\nexport class NestingRoot<T extends Node> extends React.Component<NestingProps> {\n  registry = new RefStack();\n  parentRef = React.createRef<T>();\n\n  componentDidMount() {\n    this.registry.register(this.parentRef as any);\n  }\n\n  componentWillUnmount() {\n    this.registry.unregister(this.parentRef as any);\n  }\n\n  getRefs = (): NodeRef[] => this.registry.getContextRefs(this.parentRef as any);\n\n  render() {\n    return (\n      <NestingContext.Provider value={this.registry}>\n        {this.props.children(this.getRefs, this.parentRef as any)}\n      </NestingContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}