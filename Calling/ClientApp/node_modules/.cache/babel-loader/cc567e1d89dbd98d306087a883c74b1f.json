{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __awaiter } from \"tslib\";\n/**\n * StaticTokenCredential\n */\n\nexport class StaticTokenCredential {\n  constructor(token) {\n    this.token = token;\n  }\n\n  getToken() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.token;\n    });\n  }\n\n  dispose() {\n    /* intentionally empty */\n  }\n\n}","map":{"version":3,"sources":["../../src/staticTokenCredential.ts"],"names":[],"mappings":"AAAA;AACA;;AAKA;;AAEG;;AACH,OAAM,MAAO,qBAAP,CAA4B;AAChC,EAAA,WAAA,CAA6B,KAA7B,EAA+C;AAAlB,SAAA,KAAA,GAAA,KAAA;AAAsB;;AAEtC,EAAA,QAAQ,GAAA;;AACnB,aAAO,KAAK,KAAZ;AACD,K;AAAA;;AAEM,EAAA,OAAO,GAAA;AACZ;AACD;;AAT+B","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken } from \"@azure/core-http\";\nimport { TokenCredential } from \"./communicationTokenCredential\";\n\n/**\n * StaticTokenCredential\n */\nexport class StaticTokenCredential implements TokenCredential {\n  constructor(private readonly token: AccessToken) {}\n\n  public async getToken(): Promise<AccessToken> {\n    return this.token;\n  }\n\n  public dispose(): void {\n    /* intentionally empty */\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}