{"ast":null,"code":"/**\n * compose() allows you to pass two inputs:\n * - React.forwardRef + static fluentComposeConfig, i.e. previously composed component\n * - a function\n */\nexport function wasComposedPreviously(input) {\n  return !!input.fluentComposeConfig;\n}","map":{"version":3,"sources":["wasComposedPreviously.ts"],"names":[],"mappings":"AAEA;;;;AAIG;AACH,OAAM,SAAU,qBAAV,CACJ,KADI,EAC8B;AAElC,SAAO,CAAC,CAAE,KAAmC,CAAC,mBAA9C;AACD","sourcesContent":["import { ComposedComponent, Input } from './types';\n\n/**\n * compose() allows you to pass two inputs:\n * - React.forwardRef + static fluentComposeConfig, i.e. previously composed component\n * - a function\n */\nexport function wasComposedPreviously<TElementType extends React.ElementType = 'div', TProps = {}>(\n  input: Input<TElementType, TProps>,\n): input is ComposedComponent<TProps> {\n  return !!(input as ComposedComponent<TProps>).fluentComposeConfig;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}