{"ast":null,"code":"function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        _height = _frame$getBoundingCli.height,\n        _width = _frame$getBoundingCli.width,\n        _top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        _left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= _top && targetBottom <= bottom && targetLeft >= _left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - _top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(_top, bottom, _height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (_top + _height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - _left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (_left + _width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(_left, right, _width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - _height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - _width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/Git Uploads/GroupVideoCalling/Calling/ClientApp/node_modules/compute-scroll-into-view/es/index.js"],"names":["isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","style","getComputedStyle","overflowY","overflowX","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","target","options","scrollMode","block","inline","boundary","checkBoundary","node","TypeError","scrollingElement","document","documentElement","frames","cursor","parentNode","push","body","viewportWidth","window","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","top","targetRight","right","targetBottom","bottom","targetLeft","left","targetBlock","targetInline","computations","index","length","frame","_frame$getBoundingCli","_height","_width","_top","_left","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","scrollLeft","scrollTop","min"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,EAAnB,EAAuB;AACrB,SAAOA,EAAE,IAAI,IAAN,IAAc,OAAOA,EAAP,KAAc,QAA5B,IAAwCA,EAAE,CAACC,QAAH,KAAgB,CAA/D;AACD;;AAED,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,0BAA/B,EAA2D;AACzD,MAAIA,0BAA0B,IAAID,QAAQ,KAAK,QAA/C,EAAyD;AACvD,WAAO,KAAP;AACD;;AAED,SAAOA,QAAQ,KAAK,SAAb,IAA0BA,QAAQ,KAAK,MAA9C;AACD;;AAED,SAASE,YAAT,CAAsBL,EAAtB,EAA0BI,0BAA1B,EAAsD;AACpD,MAAIJ,EAAE,CAACM,YAAH,GAAkBN,EAAE,CAACO,YAArB,IAAqCP,EAAE,CAACQ,WAAH,GAAiBR,EAAE,CAACS,WAA7D,EAA0E;AACxE,QAAIC,KAAK,GAAGC,gBAAgB,CAACX,EAAD,EAAK,IAAL,CAA5B;AACA,WAAOE,WAAW,CAACQ,KAAK,CAACE,SAAP,EAAkBR,0BAAlB,CAAX,IAA4DF,WAAW,CAACQ,KAAK,CAACG,SAAP,EAAkBT,0BAAlB,CAA9E;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAASU,YAAT,CAAsBC,kBAAtB,EAA0CC,gBAA1C,EAA4DC,aAA5D,EAA2EC,oBAA3E,EAAiGC,kBAAjG,EAAqHC,gBAArH,EAAuIC,cAAvI,EAAuJC,WAAvJ,EAAoK;AAClK,MAAIF,gBAAgB,GAAGL,kBAAnB,IAAyCM,cAAc,GAAGL,gBAA1D,IAA8EI,gBAAgB,GAAGL,kBAAnB,IAAyCM,cAAc,GAAGL,gBAA5I,EAA8J;AAC5J,WAAO,CAAP;AACD;;AAED,MAAII,gBAAgB,IAAIL,kBAApB,IAA0CO,WAAW,IAAIL,aAAzD,IAA0EI,cAAc,IAAIL,gBAAlB,IAAsCM,WAAW,IAAIL,aAAnI,EAAkJ;AAChJ,WAAOG,gBAAgB,GAAGL,kBAAnB,GAAwCG,oBAA/C;AACD;;AAED,MAAIG,cAAc,GAAGL,gBAAjB,IAAqCM,WAAW,GAAGL,aAAnD,IAAoEG,gBAAgB,GAAGL,kBAAnB,IAAyCO,WAAW,GAAGL,aAA/H,EAA8I;AAC5I,WAAOI,cAAc,GAAGL,gBAAjB,GAAoCG,kBAA3C;AACD;;AAED,SAAO,CAAP;AACD;;AAED,gBAAgB,UAAUI,MAAV,EAAkBC,OAAlB,EAA2B;AACzC,MAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;AAAA,MACIC,KAAK,GAAGF,OAAO,CAACE,KADpB;AAAA,MAEIC,MAAM,GAAGH,OAAO,CAACG,MAFrB;AAAA,MAGIC,QAAQ,GAAGJ,OAAO,CAACI,QAHvB;AAAA,MAIIxB,0BAA0B,GAAGoB,OAAO,CAACpB,0BAJzC;AAKA,MAAIyB,aAAa,GAAG,OAAOD,QAAP,KAAoB,UAApB,GAAiCA,QAAjC,GAA4C,UAAUE,IAAV,EAAgB;AAC9E,WAAOA,IAAI,KAAKF,QAAhB;AACD,GAFD;;AAIA,MAAI,CAAC7B,SAAS,CAACwB,MAAD,CAAd,EAAwB;AACtB,UAAM,IAAIQ,SAAJ,CAAc,gBAAd,CAAN;AACD;;AAED,MAAIC,gBAAgB,GAAGC,QAAQ,CAACD,gBAAT,IAA6BC,QAAQ,CAACC,eAA7D;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAGb,MAAb;;AAEA,SAAOxB,SAAS,CAACqC,MAAD,CAAT,IAAqBP,aAAa,CAACO,MAAD,CAAzC,EAAmD;AACjDA,IAAAA,MAAM,GAAGA,MAAM,CAACC,UAAhB;;AAEA,QAAID,MAAM,KAAKJ,gBAAf,EAAiC;AAC/BG,MAAAA,MAAM,CAACG,IAAP,CAAYF,MAAZ;AACA;AACD;;AAED,QAAIA,MAAM,KAAKH,QAAQ,CAACM,IAApB,IAA4BlC,YAAY,CAAC+B,MAAD,CAAxC,IAAoD,CAAC/B,YAAY,CAAC4B,QAAQ,CAACC,eAAV,CAArE,EAAiG;AAC/F;AACD;;AAED,QAAI7B,YAAY,CAAC+B,MAAD,EAAShC,0BAAT,CAAhB,EAAsD;AACpD+B,MAAAA,MAAM,CAACG,IAAP,CAAYF,MAAZ;AACD;AACF;;AAED,MAAII,aAAa,GAAGC,MAAM,CAACC,cAAP,GAAwBA,cAAc,CAACC,KAAvC,GAA+CC,UAAnE;AACA,MAAIC,cAAc,GAAGJ,MAAM,CAACC,cAAP,GAAwBA,cAAc,CAACI,MAAvC,GAAgDC,WAArE;AACA,MAAIC,SAAS,GAAGP,MAAM,CAACQ,OAAP,IAAkBC,WAAlC;AACA,MAAIC,SAAS,GAAGV,MAAM,CAACW,OAAP,IAAkBC,WAAlC;;AAEA,MAAIC,qBAAqB,GAAG/B,MAAM,CAACgC,qBAAP,EAA5B;AAAA,MACIC,YAAY,GAAGF,qBAAqB,CAACR,MADzC;AAAA,MAEIW,WAAW,GAAGH,qBAAqB,CAACX,KAFxC;AAAA,MAGIe,SAAS,GAAGJ,qBAAqB,CAACK,GAHtC;AAAA,MAIIC,WAAW,GAAGN,qBAAqB,CAACO,KAJxC;AAAA,MAKIC,YAAY,GAAGR,qBAAqB,CAACS,MALzC;AAAA,MAMIC,UAAU,GAAGV,qBAAqB,CAACW,IANvC;;AAQA,MAAIC,WAAW,GAAGxC,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,SAA/B,GAA2CgC,SAA3C,GAAuDhC,KAAK,KAAK,KAAV,GAAkBoC,YAAlB,GAAiCJ,SAAS,GAAGF,YAAY,GAAG,CAArI;AACA,MAAIW,YAAY,GAAGxC,MAAM,KAAK,QAAX,GAAsBqC,UAAU,GAAGP,WAAW,GAAG,CAAjD,GAAqD9B,MAAM,KAAK,KAAX,GAAmBiC,WAAnB,GAAiCI,UAAzG;AACA,MAAII,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGlC,MAAM,CAACmC,MAAnC,EAA2CD,KAAK,EAAhD,EAAoD;AAClD,QAAIE,KAAK,GAAGpC,MAAM,CAACkC,KAAD,CAAlB;;AAEA,QAAIG,qBAAqB,GAAGD,KAAK,CAAChB,qBAAN,EAA5B;AAAA,QACIkB,OAAO,GAAGD,qBAAqB,CAAC1B,MADpC;AAAA,QAEI4B,MAAM,GAAGF,qBAAqB,CAAC7B,KAFnC;AAAA,QAGIgC,IAAI,GAAGH,qBAAqB,CAACb,GAHjC;AAAA,QAIIE,KAAK,GAAGW,qBAAqB,CAACX,KAJlC;AAAA,QAKIE,MAAM,GAAGS,qBAAqB,CAACT,MALnC;AAAA,QAMIa,KAAK,GAAGJ,qBAAqB,CAACP,IANlC;;AAQA,QAAIxC,UAAU,KAAK,WAAf,IAA8BiC,SAAS,IAAI,CAA3C,IAAgDM,UAAU,IAAI,CAA9D,IAAmEF,YAAY,IAAIjB,cAAnF,IAAqGe,WAAW,IAAIpB,aAApH,IAAqIkB,SAAS,IAAIiB,IAAlJ,IAA0Jb,YAAY,IAAIC,MAA1K,IAAoLC,UAAU,IAAIY,KAAlM,IAA2MhB,WAAW,IAAIC,KAA9N,EAAqO;AACnO,aAAOO,YAAP;AACD;;AAED,QAAIS,UAAU,GAAGlE,gBAAgB,CAAC4D,KAAD,CAAjC;AACA,QAAIO,UAAU,GAAGC,QAAQ,CAACF,UAAU,CAACG,eAAZ,EAA6B,EAA7B,CAAzB;AACA,QAAIC,SAAS,GAAGF,QAAQ,CAACF,UAAU,CAACK,cAAZ,EAA4B,EAA5B,CAAxB;AACA,QAAIC,WAAW,GAAGJ,QAAQ,CAACF,UAAU,CAACO,gBAAZ,EAA8B,EAA9B,CAA1B;AACA,QAAIC,YAAY,GAAGN,QAAQ,CAACF,UAAU,CAACS,iBAAZ,EAA+B,EAA/B,CAA3B;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,cAAc,GAAG,iBAAiBlB,KAAjB,GAAyBA,KAAK,CAACmB,WAAN,GAAoBnB,KAAK,CAAC/D,WAA1B,GAAwCsE,UAAxC,GAAqDK,WAA9E,GAA4F,CAAjH;AACA,QAAIQ,eAAe,GAAG,kBAAkBpB,KAAlB,GAA0BA,KAAK,CAACqB,YAAN,GAAqBrB,KAAK,CAACjE,YAA3B,GAA0C2E,SAA1C,GAAsDI,YAAhF,GAA+F,CAArH;;AAEA,QAAIrD,gBAAgB,KAAKuC,KAAzB,EAAgC;AAC9B,UAAI7C,KAAK,KAAK,OAAd,EAAuB;AACrB6D,QAAAA,WAAW,GAAGrB,WAAd;AACD,OAFD,MAEO,IAAIxC,KAAK,KAAK,KAAd,EAAqB;AAC1B6D,QAAAA,WAAW,GAAGrB,WAAW,GAAGrB,cAA5B;AACD,OAFM,MAEA,IAAInB,KAAK,KAAK,SAAd,EAAyB;AAC9B6D,QAAAA,WAAW,GAAGzE,YAAY,CAACqC,SAAD,EAAYA,SAAS,GAAGN,cAAxB,EAAwCA,cAAxC,EAAwDoC,SAAxD,EAAmEI,YAAnE,EAAiFlC,SAAS,GAAGe,WAA7F,EAA0Gf,SAAS,GAAGe,WAAZ,GAA0BV,YAApI,EAAkJA,YAAlJ,CAA1B;AACD,OAFM,MAEA;AACL+B,QAAAA,WAAW,GAAGrB,WAAW,GAAGrB,cAAc,GAAG,CAA7C;AACD;;AAED,UAAIlB,MAAM,KAAK,OAAf,EAAwB;AACtB6D,QAAAA,YAAY,GAAGrB,YAAf;AACD,OAFD,MAEO,IAAIxC,MAAM,KAAK,QAAf,EAAyB;AAC9B6D,QAAAA,YAAY,GAAGrB,YAAY,GAAG3B,aAAa,GAAG,CAA9C;AACD,OAFM,MAEA,IAAIb,MAAM,KAAK,KAAf,EAAsB;AAC3B6D,QAAAA,YAAY,GAAGrB,YAAY,GAAG3B,aAA9B;AACD,OAFM,MAEA;AACLgD,QAAAA,YAAY,GAAG1E,YAAY,CAACkC,SAAD,EAAYA,SAAS,GAAGR,aAAxB,EAAuCA,aAAvC,EAAsDsC,UAAtD,EAAkEK,WAAlE,EAA+EnC,SAAS,GAAGmB,YAA3F,EAAyGnB,SAAS,GAAGmB,YAAZ,GAA2BV,WAApI,EAAiJA,WAAjJ,CAA3B;AACD;;AAED8B,MAAAA,WAAW,GAAGM,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYP,WAAW,GAAGpC,SAA1B,CAAd;AACAqC,MAAAA,YAAY,GAAGK,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYN,YAAY,GAAGxC,SAA3B,CAAf;AACD,KAvBD,MAuBO;AACL,UAAItB,KAAK,KAAK,OAAd,EAAuB;AACrB6D,QAAAA,WAAW,GAAGrB,WAAW,GAAGS,IAAd,GAAqBM,SAAnC;AACD,OAFD,MAEO,IAAIvD,KAAK,KAAK,KAAd,EAAqB;AAC1B6D,QAAAA,WAAW,GAAGrB,WAAW,GAAGH,MAAd,GAAuBsB,YAAvB,GAAsCM,eAApD;AACD,OAFM,MAEA,IAAIjE,KAAK,KAAK,SAAd,EAAyB;AAC9B6D,QAAAA,WAAW,GAAGzE,YAAY,CAAC6D,IAAD,EAAOZ,MAAP,EAAeU,OAAf,EAAwBQ,SAAxB,EAAmCI,YAAY,GAAGM,eAAlD,EAAmEzB,WAAnE,EAAgFA,WAAW,GAAGV,YAA9F,EAA4GA,YAA5G,CAA1B;AACD,OAFM,MAEA;AACL+B,QAAAA,WAAW,GAAGrB,WAAW,IAAIS,IAAI,GAAGF,OAAO,GAAG,CAArB,CAAX,GAAqCkB,eAAe,GAAG,CAArE;AACD;;AAED,UAAIhE,MAAM,KAAK,OAAf,EAAwB;AACtB6D,QAAAA,YAAY,GAAGrB,YAAY,GAAGS,KAAf,GAAuBE,UAAtC;AACD,OAFD,MAEO,IAAInD,MAAM,KAAK,QAAf,EAAyB;AAC9B6D,QAAAA,YAAY,GAAGrB,YAAY,IAAIS,KAAK,GAAGF,MAAM,GAAG,CAArB,CAAZ,GAAsCe,cAAc,GAAG,CAAtE;AACD,OAFM,MAEA,IAAI9D,MAAM,KAAK,KAAf,EAAsB;AAC3B6D,QAAAA,YAAY,GAAGrB,YAAY,GAAGN,KAAf,GAAuBsB,WAAvB,GAAqCM,cAApD;AACD,OAFM,MAEA;AACLD,QAAAA,YAAY,GAAG1E,YAAY,CAAC8D,KAAD,EAAQf,KAAR,EAAea,MAAf,EAAuBI,UAAvB,EAAmCK,WAAW,GAAGM,cAAjD,EAAiEtB,YAAjE,EAA+EA,YAAY,GAAGV,WAA9F,EAA2GA,WAA3G,CAA3B;AACD;;AAED,UAAIsC,UAAU,GAAGxB,KAAK,CAACwB,UAAvB;AAAA,UACIC,SAAS,GAAGzB,KAAK,CAACyB,SADtB;AAEAT,MAAAA,WAAW,GAAGM,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACI,GAAL,CAASD,SAAS,GAAGT,WAArB,EAAkChB,KAAK,CAAChE,YAAN,GAAqBkE,OAArB,GAA+BkB,eAAjE,CAAZ,CAAd;AACAH,MAAAA,YAAY,GAAGK,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACI,GAAL,CAASF,UAAU,GAAGP,YAAtB,EAAoCjB,KAAK,CAAC9D,WAAN,GAAoBiE,MAApB,GAA6Be,cAAjE,CAAZ,CAAf;AACAvB,MAAAA,WAAW,IAAI8B,SAAS,GAAGT,WAA3B;AACApB,MAAAA,YAAY,IAAI4B,UAAU,GAAGP,YAA7B;AACD;;AAEDpB,IAAAA,YAAY,CAAC9B,IAAb,CAAkB;AAChBtC,MAAAA,EAAE,EAAEuE,KADY;AAEhBZ,MAAAA,GAAG,EAAE4B,WAFW;AAGhBtB,MAAAA,IAAI,EAAEuB;AAHU,KAAlB;AAKD;;AAED,SAAOpB,YAAP;AACD,CAzID","sourcesContent":["function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        _height = _frame$getBoundingCli.height,\n        _width = _frame$getBoundingCli.width,\n        _top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        _left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= _top && targetBottom <= bottom && targetLeft >= _left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - _top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(_top, bottom, _height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (_top + _height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - _left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (_left + _width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(_left, right, _width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - _height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - _width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});"]},"metadata":{},"sourceType":"module"}