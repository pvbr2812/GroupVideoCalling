{"ast":null,"code":"import { clearIndicatorUrl } from './clearIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\nexport var inputStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    return Object.assign({\n      flexDirection: 'column',\n      justifyContent: 'center',\n      display: 'inline-flex',\n      position: 'relative',\n      outline: 0,\n      verticalAlign: 'middle'\n    }, p.fluid && {\n      width: '100%'\n    }, p.labelPosition === 'inline' && {\n      flexDirection: 'row',\n      alignItems: 'center'\n    });\n  },\n  input: function input(_ref2) {\n    var p = _ref2.props,\n        v = _ref2.variables;\n    return Object.assign({\n      backgroundColor: v.backgroundColor\n    }, p.inverted && {\n      backgroundColor: v.backgroundColorInverted\n    }, {\n      lineHeight: 'unset',\n      color: v.fontColor,\n      borderColor: v.borderColor,\n      borderRadius: v.borderRadius,\n      borderStyle: 'solid',\n      borderWidth: v.borderWidth,\n      outline: 'none',\n      padding: v.inputPadding,\n      position: 'relative'\n    }, p.fluid && {\n      width: '100%'\n    }, p.inline && {\n      float: 'left'\n    }, p.disabled && {\n      color: v.colorDisabled,\n      boxShadow: 'none'\n    }, {\n      '::placeholder': Object.assign({\n        color: v.placeholderColor,\n        opacity: 1\n      }, p.disabled && {\n        color: v.colorDisabled\n      }),\n      ':focus': Object.assign({}, !p.error && {\n        borderColor: v.inputFocusBorderColor\n      })\n    }, !p.hasValue && {\n      ':-webkit-autofill:focus': {\n        '-webkit-text-fill-color': 'transparent'\n      }\n    }, p.clearable && {\n      padding: v.inputPaddingWithIconAtEnd\n    }, p.hasIcon && {\n      padding: p.iconPosition === 'start' ? v.inputPaddingWithIconAtStart : v.inputPaddingWithIconAtEnd\n    }, p.labelPosition === 'inside' && {\n      paddingTop: v.inputInsideLabelPaddingTop\n    }, p.error && {\n      border: pxToRem(1) + \" solid \" + v.borderColorError\n    }, {\n      '::-ms-clear': {\n        display: 'none'\n      }\n    });\n  },\n  icon: function icon(_ref3) {\n    var p = _ref3.props,\n        v = _ref3.variables;\n    return Object.assign({\n      color: v.iconColor,\n      outline: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: v.iconPosition,\n      top: 0,\n      bottom: 0\n    }, p.error && {\n      color: v.colorError\n    }, p.requiredAndSuccessful && {\n      color: v.successfulColor\n    }, p.disabled && {\n      color: v.colorDisabled\n    }, p.iconPosition === 'start' && {\n      left: v.iconLeft\n    }, p.iconPosition === 'end' && {\n      right: v.iconRight\n    }, p.clearable && p.hasValue && {\n      backgroundImage: clearIndicatorUrl(p.disabled ? v.colorDisabled : v.iconColor),\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      height: '100%',\n      width: pxToRem(16)\n    });\n  },\n  inputContainer: function inputContainer() {\n    return {\n      position: 'relative'\n    };\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Input/inputStyles.ts"],"names":["inputStyles","root","p","v","flexDirection","justifyContent","display","position","outline","verticalAlign","width","alignItems","input","backgroundColor","backgroundColorInverted","lineHeight","color","borderColor","borderRadius","borderStyle","borderWidth","padding","float","boxShadow","opacity","colorDisabled","inputFocusBorderColor","inputPaddingWithIconAtEnd","paddingTop","inputInsideLabelPaddingTop","border","pxToRem","borderColorError","icon","top","bottom","colorError","successfulColor","left","iconLeft","right","iconRight","backgroundImage","clearIndicatorUrl","backgroundPosition","backgroundRepeat","height","inputContainer"],"mappings":"AAIA,SAAA,iBAAA,QAAA,qBAAA;AACA,SAAA,OAAA,QAAA,mBAAA;AAEA,OAAO,IAAMA,WAA0E,GAAG;AACxFC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAAA;AAAA,QAAUC,CAAV,GAAA,IAAA,CAAA,KAAA;AAAA,QAAwBC,CAAxB,GAAA,IAAA,CAAA,SAAA;AAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AACJC,MAAAA,aAAa,EADT,QAAA;AAEJC,MAAAA,cAAc,EAFV,QAAA;AAGJC,MAAAA,OAAO,EAHH,aAAA;AAIJC,MAAAA,QAAQ,EAJJ,UAAA;AAKJC,MAAAA,OAAO,EALH,CAAA;AAMJC,MAAAA,aAAa,EAAE;AANX,KAAA,EAOAP,CAAC,CAADA,KAAAA,IAAW;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAPX,EAQAR,CAAC,CAADA,aAAAA,KAAAA,QAAAA,IAAgC;AAClCE,MAAAA,aAAa,EADqB,KAAA;AAElCO,MAAAA,UAAU,EAAE;AAFsB,KARhC,CAAA;AADkF,GAAA;AAexFC,EAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,KAAA,EAAA;AAAA,QAAUV,CAAV,GAAA,KAAA,CAAA,KAAA;AAAA,QAAwBC,CAAxB,GAAA,KAAA,CAAA,SAAA;AAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AACLU,MAAAA,eAAe,EAAEV,CAAC,CAACU;AADd,KAAA,EAEDX,CAAC,CAADA,QAAAA,IAAc;AAChBW,MAAAA,eAAe,EAAEV,CAAC,CAACW;AADH,KAFb,EAAA;AAMLC,MAAAA,UAAU,EANL,OAAA;AAOLC,MAAAA,KAAK,EAAEb,CAAC,CAPH,SAAA;AASLc,MAAAA,WAAW,EAAEd,CAAC,CATT,WAAA;AAULe,MAAAA,YAAY,EAAEf,CAAC,CAVV,YAAA;AAWLgB,MAAAA,WAAW,EAXN,OAAA;AAYLC,MAAAA,WAAW,EAAEjB,CAAC,CAZT,WAAA;AAcLK,MAAAA,OAAO,EAdF,MAAA;AAeLa,MAAAA,OAAO,EAAElB,CAAC,CAfL,YAAA;AAgBLI,MAAAA,QAAQ,EAAE;AAhBL,KAAA,EAkBDL,CAAC,CAADA,KAAAA,IAAW;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAlBV,EAmBDR,CAAC,CAADA,MAAAA,IAAY;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KAnBX,EAsBDpB,CAAC,CAADA,QAAAA,IAAc;AAChBc,MAAAA,KAAK,EAAEb,CAAC,CADQ,aAAA;AAEhBoB,MAAAA,SAAS,EAAE;AAFK,KAtBb,EAAA;AA2BL,uBAAA,MAAA,CAAA,MAAA,CAAA;AACEP,QAAAA,KAAK,EAAEb,CAAC,CADV,gBAAA;AAEEqB,QAAAA,OAAO,EAAE;AAFX,OAAA,EAGMtB,CAAC,CAADA,QAAAA,IAAc;AAChBc,QAAAA,KAAK,EAAEb,CAAC,CAACsB;AADO,OAHpB,CA3BK;AAmCL,gBAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM,CAACvB,CAAC,CAAF,KAAA,IAAY;AAAEe,QAAAA,WAAW,EAAEd,CAAC,CAACuB;AAAjB,OADlB;AAnCK,KAAA,EAuCD,CAACxB,CAAC,CAAF,QAAA,IAAe;AACjB,iCAA2B;AACzB,mCAA2B;AADF;AADV,KAvCd,EA6CDA,CAAC,CAADA,SAAAA,IAAe;AAAEmB,MAAAA,OAAO,EAAElB,CAAC,CAACwB;AAAb,KA7Cd,EA8CDzB,CAAC,CAADA,OAAAA,IAAa;AACfmB,MAAAA,OAAO,EAAEnB,CAAC,CAADA,YAAAA,KAAAA,OAAAA,GAA6BC,CAAC,CAA9BD,2BAAAA,GAA6DC,CAAC,CAACwB;AADzD,KA9CZ,EAiDDzB,CAAC,CAADA,aAAAA,KAAAA,QAAAA,IAAgC;AAClC0B,MAAAA,UAAU,EAAEzB,CAAC,CAAC0B;AADoB,KAjD/B,EAoDD3B,CAAC,CAADA,KAAAA,IAAW;AAAE4B,MAAAA,MAAM,EAAKC,OAAO,CAAZ,CAAY,CAAPA,GAAL,SAAKA,GAAoB5B,CAAC,CAAC6B;AAAnC,KApDV,EAAA;AAsDL,qBAAe;AACb1B,QAAAA,OAAO,EAAE;AADI;AAtDV,KAAA,CAAA;AAfiF,GAAA;AA0ExF2B,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,KAAA,EAAA;AAAA,QAAU/B,CAAV,GAAA,KAAA,CAAA,KAAA;AAAA,QAAwBC,CAAxB,GAAA,KAAA,CAAA,SAAA;AAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AACJa,MAAAA,KAAK,EAAEb,CAAC,CADJ,SAAA;AAEJK,MAAAA,OAAO,EAFH,CAAA;AAGJF,MAAAA,OAAO,EAHH,MAAA;AAIJK,MAAAA,UAAU,EAJN,QAAA;AAKJN,MAAAA,cAAc,EALV,QAAA;AAMJE,MAAAA,QAAQ,EAAEJ,CAAC,CANP,YAAA;AAOJ+B,MAAAA,GAAG,EAPC,CAAA;AAQJC,MAAAA,MAAM,EAAE;AARJ,KAAA,EASAjC,CAAC,CAADA,KAAAA,IAAW;AAAEc,MAAAA,KAAK,EAAEb,CAAC,CAACiC;AAAX,KATX,EAUAlC,CAAC,CAADA,qBAAAA,IAA2B;AAC7Bc,MAAAA,KAAK,EAAEb,CAAC,CAACkC;AADoB,KAV3B,EAaAnC,CAAC,CAADA,QAAAA,IAAc;AAChBc,MAAAA,KAAK,EAAEb,CAAC,CAACsB;AADO,KAbd,EAiBAvB,CAAC,CAADA,YAAAA,KAAAA,OAAAA,IAA8B;AAChCoC,MAAAA,IAAI,EAAEnC,CAAC,CAACoC;AADwB,KAjB9B,EAoBArC,CAAC,CAADA,YAAAA,KAAAA,KAAAA,IAA4B;AAC9BsC,MAAAA,KAAK,EAAErC,CAAC,CAACsC;AADqB,KApB5B,EAwBAvC,CAAC,CAADA,SAAAA,IACFA,CAAC,CADCA,QAAAA,IACY;AACZwC,MAAAA,eAAe,EAAEC,iBAAiB,CAACzC,CAAC,CAADA,QAAAA,GAAaC,CAAC,CAAdD,aAAAA,GAA+BC,CAAC,CADvD,SACsB,CADtB;AAEZyC,MAAAA,kBAAkB,EAFN,QAAA;AAGZC,MAAAA,gBAAgB,EAHJ,WAAA;AAIZC,MAAAA,MAAM,EAJM,MAAA;AAKZpC,MAAAA,KAAK,EAAEqB,OAAO,CAAA,EAAA;AALF,KAzBZ,CAAA;AA1EkF,GAAA;AA4GxFgB,EAAAA,cAAc,EAAE,SAAA,cAAA,GAAA;AAAA,WAAsB;AACpCxC,MAAAA,QAAQ,EAAE;AAD0B,KAAtB;AAAA;AA5GwE,CAAnF","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { InputStylesProps } from '../../../../components/Input/Input';\nimport { InputVariables } from './inputVariables';\nimport { PositionProperty } from 'csstype';\nimport { clearIndicatorUrl } from './clearIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\n\nexport const inputStyles: ComponentSlotStylesPrepared<InputStylesProps, InputVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    flexDirection: 'column',\n    justifyContent: 'center',\n    display: 'inline-flex',\n    position: 'relative',\n    outline: 0,\n    verticalAlign: 'middle',\n    ...(p.fluid && { width: '100%' }),\n    ...(p.labelPosition === 'inline' && {\n      flexDirection: 'row',\n      alignItems: 'center',\n    }),\n  }),\n\n  input: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    backgroundColor: v.backgroundColor,\n    ...(p.inverted && {\n      backgroundColor: v.backgroundColorInverted,\n    }),\n\n    lineHeight: 'unset',\n    color: v.fontColor,\n\n    borderColor: v.borderColor,\n    borderRadius: v.borderRadius,\n    borderStyle: 'solid',\n    borderWidth: v.borderWidth,\n\n    outline: 'none',\n    padding: v.inputPadding,\n    position: 'relative',\n\n    ...(p.fluid && { width: '100%' }),\n    ...(p.inline && { float: 'left' }),\n\n    // Overrides for \"disabled\" inputs\n    ...(p.disabled && {\n      color: v.colorDisabled,\n      boxShadow: 'none',\n    }),\n\n    '::placeholder': {\n      color: v.placeholderColor,\n      opacity: 1, // undo Firefox default opacity\n      ...(p.disabled && {\n        color: v.colorDisabled,\n      }),\n    },\n\n    ':focus': {\n      ...(!p.error && { borderColor: v.inputFocusBorderColor }),\n    },\n\n    ...(!p.hasValue && {\n      ':-webkit-autofill:focus': {\n        '-webkit-text-fill-color': 'transparent',\n      },\n    }),\n\n    ...(p.clearable && { padding: v.inputPaddingWithIconAtEnd }),\n    ...(p.hasIcon && {\n      padding: p.iconPosition === 'start' ? v.inputPaddingWithIconAtStart : v.inputPaddingWithIconAtEnd,\n    }),\n    ...(p.labelPosition === 'inside' && {\n      paddingTop: v.inputInsideLabelPaddingTop,\n    }),\n    ...(p.error && { border: `${pxToRem(1)} solid ${v.borderColorError}` }),\n\n    '::-ms-clear': {\n      display: 'none',\n    },\n  }),\n\n  icon: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    color: v.iconColor,\n    outline: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: v.iconPosition as PositionProperty,\n    top: 0,\n    bottom: 0,\n    ...(p.error && { color: v.colorError }),\n    ...(p.requiredAndSuccessful && {\n      color: v.successfulColor,\n    }),\n    ...(p.disabled && {\n      color: v.colorDisabled,\n    }),\n\n    ...(p.iconPosition === 'start' && {\n      left: v.iconLeft,\n    }),\n    ...(p.iconPosition === 'end' && {\n      right: v.iconRight,\n    }),\n\n    ...(p.clearable &&\n      p.hasValue && {\n        backgroundImage: clearIndicatorUrl(p.disabled ? v.colorDisabled : v.iconColor),\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        height: '100%',\n        width: pxToRem(16),\n      }),\n  }),\n\n  inputContainer: (): ICSSInJSStyle => ({\n    position: 'relative',\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}