{"ast":null,"code":"import _difference from \"lodash/difference\";\nimport _trim from \"lodash/trim\";\nimport _isObject from \"lodash/isObject\";\nimport _pick from \"lodash/pick\";\nimport _keys from \"lodash/keys\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isFunction from \"lodash/isFunction\";\nimport _compact from \"lodash/compact\";\nimport _first from \"lodash/first\";\nimport _isNil from \"lodash/isNil\";\nimport _min from \"lodash/min\";\nimport _sum from \"lodash/sum\";\nimport _map from \"lodash/map\";\nimport _sortBy from \"lodash/sortBy\";\nimport _take from \"lodash/take\";\nimport _memoize from \"lodash/memoize\";\nimport * as PropTypes from 'prop-types';\nimport leven from './leven';\n\nvar typeOf = function typeOf(x) {\n  return Object.prototype.toString.call(x);\n};\n/**\n * Ensure a prop is a valid DOM node.\n */\n\n\nexport var domNode = function domNode(props, propName) {\n  // skip if prop is undefined\n  if (props[propName] === undefined) return undefined; // skip if prop is null\n\n  if (props[propName] === null) return null; // skip if prop is valid\n\n  if (props[propName] instanceof Element) return undefined;\n  return new Error(\"Invalid prop \\\"\" + propName + \"\\\" supplied, expected a DOM node.\");\n};\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param suggestions - An array of allowed values.\n */\n\nexport var suggest = function suggest(suggestions) {\n  if (!Array.isArray(suggestions)) {\n    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');\n  }\n\n  var findBestSuggestions = _memoize(function (str) {\n    var propValueWords = str.split(' ');\n    return _take(_sortBy(_map(suggestions, function (suggestion) {\n      var suggestionWords = suggestion.split(' ');\n\n      var propValueScore = _sum(_map(_map(propValueWords, function (x) {\n        return _map(suggestionWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      var suggestionScore = _sum(_map(_map(suggestionWords, function (x) {\n        return _map(propValueWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      return {\n        suggestion: suggestion,\n        score: propValueScore + suggestionScore\n      };\n    }), ['score', 'suggestion']), 3);\n  }); // Convert the suggestions list into a hash map for O(n) lookup times. Ensure\n  // the words in each key are sorted alphabetically so that we have a consistent\n  // way of looking up a value in the map, i.e. we can sort the words in the\n  // incoming propValue and look that up without having to check all permutations.\n\n\n  var suggestionsLookup = suggestions.reduce(function (acc, key) {\n    acc[key.split(' ').sort().join(' ')] = true;\n    return acc;\n  }, {});\n  return function (props, propName, componentName) {\n    var propValue = props[propName]; // skip if prop is undefined or is included in the suggestions\n\n    if (!propValue || suggestionsLookup[propValue]) return undefined; // check if the words were correct but ordered differently.\n    // Since we're matching for classNames we need to allow any word order\n    // to pass validation, e.g. `left chevron` vs `chevron left`.\n\n    var propValueSorted = propValue.split(' ').sort().join(' ');\n    if (suggestionsLookup[propValueSorted]) return undefined; // find best suggestions\n\n    var bestMatches = findBestSuggestions(propValue); // skip if a match scored 0\n\n    if (bestMatches.some(function (x) {\n      return x.score === 0;\n    })) return undefined;\n    return new Error([\"Invalid prop `\" + propName + \"` of value `\" + propValue + \"` supplied to `\" + componentName + \"`.\", \"\\n\\nInstead of `\" + propValue + \"`, did you mean:\", bestMatches.map(function (x) {\n      return \"\\n  - \" + x.suggestion;\n    }).join(''), '\\n'].join(''));\n  };\n};\n/**\n * The prop cannot be used.\n * Similar to `deprecate` but with different error message.\n */\n\nexport var never = function never(props, propName, componentName) {\n  if (_isNil(props[propName]) || props[propName] === false) return undefined;\n  return new Error(\"Prop `\" + propName + \"` in `\" + componentName + \"` cannot be used.\");\n};\n/**\n * Disallow other props from being defined with this prop.\n * @param disallowedProps - An array of props that cannot be used with this prop.\n */\n\nexport var disallow = function disallow(disallowedProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(disallowedProps)) {\n      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (_isNil(props[propName]) || props[propName] === false) return undefined; // find disallowed props with values\n\n    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {\n      if (!_isNil(props[disallowedProp]) && props[disallowedProp] !== false) {\n        return [].concat(acc, [disallowedProp]);\n      }\n\n      return acc;\n    }, []);\n\n    if (disallowed.length > 0) {\n      return new Error([\"Prop `\" + propName + \"` in `\" + componentName + \"` conflicts with props: `\" + disallowed.join('`, `') + \"`.\", 'They cannot be defined together, choose one or the other.'].join(' '));\n    }\n\n    return undefined;\n  };\n};\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param validators - An array of propType functions.\n */\n\nexport var every = function every(validators) {\n  return function (props, propName, componentName) {\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to every, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    return _first(_compact(_map(validators, function (validator) {\n      if (typeof validator !== 'function') {\n        throw new Error(\"every() argument \\\"validators\\\" should contain functions, found: \" + typeOf(validator) + \".\");\n      }\n\n      return validator.apply(void 0, [props, propName, componentName].concat(args));\n    }))); // we can only return one error at a time\n  };\n};\n/**\n * Ensure a prop adherers to at least one of the given prop type validators.\n * @param validators - An array of propType functions.\n */\n\nexport var some = function some(validators) {\n  return function (props, propName, componentName) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      args[_key2 - 3] = arguments[_key2];\n    }\n\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var errors = _compact(_map(validators, function (validator) {\n      if (!_isFunction(validator)) {\n        throw new Error(\"some() argument \\\"validators\\\" should contain functions, found: \" + typeOf(validator) + \".\");\n      }\n\n      return validator.apply(void 0, [props, propName, componentName].concat(args));\n    })); // fail only if all validators failed\n\n\n    if (errors.length === validators.length) {\n      var error = new Error('One of these validators must pass:');\n      error.message += \"\\n\" + _map(errors, function (err) {\n        return \"- \" + err.message;\n      }).join('\\n');\n      return error;\n    }\n\n    return undefined;\n  };\n};\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param propsShape - An object describing the prop shape.\n * @param validator - A propType function.\n */\n\nexport var givenProps = function givenProps(propsShape, validator) {\n  return function (props, propName, componentName) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n      args[_key3 - 3] = arguments[_key3];\n    }\n\n    if (!_isPlainObject(propsShape)) {\n      throw new Error(['Invalid argument supplied to givenProps, expected an object.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    if (typeof validator !== 'function') {\n      throw new Error(['Invalid argument supplied to givenProps, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var shouldValidate = _keys(propsShape).every(function (key) {\n      var val = propsShape[key]; // require propShape validators to pass or prop values to match\n\n      return typeof val === 'function' ? !val.apply(void 0, [props, key, componentName].concat(args)) : val === props[propName];\n    });\n\n    if (!shouldValidate) return undefined;\n    var error = validator.apply(void 0, [props, propName, componentName].concat(args));\n\n    if (error) {\n      // poor mans shallow pretty print, prevents JSON circular reference errors\n      var prettyProps = \"{ \" + _keys(_pick(props, _keys(propsShape))).map(function (key) {\n        var val = props[key];\n        var renderedValue = val;\n        if (typeof val === 'string') renderedValue = \"\\\"\" + val + \"\\\"\";else if (Array.isArray(val)) renderedValue = \"[\" + val.join(', ') + \"]\";else if (_isObject(val)) renderedValue = '{...}';\n        return key + \": \" + renderedValue;\n      }).join(', ') + \" }\";\n      error.message = \"Given props \" + prettyProps + \": \" + error.message;\n      return error;\n    }\n  };\n};\n/**\n * Define prop dependencies by requiring other props.\n * @param requiredProps - An array of required prop names.\n */\n\nexport var demand = function demand(requiredProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(requiredProps)) {\n      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return undefined;\n    var missingRequired = requiredProps.filter(function (requiredProp) {\n      return props[requiredProp] === undefined;\n    });\n\n    if (missingRequired.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` requires props: `\" + missingRequired.join('`, `') + \"`.\");\n    }\n\n    return undefined;\n  };\n};\n/**\n * Ensure an multiple prop contains a string with only possible values.\n * @param possible - An array of possible values to prop.\n */\n\nexport var multipleProp = function multipleProp(possible) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(possible)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var propValue = props[propName]; // skip if prop is undefined\n\n    if (_isNil(propValue) || propValue === false) return undefined;\n    var values = propValue.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (val) {\n      return _trim(val).replace('-', ' ');\n    });\n\n    var invalid = _difference(values, possible); // fail only if there are invalid values\n\n\n    if (invalid.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` has invalid values: `\" + invalid.join('`, `') + \"`.\");\n    }\n\n    return undefined;\n  };\n};\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\n\nexport var nodeContent = every([disallow(['children']), PropTypes.node]);\nexport var wrapperShorthand = PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.object]))]);\n/**\n * A shorthand prop which can be used together with `children`.\n */\n\nexport var shorthandAllowingChildren = PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.func]);\nexport var shorthandObjectAllowingChildren = PropTypes.oneOfType([PropTypes.object, PropTypes.func]);\n/**\n * ObjectItemShorthand is a description of a component that can be\n * a props object or a render function.\n */\n\nexport var objectItemShorthand = every([disallow(['children']), shorthandAllowingChildren]);\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, an element or a render function.\n */\n\nexport var itemShorthand = every([disallow(['children']), shorthandAllowingChildren]);\nexport var itemShorthandWithKindProp = function itemShorthandWithKindProp(kindPropValues) {\n  return every([disallow(['children']), PropTypes.oneOfType([PropTypes.node, PropTypes.shape({\n    kind: PropTypes.oneOf(kindPropValues)\n  }), PropTypes.func])]);\n};\nexport var itemShorthandWithoutJSX = every([disallow(['children']), PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.oneOf([false])])]);\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\n\nexport var collectionObjectShorthand = every([disallow(['children']), PropTypes.arrayOf(objectItemShorthand)]);\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\n\nexport var collectionShorthand = every([disallow(['children']), PropTypes.arrayOf(itemShorthand)]);\nexport var collectionShorthandWithKindProp = function collectionShorthandWithKindProp(kindPropValues) {\n  return every([disallow(['children']), PropTypes.arrayOf(itemShorthandWithKindProp(kindPropValues))]);\n};\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param help - A help message to display with the deprecation warning.\n * @param validator - A propType function.\n */\n\nexport var deprecate = function deprecate(help, validator) {\n  return function (props, propName, componentName) {\n    if (typeof help !== 'string') {\n      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return undefined; // deprecation error and help\n\n    var error = new Error(\"The `\" + propName + \"` prop in `\" + componentName + \"` is deprecated.\");\n    if (help) error.message += \" \" + help; // add optional validation error message\n\n    if (validator) {\n      if (typeof validator === 'function') {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n          args[_key4 - 3] = arguments[_key4];\n        }\n\n        var validationError = validator.apply(void 0, [props, propName, componentName].concat(args));\n\n        if (validationError) {\n          error.message = error.message + \" \" + validationError.message;\n        }\n      } else {\n        throw new Error(['Invalid argument supplied to deprecate, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n      }\n    }\n\n    return error;\n  };\n};\nexport var accessibility = PropTypes.func;\nexport var size = PropTypes.oneOf(['smallest', 'smaller', 'small', 'medium', 'large', 'larger', 'largest']);\nexport var align = PropTypes.oneOf(['start', 'end', 'center', 'justify']);\nexport var animation = PropTypes.oneOfType([// Validator is broken in the latest @react/types\nPropTypes.shape({\n  name: PropTypes.string.isRequired,\n  delay: PropTypes.string,\n  direction: PropTypes.string,\n  duration: PropTypes.string,\n  fillMode: PropTypes.string,\n  iterationCount: PropTypes.string,\n  playState: PropTypes.string,\n  timingFunction: PropTypes.string\n}), PropTypes.string]); // Heads Up!\n// Keep in sync with packages/react/src/themes/types.ts\n\nexport var design = PropTypes.shape({\n  position: PropTypes.string,\n  display: PropTypes.string,\n  top: PropTypes.string,\n  right: PropTypes.string,\n  bottom: PropTypes.string,\n  left: PropTypes.string,\n  padding: PropTypes.string,\n  paddingTop: PropTypes.string,\n  paddingRight: PropTypes.string,\n  paddingBottom: PropTypes.string,\n  paddingLeft: PropTypes.string,\n  margin: PropTypes.string,\n  marginTop: PropTypes.string,\n  marginRight: PropTypes.string,\n  marginBottom: PropTypes.string,\n  marginLeft: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  minWidth: PropTypes.string,\n  maxWidth: PropTypes.string,\n  minHeight: PropTypes.string,\n  maxHeight: PropTypes.string\n});\n/** A checker that matches the React.Ref type. */\n\nexport var ref = PropTypes.oneOfType([PropTypes.func, PropTypes.object]);","map":{"version":3,"sources":["index.ts"],"names":["typeOf","Object","domNode","props","suggest","Array","findBestSuggestions","propValueWords","str","suggestionWords","suggestion","propValueScore","leven","suggestionScore","score","suggestionsLookup","acc","key","propValue","propValueSorted","bestMatches","x","never","disallow","disallowed","every","args","validator","some","errors","validators","error","err","givenProps","shouldValidate","val","propsShape","prettyProps","renderedValue","demand","missingRequired","multipleProp","values","invalid","nodeContent","PropTypes","wrapperShorthand","shorthandAllowingChildren","shorthandObjectAllowingChildren","objectItemShorthand","itemShorthand","itemShorthandWithKindProp","kind","itemShorthandWithoutJSX","collectionObjectShorthand","collectionShorthand","collectionShorthandWithKindProp","deprecate","validationError","accessibility","size","align","animation","name","delay","direction","duration","fillMode","iterationCount","playState","timingFunction","string","design","position","display","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","width","height","minWidth","maxWidth","minHeight","maxHeight","ref"],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\n\nimport leven from './leven';\n\ntype ObjectOf<T> = Record<string, T>;\n\nconst typeOf = (x: any) => Object.prototype.toString.call(x);\n\n/**\n * Ensure a prop is a valid DOM node.\n */\nexport const domNode = (props: ObjectOf<any>, propName: string) => {\n  // skip if prop is undefined\n  if (props[propName] === undefined) return undefined;\n  // skip if prop is null\n  if (props[propName] === null) return null;\n  // skip if prop is valid\n  if (props[propName] instanceof Element) return undefined;\n\n  return new Error(`Invalid prop \"${propName}\" supplied, expected a DOM node.`);\n};\n\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param suggestions - An array of allowed values.\n */\nexport const suggest = (suggestions: string[]) => {\n  if (!Array.isArray(suggestions)) {\n    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');\n  }\n\n  const findBestSuggestions = _.memoize((str: string) => {\n    const propValueWords = str.split(' ');\n\n    return _.take(\n      _.sortBy(\n        _.map(suggestions, (suggestion: string) => {\n          const suggestionWords = suggestion.split(' ');\n\n          const propValueScore = _.sum(\n            _.map(\n              _.map(propValueWords, x => _.map(suggestionWords, y => leven(x, y))),\n              _.min,\n            ),\n          );\n\n          const suggestionScore = _.sum(\n            _.map(\n              _.map(suggestionWords, x => _.map(propValueWords, y => leven(x, y))),\n              _.min,\n            ),\n          );\n\n          return { suggestion, score: propValueScore + suggestionScore };\n        }),\n        ['score', 'suggestion'],\n      ),\n      3,\n    );\n  });\n\n  // Convert the suggestions list into a hash map for O(n) lookup times. Ensure\n  // the words in each key are sorted alphabetically so that we have a consistent\n  // way of looking up a value in the map, i.e. we can sort the words in the\n  // incoming propValue and look that up without having to check all permutations.\n  const suggestionsLookup: Record<string, boolean> = suggestions.reduce((acc: Record<string, boolean>, key: string) => {\n    acc[\n      key\n        .split(' ')\n        .sort()\n        .join(' ')\n    ] = true;\n    return acc;\n  }, {});\n\n  return (props: ObjectOf<any>, propName: string, componentName: string) => {\n    const propValue = props[propName];\n\n    // skip if prop is undefined or is included in the suggestions\n    if (!propValue || suggestionsLookup[propValue]) return undefined;\n\n    // check if the words were correct but ordered differently.\n    // Since we're matching for classNames we need to allow any word order\n    // to pass validation, e.g. `left chevron` vs `chevron left`.\n    const propValueSorted = propValue\n      .split(' ')\n      .sort()\n      .join(' ');\n    if (suggestionsLookup[propValueSorted]) return undefined;\n\n    // find best suggestions\n    const bestMatches = findBestSuggestions(propValue);\n\n    // skip if a match scored 0\n    if (bestMatches.some(x => x.score === 0)) return undefined;\n\n    return new Error(\n      [\n        `Invalid prop \\`${propName}\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`.`,\n        `\\n\\nInstead of \\`${propValue}\\`, did you mean:`,\n        bestMatches.map(x => `\\n  - ${x.suggestion}`).join(''),\n        '\\n',\n      ].join(''),\n    );\n  };\n};\n\n/**\n * The prop cannot be used.\n * Similar to `deprecate` but with different error message.\n */\nexport const never = (props: ObjectOf<any>, propName: string, componentName: string) => {\n  if (_.isNil(props[propName]) || props[propName] === false) return undefined;\n\n  return new Error(`Prop \\`${propName}\\` in \\`${componentName}\\` cannot be used.`);\n};\n\n/**\n * Disallow other props from being defined with this prop.\n * @param disallowedProps - An array of props that cannot be used with this prop.\n */\nexport const disallow = (disallowedProps: string[]) => (\n  props: ObjectOf<any>,\n  propName: string,\n  componentName: string,\n) => {\n  if (!Array.isArray(disallowedProps)) {\n    throw new Error(\n      [\n        'Invalid argument supplied to disallow, expected an instance of array.',\n        ` See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(''),\n    );\n  }\n\n  // skip if prop is undefined\n  if (_.isNil(props[propName]) || props[propName] === false) return undefined;\n\n  // find disallowed props with values\n  const disallowed = disallowedProps.reduce((acc, disallowedProp) => {\n    if (!_.isNil(props[disallowedProp]) && props[disallowedProp] !== false) {\n      return [...acc, disallowedProp];\n    }\n    return acc;\n  }, []);\n\n  if (disallowed.length > 0) {\n    return new Error(\n      [\n        `Prop \\`${propName}\\` in \\`${componentName}\\` conflicts with props: \\`${disallowed.join('`, `')}\\`.`,\n        'They cannot be defined together, choose one or the other.',\n      ].join(' '),\n    );\n  }\n\n  return undefined;\n};\n\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param validators - An array of propType functions.\n */\nexport const every = (validators: Function[]) => (\n  props: ObjectOf<any>,\n  propName: string,\n  componentName: string,\n  ...args: any[]\n) => {\n  if (!Array.isArray(validators)) {\n    throw new Error(\n      [\n        'Invalid argument supplied to every, expected an instance of array.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '),\n    );\n  }\n\n  return _.first(\n    _.compact(\n      _.map(validators, validator => {\n        if (typeof validator !== 'function') {\n          throw new Error(`every() argument \"validators\" should contain functions, found: ${typeOf(validator)}.`);\n        }\n        return validator(props, propName, componentName, ...args);\n      }),\n    ),\n  ); // we can only return one error at a time\n};\n\n/**\n * Ensure a prop adherers to at least one of the given prop type validators.\n * @param validators - An array of propType functions.\n */\nexport const some = (validators: Function[]) => (\n  props: ObjectOf<any>,\n  propName: string,\n  componentName: string,\n  ...args: any[]\n) => {\n  if (!Array.isArray(validators)) {\n    throw new Error(\n      [\n        'Invalid argument supplied to some, expected an instance of array.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '),\n    );\n  }\n\n  const errors = _.compact(\n    _.map(validators, validator => {\n      if (!_.isFunction(validator)) {\n        throw new Error(`some() argument \"validators\" should contain functions, found: ${typeOf(validator)}.`);\n      }\n      return validator(props, propName, componentName, ...args);\n    }),\n  );\n\n  // fail only if all validators failed\n  if (errors.length === validators.length) {\n    const error = new Error('One of these validators must pass:');\n    error.message += `\\n${_.map(errors, err => `- ${err.message}`).join('\\n')}`;\n    return error;\n  }\n\n  return undefined;\n};\n\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param propsShape - An object describing the prop shape.\n * @param validator - A propType function.\n */\nexport const givenProps = (propsShape: Record<string, any>, validator: Function) => (\n  props: ObjectOf<any>,\n  propName: string,\n  componentName: string,\n  ...args: any\n) => {\n  if (!_.isPlainObject(propsShape)) {\n    throw new Error(\n      [\n        'Invalid argument supplied to givenProps, expected an object.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '),\n    );\n  }\n\n  if (typeof validator !== 'function') {\n    throw new Error(\n      [\n        'Invalid argument supplied to givenProps, expected a function.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '),\n    );\n  }\n\n  const shouldValidate = _.keys(propsShape).every((key: string) => {\n    const val = propsShape[key];\n    // require propShape validators to pass or prop values to match\n    return typeof val === 'function' ? !val(props, key, componentName, ...args) : val === props[propName];\n  });\n\n  if (!shouldValidate) return undefined;\n\n  const error = validator(props, propName, componentName, ...args);\n\n  if (error) {\n    // poor mans shallow pretty print, prevents JSON circular reference errors\n    const prettyProps = `{ ${_.keys(_.pick(props, _.keys(propsShape)))\n      .map(key => {\n        const val = props[key];\n        let renderedValue = val;\n        if (typeof val === 'string') renderedValue = `\"${val}\"`;\n        else if (Array.isArray(val)) renderedValue = `[${val.join(', ')}]`;\n        else if (_.isObject(val)) renderedValue = '{...}';\n\n        return `${key}: ${renderedValue}`;\n      })\n      .join(', ')} }`;\n\n    error.message = `Given props ${prettyProps}: ${error.message}`;\n    return error;\n  }\n};\n\n/**\n * Define prop dependencies by requiring other props.\n * @param requiredProps - An array of required prop names.\n */\nexport const demand = (requiredProps: string[]) => (props: ObjectOf<any>, propName: string, componentName: string) => {\n  if (!Array.isArray(requiredProps)) {\n    throw new Error(\n      [\n        'Invalid `requiredProps` argument supplied to require, expected an instance of array.',\n        ` See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(''),\n    );\n  }\n\n  // skip if prop is undefined\n  if (props[propName] === undefined) return undefined;\n\n  const missingRequired = requiredProps.filter(requiredProp => props[requiredProp] === undefined);\n  if (missingRequired.length > 0) {\n    return new Error(\n      `\\`${propName}\\` prop in \\`${componentName}\\` requires props: \\`${missingRequired.join('`, `')}\\`.`,\n    );\n  }\n\n  return undefined;\n};\n\n/**\n * Ensure an multiple prop contains a string with only possible values.\n * @param possible - An array of possible values to prop.\n */\nexport const multipleProp = (possible: string[]) => (\n  props: ObjectOf<string | false>,\n  propName: string,\n  componentName: string,\n) => {\n  if (!Array.isArray(possible)) {\n    throw new Error(\n      [\n        'Invalid argument supplied to some, expected an instance of array.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '),\n    );\n  }\n\n  const propValue = props[propName];\n\n  // skip if prop is undefined\n  if (_.isNil(propValue) || propValue === false) return undefined;\n\n  const values = propValue\n    .replace('large screen', 'large-screen')\n    .replace(/ vertically/g, '-vertically')\n    .split(' ')\n    .map(val => _.trim(val).replace('-', ' '));\n  const invalid = _.difference(values, possible);\n\n  // fail only if there are invalid values\n  if (invalid.length > 0) {\n    return new Error(`\\`${propName}\\` prop in \\`${componentName}\\` has invalid values: \\`${invalid.join('`, `')}\\`.`);\n  }\n\n  return undefined;\n};\n\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\nexport const nodeContent = every([disallow(['children']), PropTypes.node]);\n\nexport const wrapperShorthand = PropTypes.oneOfType([\n  PropTypes.node,\n  PropTypes.object,\n  PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.object])),\n]);\n\n/**\n * A shorthand prop which can be used together with `children`.\n */\nexport const shorthandAllowingChildren = PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.func]);\n\nexport const shorthandObjectAllowingChildren = PropTypes.oneOfType([PropTypes.object, PropTypes.func]);\n\n/**\n * ObjectItemShorthand is a description of a component that can be\n * a props object or a render function.\n */\nexport const objectItemShorthand = every([disallow(['children']), shorthandAllowingChildren]);\n\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, an element or a render function.\n */\nexport const itemShorthand = every([disallow(['children']), shorthandAllowingChildren]);\nexport const itemShorthandWithKindProp = (kindPropValues: string[]) => {\n  return every([\n    disallow(['children']),\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        kind: PropTypes.oneOf(kindPropValues),\n      }),\n      PropTypes.func,\n    ]),\n  ]);\n};\nexport const itemShorthandWithoutJSX = every([\n  disallow(['children']),\n  PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.oneOf([false])]),\n]);\n\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\nexport const collectionObjectShorthand = every([disallow(['children']), PropTypes.arrayOf(objectItemShorthand)]);\n\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\nexport const collectionShorthand = every([disallow(['children']), PropTypes.arrayOf(itemShorthand)]);\nexport const collectionShorthandWithKindProp = (kindPropValues: string[]) => {\n  return every([disallow(['children']), PropTypes.arrayOf(itemShorthandWithKindProp(kindPropValues))]);\n};\n\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param help - A help message to display with the deprecation warning.\n * @param validator - A propType function.\n */\nexport const deprecate = (help: string, validator?: Function) => (\n  props: ObjectOf<any>,\n  propName: string,\n  componentName: string,\n  ...args: any[]\n) => {\n  if (typeof help !== 'string') {\n    throw new Error(\n      [\n        'Invalid `help` argument supplied to deprecate, expected a string.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '),\n    );\n  }\n\n  // skip if prop is undefined\n  if (props[propName] === undefined) return undefined;\n\n  // deprecation error and help\n  const error = new Error(`The \\`${propName}\\` prop in \\`${componentName}\\` is deprecated.`);\n  if (help) error.message += ` ${help}`;\n\n  // add optional validation error message\n  if (validator) {\n    if (typeof validator === 'function') {\n      const validationError = validator(props, propName, componentName, ...args);\n      if (validationError) {\n        error.message = `${error.message} ${validationError.message}`;\n      }\n    } else {\n      throw new Error(\n        [\n          'Invalid argument supplied to deprecate, expected a function.',\n          `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n        ].join(' '),\n      );\n    }\n  }\n\n  return error;\n};\n\nexport const accessibility = PropTypes.func;\n\nexport const size = PropTypes.oneOf<'smallest' | 'smaller' | 'small' | 'medium' | 'large' | 'larger' | 'largest'>([\n  'smallest',\n  'smaller',\n  'small',\n  'medium',\n  'large',\n  'larger',\n  'largest',\n]);\n\nexport const align = PropTypes.oneOf<'start' | 'end' | 'center' | 'justify'>(['start', 'end', 'center', 'justify']);\n\nexport const animation = PropTypes.oneOfType([\n  // Validator is broken in the latest @react/types\n  PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    delay: PropTypes.string,\n    direction: PropTypes.string,\n    duration: PropTypes.string,\n    fillMode: PropTypes.string,\n    iterationCount: PropTypes.string,\n    playState: PropTypes.string,\n    timingFunction: PropTypes.string,\n  }) as any,\n  PropTypes.string,\n]);\n\n// Heads Up!\n// Keep in sync with packages/react/src/themes/types.ts\nexport const design = PropTypes.shape({\n  position: PropTypes.string,\n  display: PropTypes.string,\n\n  top: PropTypes.string,\n  right: PropTypes.string,\n  bottom: PropTypes.string,\n  left: PropTypes.string,\n\n  padding: PropTypes.string,\n  paddingTop: PropTypes.string,\n  paddingRight: PropTypes.string,\n  paddingBottom: PropTypes.string,\n  paddingLeft: PropTypes.string,\n\n  margin: PropTypes.string,\n  marginTop: PropTypes.string,\n  marginRight: PropTypes.string,\n  marginBottom: PropTypes.string,\n  marginLeft: PropTypes.string,\n\n  width: PropTypes.string,\n  height: PropTypes.string,\n  minWidth: PropTypes.string,\n  maxWidth: PropTypes.string,\n  minHeight: PropTypes.string,\n  maxHeight: PropTypes.string,\n});\n\n/** A checker that matches the React.Ref type. */\nexport const ref = PropTypes.oneOfType([PropTypes.func, PropTypes.object as PropTypes.Validator<{ current: any }>]);\n"]},"metadata":{},"sourceType":"module"}