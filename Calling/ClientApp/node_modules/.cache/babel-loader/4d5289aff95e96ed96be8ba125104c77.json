{"ast":null,"code":"import _isPlainObject from \"lodash/isPlainObject\";\nimport { callable } from '@fluentui/styles';\n/**\n * Fela plugin for invoking keyframes with params. The keyframes, defined in the animationName prop,\n * are called with the params object, if defined in the animationName prop.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\n\nexport var felaInvokeKeyframesPlugin = function felaInvokeKeyframesPlugin(styles) {\n  return Object.keys(styles).reduce(function (acc, cssPropertyName) {\n    var _Object$assign3;\n\n    var cssPropertyValue = styles[cssPropertyName];\n\n    if (_isPlainObject(cssPropertyValue)) {\n      var _Object$assign2;\n\n      if (cssPropertyName === 'animationName') {\n        var _Object$assign;\n\n        if (cssPropertyValue.keyframe) {\n          styles[cssPropertyName] = callable(cssPropertyValue.keyframe)(cssPropertyValue.params || {});\n        }\n\n        return Object.assign({}, acc, (_Object$assign = {}, _Object$assign[cssPropertyName] = styles[cssPropertyName], _Object$assign));\n      }\n\n      return Object.assign({}, acc, (_Object$assign2 = {}, _Object$assign2[cssPropertyName] = felaInvokeKeyframesPlugin(cssPropertyValue), _Object$assign2));\n    }\n\n    return Object.assign({}, acc, (_Object$assign3 = {}, _Object$assign3[cssPropertyName] = styles[cssPropertyName], _Object$assign3));\n  }, {});\n};","map":{"version":3,"sources":["felaInvokeKeyframesPlugin.ts"],"names":["felaInvokeKeyframesPlugin","cssPropertyValue","styles","cssPropertyName","callable"],"mappings":";AAAA,SAAA,QAAA,QAAA,kBAAA;AAGA;;;;;;;;AAOA,OAAO,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAA,MAAA,EAA0C;AACjF,SAAO,MAAM,CAAN,IAAA,CAAA,MAAA,EAAA,MAAA,CAA2B,UAAA,GAAA,EAAA,eAAA,EAA0B;AAAA,QAAA,eAAA;;AAC1D,QAAMC,gBAAgB,GAAGC,MAAM,CAA/B,eAA+B,CAA/B;;AAEA,QAAI,cAAA,CAAJ,gBAAI,CAAJ,EAAuC;AAAA,UAAA,eAAA;;AACrC,UAAIC,eAAe,KAAnB,eAAA,EAAyC;AAAA,YAAA,cAAA;;AACvC,YAAIF,gBAAgB,CAApB,QAAA,EAA+B;AAC7BC,UAAAA,MAAM,CAANA,eAAM,CAANA,GAA0BE,QAAQ,CAACH,gBAAgB,CAAzBG,QAAQ,CAARA,CAAoCH,gBAAgB,CAAhBA,MAAAA,IAA9DC,EAA0BE,CAA1BF;AACD;;AAED,eAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,cAAA,GAAA,EAAA,EAAA,cAAA,CAAA,eAAA,CAAA,GAEqBA,MAAM,CAF3B,eAE2B,CAF3B,EAAA,cAAA,EAAA;AAID;;AAED,aAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,eAAA,CAAA,GAEqBF,yBAAyB,CAF9C,gBAE8C,CAF9C,EAAA,eAAA,EAAA;AAID;;AAED,WAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAoCE,MAAM,CAA1C,eAA0C,CAA1C,EAAA,eAAA,EAAA;AArBK,GAAA,EAAP,EAAO,CAAP;AADK,CAAA","sourcesContent":["import { callable, ICSSInJSStyle } from '@fluentui/styles';\nimport * as _ from 'lodash';\n\n/**\n * Fela plugin for invoking keyframes with params. The keyframes, defined in the animationName prop,\n * are called with the params object, if defined in the animationName prop.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\nexport const felaInvokeKeyframesPlugin = (styles: ICSSInJSStyle): ICSSInJSStyle => {\n  return Object.keys(styles).reduce((acc, cssPropertyName) => {\n    const cssPropertyValue = styles[cssPropertyName];\n\n    if (_.isPlainObject(cssPropertyValue)) {\n      if (cssPropertyName === 'animationName') {\n        if (cssPropertyValue.keyframe) {\n          styles[cssPropertyName] = callable(cssPropertyValue.keyframe)(cssPropertyValue.params || {});\n        }\n\n        return {\n          ...acc,\n          [cssPropertyName]: styles[cssPropertyName],\n        };\n      }\n\n      return {\n        ...acc,\n        [cssPropertyName]: felaInvokeKeyframesPlugin(cssPropertyValue),\n      };\n    }\n\n    return { ...acc, [cssPropertyName]: styles[cssPropertyName] };\n  }, {});\n};\n"]},"metadata":{},"sourceType":"module"}