{"ast":null,"code":"\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultGetter = void 0;\n/**\n * Default getter which just does a simple property access. Returns\n * undefined if the key is not set.\n *\n * @param carrier\n * @param key\n */\n\nfunction defaultGetter(carrier, key) {\n  return carrier[key];\n}\n\nexports.defaultGetter = defaultGetter;","map":{"version":3,"sources":["../../../../src/context/propagation/getter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAOH;;;;;;AAMG;;AACH,SAAgB,aAAhB,CAA8B,OAA9B,EAA4C,GAA5C,EAAuD;AACrD,SAAO,OAAO,CAAC,GAAD,CAAd;AACD;;AAFD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultGetter = void 0;\n/**\n * Default getter which just does a simple property access. Returns\n * undefined if the key is not set.\n *\n * @param carrier\n * @param key\n */\nfunction defaultGetter(carrier, key) {\n    return carrier[key];\n}\nexports.defaultGetter = defaultGetter;\n//# sourceMappingURL=getter.js.map"]},"metadata":{},"sourceType":"script"}