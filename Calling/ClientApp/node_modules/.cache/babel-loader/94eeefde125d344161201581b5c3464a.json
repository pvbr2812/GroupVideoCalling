{"ast":null,"code":"import { checkboxSlotClassNames } from '../../../../components/Checkbox/Checkbox';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { checkboxIndicatorUrl } from './checkboxIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\n\nvar commonToggleBeforeStyles = function commonToggleBeforeStyles(v) {\n  return {\n    content: \"' '\",\n    display: 'block',\n    borderRadius: '50%',\n    width: v.toggleIndicatorSize,\n    height: v.toggleIndicatorSize,\n    transition: 'margin .3s ease'\n  };\n};\n\nexport var checkboxStyles = {\n  root: function root(_ref) {\n    var _hover;\n\n    var p = _ref.props,\n        v = _ref.variables,\n        t = _ref.theme;\n    return Object.assign({\n      position: 'relative',\n      display: ['inline-grid', '-ms-inline-grid'],\n      gridTemplateColumns: \"auto \" + v.gap + \" 1fr\",\n      // IE11: Gap is done via virtual column as in autoprefixer\n      msGridColumns: \"auto \" + v.gap + \" 1fr\"\n    }, p.labelPosition === 'start' && {\n      gridTemplateColumns: \"1fr \" + v.gap + \" auto\",\n      msGridColumns: \"1fr \" + v.gap + \" auto\"\n    }, {\n      cursor: 'pointer',\n      outline: 0,\n      color: v.textColor,\n      padding: v.rootPadding,\n      verticalAlign: 'middle',\n      alignItems: 'start'\n    }, getBorderFocusStyles({\n      variables: t.siteVariables,\n      borderRadius: '3px'\n    }), {\n      ':hover': (_hover = {\n        color: v.textColorHover\n      }, _hover[\"& .\" + checkboxSlotClassNames.indicator] = Object.assign({}, !p.toggle && Object.assign({}, p.checked && {\n        borderColor: v.checkedBackgroundHover,\n        backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackgroundHover)\n      }, !p.checked && {\n        borderColor: v.borderColorHover\n      }), p.toggle && !p.disabled && Object.assign({\n        borderColor: v.borderColorHover,\n        ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n          borderColor: v.borderColorHover,\n          borderStyle: v.borderStyle,\n          borderWidth: v.borderWidth,\n          margin: v.togglePadding,\n          background: 'transparent'\n        })\n      }, p.checked && {\n        borderColor: v.checkedBorderColor,\n        background: v.checkedBackgroundHover,\n        ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n          margin: v.toggleCheckedPadding,\n          background: v.checkedIndicatorColor\n        })\n      })), _hover)\n    }, p.checked && {\n      color: v.checkedTextColor\n    }, p.disabled && {\n      cursor: 'default',\n      pointerEvents: 'none',\n      color: v.disabledColor\n    });\n  },\n  checkbox: function checkbox(_ref2) {\n    var p = _ref2.props,\n        v = _ref2.variables;\n    return Object.assign({\n      msGridRowAlign: 'center',\n      gridColumn: 1,\n      msGridColumn: 1\n    }, p.labelPosition === 'start' && {\n      gridColumn: 3,\n      msGridColumn: 3\n    }, {\n      boxShadow: 'unset',\n      width: pxToRem(16),\n      height: pxToRem(16),\n      borderColor: v.borderColor,\n      borderStyle: v.borderStyle,\n      borderRadius: v.borderRadius,\n      borderWidth: v.borderWidth,\n      color: v.indicatorColor,\n      margin: v.margin,\n      padding: v.padding,\n      userSelect: 'none',\n      backgroundImage: checkboxIndicatorUrl(v.indicatorColor, v.background),\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    }, p.checked && {\n      borderColor: v.checkedBorderColor,\n      backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackground)\n    }, p.disabled && {\n      backgroundColor: v.disabledBackground,\n      borderColor: v.disabledBorderColor\n    }, p.disabled && p.checked && {\n      color: v.disabledCheckedIndicatorColor,\n      borderColor: v.disabledBackgroundChecked,\n      backgroundImage: checkboxIndicatorUrl(v.disabledCheckedIndicatorColor, v.disabledBackgroundChecked)\n    });\n  },\n  toggle: function toggle(_ref3) {\n    var p = _ref3.props,\n        v = _ref3.variables;\n    return Object.assign({\n      msGridRowAlign: 'center',\n      gridColumn: 1,\n      msGridColumn: 1\n    }, p.labelPosition === 'start' && {\n      gridColumn: 3,\n      msGridColumn: 3\n    }, {\n      boxShadow: 'unset',\n      boxSizing: 'border-box',\n      background: v.background,\n      borderColor: v.borderColor,\n      borderStyle: v.borderStyle,\n      borderRadius: v.toggleBorderRadius,\n      borderWidth: v.borderWidth,\n      margin: v.toggleMargin,\n      userSelect: 'none',\n      width: v.toggleWidth,\n      height: v.toggleHeight,\n      ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n        borderColor: p.disabled ? v.disabledToggleIndicatorColor : v.borderColor,\n        borderStyle: v.borderStyle,\n        borderWidth: v.borderWidth,\n        margin: v.togglePadding\n      })\n    }, p.checked && {\n      borderColor: v.checkedBorderColor,\n      background: v.checkedBackground,\n      ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n        margin: v.toggleCheckedPadding,\n        background: v.checkedIndicatorColor\n      })\n    }, p.disabled && Object.assign({\n      background: v.disabledBackground,\n      borderColor: v.disabledBorderColor\n    }, p.checked && {\n      background: v.disabledBackgroundChecked,\n      borderColor: 'transparent',\n      ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n        margin: v.toggleCheckedPadding,\n        background: v.disabledCheckedIndicatorColor\n      })\n    }));\n  },\n  label: function label(_ref4) {\n    var p = _ref4.props;\n    return Object.assign({\n      display: 'block',\n      // IE11: should be forced to be block, as inline-block is not supported\n      gridColumn: 3,\n      msGridColumn: 3\n    }, p.labelPosition === 'start' && {\n      gridColumn: 1,\n      msGridColumn: 1\n    });\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Checkbox/checkboxStyles.ts"],"names":["commonToggleBeforeStyles","content","display","borderRadius","width","v","height","transition","checkboxStyles","root","p","t","position","gridTemplateColumns","msGridColumns","cursor","outline","color","padding","verticalAlign","alignItems","getBorderFocusStyles","variables","textColorHover","checkboxSlotClassNames","borderColor","backgroundImage","checkboxIndicatorUrl","borderColorHover","borderStyle","borderWidth","margin","background","checkedIndicatorColor","checkedTextColor","pointerEvents","disabledColor","checkbox","msGridRowAlign","gridColumn","msGridColumn","boxShadow","pxToRem","userSelect","backgroundPosition","backgroundRepeat","backgroundColor","disabledBorderColor","toggle","boxSizing","togglePadding","disabledCheckedIndicatorColor","label"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CheckboxStylesProps, checkboxSlotClassNames } from '../../../../components/Checkbox/Checkbox';\nimport { CheckboxVariables } from './checkboxVariables';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { checkboxIndicatorUrl } from './checkboxIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\n\nconst commonToggleBeforeStyles = v => ({\n  content: \"' '\",\n  display: 'block',\n  borderRadius: '50%',\n  width: v.toggleIndicatorSize,\n  height: v.toggleIndicatorSize,\n  transition: 'margin .3s ease',\n});\n\nexport const checkboxStyles: ComponentSlotStylesPrepared<CheckboxStylesProps, CheckboxVariables> = {\n  root: ({ props: p, variables: v, theme: t }): ICSSInJSStyle => ({\n    position: 'relative',\n\n    display: ['inline-grid', '-ms-inline-grid'],\n    gridTemplateColumns: `auto ${v.gap} 1fr`,\n    // IE11: Gap is done via virtual column as in autoprefixer\n    msGridColumns: `auto ${v.gap} 1fr`,\n\n    ...(p.labelPosition === 'start' && {\n      gridTemplateColumns: `1fr ${v.gap} auto`,\n      msGridColumns: `1fr ${v.gap} auto`,\n    }),\n\n    cursor: 'pointer',\n    outline: 0,\n\n    color: v.textColor,\n    padding: v.rootPadding,\n    verticalAlign: 'middle',\n    alignItems: 'start',\n\n    ...getBorderFocusStyles({ variables: t.siteVariables, borderRadius: '3px' }),\n\n    ':hover': {\n      color: v.textColorHover,\n\n      [`& .${checkboxSlotClassNames.indicator}`]: {\n        ...(!p.toggle && {\n          ...(p.checked && {\n            borderColor: v.checkedBackgroundHover,\n            backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackgroundHover),\n          }),\n          ...(!p.checked && {\n            borderColor: v.borderColorHover,\n          }),\n        }),\n        ...(p.toggle &&\n          !p.disabled && {\n            borderColor: v.borderColorHover,\n\n            ':before': {\n              ...commonToggleBeforeStyles(v),\n              borderColor: v.borderColorHover,\n              borderStyle: v.borderStyle,\n              borderWidth: v.borderWidth,\n              margin: v.togglePadding,\n              background: 'transparent',\n            },\n\n            ...(p.checked && {\n              borderColor: v.checkedBorderColor,\n              background: v.checkedBackgroundHover,\n              ':before': {\n                ...commonToggleBeforeStyles(v),\n                margin: v.toggleCheckedPadding,\n                background: v.checkedIndicatorColor,\n              },\n            }),\n          }),\n      },\n    },\n\n    ...(p.checked && {\n      color: v.checkedTextColor,\n    }),\n\n    ...(p.disabled && {\n      cursor: 'default',\n      pointerEvents: 'none',\n      color: v.disabledColor,\n    }),\n  }),\n\n  checkbox: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    msGridRowAlign: 'center',\n    gridColumn: 1,\n    msGridColumn: 1,\n\n    ...(p.labelPosition === 'start' && {\n      gridColumn: 3,\n      msGridColumn: 3,\n    }),\n\n    boxShadow: 'unset',\n    width: pxToRem(16),\n    height: pxToRem(16),\n\n    borderColor: v.borderColor,\n    borderStyle: v.borderStyle,\n    borderRadius: v.borderRadius,\n    borderWidth: v.borderWidth,\n    color: v.indicatorColor,\n    margin: v.margin,\n    padding: v.padding,\n    userSelect: 'none',\n\n    backgroundImage: checkboxIndicatorUrl(v.indicatorColor, v.background),\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n\n    ...(p.checked && {\n      borderColor: v.checkedBorderColor,\n      backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackground),\n    }),\n\n    ...(p.disabled && {\n      backgroundColor: v.disabledBackground,\n      borderColor: v.disabledBorderColor,\n    }),\n\n    ...(p.disabled &&\n      p.checked && {\n        color: v.disabledCheckedIndicatorColor,\n        borderColor: v.disabledBackgroundChecked,\n        backgroundImage: checkboxIndicatorUrl(v.disabledCheckedIndicatorColor, v.disabledBackgroundChecked),\n      }),\n  }),\n\n  toggle: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    msGridRowAlign: 'center',\n    gridColumn: 1,\n    msGridColumn: 1,\n\n    ...(p.labelPosition === 'start' && {\n      gridColumn: 3,\n      msGridColumn: 3,\n    }),\n\n    boxShadow: 'unset',\n    boxSizing: 'border-box',\n\n    background: v.background,\n    borderColor: v.borderColor,\n    borderStyle: v.borderStyle,\n    borderRadius: v.toggleBorderRadius,\n    borderWidth: v.borderWidth,\n    margin: v.toggleMargin,\n    userSelect: 'none',\n    width: v.toggleWidth,\n    height: v.toggleHeight,\n\n    ':before': {\n      ...commonToggleBeforeStyles(v),\n      borderColor: p.disabled ? v.disabledToggleIndicatorColor : v.borderColor,\n      borderStyle: v.borderStyle,\n      borderWidth: v.borderWidth,\n      margin: v.togglePadding,\n    },\n\n    ...(p.checked && {\n      borderColor: v.checkedBorderColor,\n      background: v.checkedBackground,\n      ':before': {\n        ...commonToggleBeforeStyles(v),\n        margin: v.toggleCheckedPadding,\n        background: v.checkedIndicatorColor,\n      },\n    }),\n\n    ...(p.disabled && {\n      background: v.disabledBackground,\n      borderColor: v.disabledBorderColor,\n      ...(p.checked && {\n        background: v.disabledBackgroundChecked,\n        borderColor: 'transparent',\n        ':before': {\n          ...commonToggleBeforeStyles(v),\n          margin: v.toggleCheckedPadding,\n          background: v.disabledCheckedIndicatorColor,\n        },\n      }),\n    }),\n  }),\n\n  label: ({ props: p }): ICSSInJSStyle => ({\n    display: 'block', // IE11: should be forced to be block, as inline-block is not supported\n\n    gridColumn: 3,\n    msGridColumn: 3,\n\n    ...(p.labelPosition === 'start' && {\n      gridColumn: 1,\n      msGridColumn: 1,\n    }),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}