{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nvar AzureKeyCredential =\n/** @class */\nfunction () {\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  function AzureKeyCredential(key) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  Object.defineProperty(AzureKeyCredential.prototype, \"key\", {\n    /**\n     * The value of the key to be used in authentication\n     */\n    get: function () {\n      return this._key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n\n  AzureKeyCredential.prototype.update = function (newKey) {\n    this._key = newKey;\n  };\n\n  return AzureKeyCredential;\n}();\n\nexport { AzureKeyCredential };","map":{"version":3,"sources":["../../src/azureKeyCredential.ts"],"names":[],"mappings":"AAAA;AACA;;AAYA;;;AAGG;AACH,IAAA,kBAAA;AAAA;AAAA,YAAA;AAUE;;;;;AAKG;AACH,WAAA,kBAAA,CAAY,GAAZ,EAAuB;AACrB,QAAI,CAAC,GAAL,EAAU;AACR,YAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,SAAK,IAAL,GAAY,GAAZ;AACD;;AAhBD,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,KAAX,EAAc;AAHd;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,IAAZ;AACD,KAFa;qBAAA;;AAAA,GAAd;AAkBA;;;;;;;AAOG;;AACI,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,MAAd,EAA4B;AAC1B,SAAK,IAAL,GAAY,MAAZ;AACD,GAFM;;AAGT,SAAA,kBAAA;AAAC,CAnCD,EAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Represents a credential defined by a static API key.\n */\nexport interface KeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n}\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}