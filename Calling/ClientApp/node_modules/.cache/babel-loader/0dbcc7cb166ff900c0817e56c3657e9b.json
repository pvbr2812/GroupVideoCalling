{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport _debounce from \"lodash/debounce\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { carouselBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { Animation } from '../Animation/Animation';\nimport { createShorthandFactory, commonPropTypes, childrenExist, isFromKeyboard as isEventFromKeyboard } from '../../utils';\nimport { CarouselItem } from './CarouselItem';\nimport { Text } from '../Text/Text';\nimport { CarouselNavigation } from './CarouselNavigation';\nimport { CarouselNavigationItem } from './CarouselNavigationItem';\nimport { CarouselPaddle } from './CarouselPaddle';\nimport { getElementType, useAccessibility, useStyles, useFluentContext, useTelemetry, useUnhandledProps, useStateManager } from '@fluentui/react-bindings';\nimport { createCarouselManager } from '@fluentui/state';\nexport var carouselClassName = 'ui-carousel';\nexport var carouselSlotClassNames = {\n  itemsContainer: carouselClassName + \"__itemscontainer\",\n  paddleNext: carouselClassName + \"__paddlenext\",\n  paddlePrevious: carouselClassName + \"__paddleprevious\",\n  pagination: carouselClassName + \"__pagination\",\n  navigation: carouselClassName + \"__navigation\"\n};\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n * @accessibilityIssues\n * [VoiceOver doens't narrate label referenced by aria-labelledby attribute, when role is \"tabpanel\"](https://bugs.chromium.org/p/chromium/issues/detail?id=1040924)\n */\n\nexport var Carousel = /*#__PURE__*/function () {\n  var Carousel = function Carousel(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(Carousel.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var accessibility = props.accessibility,\n        items = props.items,\n        circular = props.circular,\n        getItemPositionText = props.getItemPositionText,\n        paddlePrevious = props.paddlePrevious,\n        paddleNext = props.paddleNext,\n        navigation = props.navigation,\n        thumbnails = props.thumbnails,\n        children = props.children,\n        ariaRoleDescription = props.ariaRoleDescription,\n        ariaLabel = props.ariaLabel,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables;\n    var ElementType = getElementType(props);\n\n    var _useStateManager = useStateManager(createCarouselManager, {\n      mapPropsToInitialState: function mapPropsToInitialState() {\n        return {\n          activeIndex: props.defaultActiveIndex\n        };\n      },\n      mapPropsToState: function mapPropsToState() {\n        return {\n          activeIndex: props.activeIndex\n        };\n      }\n    }),\n        state = _useStateManager.state,\n        actions = _useStateManager.actions;\n\n    var prevActiveIndex = state.prevActiveIndex,\n        ariaLiveOn = state.ariaLiveOn,\n        shouldFocusContainer = state.shouldFocusContainer,\n        isFromKeyboard = state.isFromKeyboard,\n        activeIndex = state.activeIndex;\n    var itemRefs = React.useMemo(function () {\n      return Array.from({\n        length: items == null ? void 0 : items.length\n      }, function () {\n        return /*#__PURE__*/React.createRef();\n      });\n    }, // As we are using \"panels.length\" it's fine to have dependency on them\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items == null ? void 0 : items.length]);\n    var unhandledProps = useUnhandledProps(Carousel.handledProps, props);\n    var getA11yProps = useAccessibility(accessibility, {\n      debugName: Carousel.displayName,\n      actionHandlers: {\n        showNextSlideByKeyboardNavigation: function showNextSlideByKeyboardNavigation(e) {\n          e.preventDefault();\n          showNextSlide(e, true);\n        },\n        showPreviousSlideByKeyboardNavigation: function showPreviousSlideByKeyboardNavigation(e) {\n          e.preventDefault();\n          showPreviousSlide(e, true);\n        },\n        showNextSlideByPaddlePress: function showNextSlideByPaddlePress(e) {\n          e.preventDefault();\n          showNextSlide(e, false);\n          handleNextPaddleFocus();\n        },\n        showPreviousSlideByPaddlePress: function showPreviousSlideByPaddlePress(e) {\n          e.preventDefault();\n          showPreviousSlide(e, false);\n          handlePreviousPaddleFocus();\n        }\n      },\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          navigation: navigation,\n          ariaLiveOn: ariaLiveOn,\n          ariaRoleDescription: ariaRoleDescription,\n          ariaLabel: ariaLabel\n        };\n      }\n    });\n\n    var _useStyles = useStyles(Carousel.displayName, {\n      className: carouselClassName,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          shouldFocusContainer: shouldFocusContainer,\n          isFromKeyboard: isFromKeyboard\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var paddleNextRef = React.useRef();\n    var paddlePreviousRef = React.useRef();\n    var focusItemAtIndex = React.useMemo(function () {\n      return _debounce(function (index) {\n        var _itemRefs$index$curre;\n\n        (_itemRefs$index$curre = itemRefs[index].current) == null ? void 0 : _itemRefs$index$curre.focus();\n      }, 400);\n    }, [itemRefs]);\n    React.useEffect(function () {\n      return function () {\n        focusItemAtIndex.cancel();\n      };\n    }, [focusItemAtIndex, items]);\n\n    var setActiveIndex = function setActiveIndex(e, index, focusItem) {\n      var lastItemIndex = items.length - 1;\n      var nextActiveIndex = index;\n      var lastActiveIndex = state.activeIndex;\n\n      if (index < 0) {\n        if (!circular) {\n          return;\n        }\n\n        nextActiveIndex = lastItemIndex;\n      }\n\n      if (index > lastItemIndex) {\n        if (!circular) {\n          return;\n        }\n\n        nextActiveIndex = 0;\n      }\n\n      actions.setIndexes(nextActiveIndex, lastActiveIndex);\n\n      _invoke(props, 'onActiveIndexChange', e, props);\n\n      if (focusItem) {\n        focusItemAtIndex(nextActiveIndex);\n      }\n    };\n\n    var overrideItemProps = function overrideItemProps(predefinedProps) {\n      return {\n        onFocus: function onFocus(e, itemProps) {\n          actions.setShouldFocusContainer(e.currentTarget === e.target);\n          actions.setIsFromKeyboard(isEventFromKeyboard());\n\n          _invoke(predefinedProps, 'onFocus', e, itemProps);\n        },\n        onBlur: function onBlur(e, itemProps) {\n          actions.setShouldFocusContainer(e.currentTarget.contains(e.relatedTarget));\n          actions.setIsFromKeyboard(false);\n\n          _invoke(predefinedProps, 'onBlur', e, itemProps);\n        }\n      };\n    };\n\n    var renderContent = function renderContent() {\n      return /*#__PURE__*/React.createElement(\"div\", getA11yProps('itemsContainerWrapper', {\n        className: classes.itemsContainerWrapper\n      }), /*#__PURE__*/React.createElement(\"div\", getA11yProps('itemsContainer', {\n        className: cx(carouselSlotClassNames.itemsContainer, classes.itemsContainer)\n      }), items && items.map(function (item, index) {\n        var itemRef = itemRefs[index];\n        var active = activeIndex === index;\n        var slideToNext = prevActiveIndex < activeIndex;\n        var initialMounting = prevActiveIndex === -1;\n\n        if (circular && prevActiveIndex === items.length - 1 && activeIndex === 0) {\n          slideToNext = true;\n        } else if (circular && prevActiveIndex === 0 && activeIndex === items.length - 1) {\n          slideToNext = false;\n        }\n\n        return /*#__PURE__*/React.createElement(Animation, {\n          key: item['key'] || index,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          visible: active,\n          name: initialMounting || !active ? '' : slideToNext ? 'carousel-slide-to-next-enter' : 'carousel-slide-to-previous-enter'\n        }, /*#__PURE__*/React.createElement(Ref, {\n          innerRef: itemRef\n        }, CarouselItem.create(item, {\n          defaultProps: function defaultProps() {\n            return Object.assign({\n              active: active,\n              navigation: !!navigation\n            }, getItemPositionText && {\n              itemPositionText: getItemPositionText(index, items.length)\n            });\n          },\n          overrideProps: overrideItemProps\n        })));\n      })));\n    };\n\n    var handleNextPaddleFocus = function handleNextPaddleFocus() {\n      // if 'next' paddle will disappear, will focus 'previous' one.\n      if (!navigation && activeIndex >= props.items.length - 2 && !circular) {\n        paddlePreviousRef.current.focus();\n      }\n    };\n\n    var handlePreviousPaddleFocus = function handlePreviousPaddleFocus() {\n      // if 'previous' paddle will disappear, will focus 'next' one.\n      if (!navigation && activeIndex <= 1 && !circular) {\n        paddleNextRef.current.focus();\n      }\n    };\n\n    var showPreviousSlide = function showPreviousSlide(e, focusItem) {\n      setActiveIndex(e, +activeIndex - 1, focusItem);\n    };\n\n    var showNextSlide = function showNextSlide(e, focusItem) {\n      setActiveIndex(e, +activeIndex + 1, focusItem);\n    };\n\n    var handlePaddleOverrides = function handlePaddleOverrides(predefinedProps, paddleName) {\n      return {\n        onClick: function onClick(e, paddleProps) {\n          _invoke(predefinedProps, 'onClick', e, paddleProps);\n\n          if (paddleName === 'paddleNext') {\n            showNextSlide(e, false);\n            handleNextPaddleFocus();\n          } else if (paddleName === 'paddlePrevious') {\n            showPreviousSlide(e, false);\n            handlePreviousPaddleFocus();\n          }\n        },\n        onBlur: function onBlur(e, paddleProps) {\n          if (e.relatedTarget !== paddleNextRef.current) {\n            actions.setAriaLiveOn(false);\n          }\n        },\n        onFocus: function onFocus(e, paddleProps) {\n          _invoke(predefinedProps, 'onFocus', e, paddleProps);\n\n          actions.setAriaLiveOn(true);\n        }\n      };\n    };\n\n    var renderPaddles = function renderPaddles() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Ref, {\n        innerRef: paddlePreviousRef\n      }, CarouselPaddle.create(paddlePrevious, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('paddlePrevious', {\n            className: carouselSlotClassNames.paddlePrevious,\n            previous: true,\n            hidden: items !== undefined && !circular && activeIndex === 0\n          });\n        },\n        overrideProps: function overrideProps(predefinedProps) {\n          return handlePaddleOverrides(predefinedProps, 'paddlePrevious');\n        }\n      })), /*#__PURE__*/React.createElement(Ref, {\n        innerRef: paddleNextRef\n      }, CarouselPaddle.create(paddleNext, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('paddleNext', {\n            className: carouselSlotClassNames.paddleNext,\n            next: true,\n            hidden: items !== undefined && !circular && activeIndex === items.length - 1\n          });\n        },\n        overrideProps: function overrideProps(predefinedProps) {\n          return handlePaddleOverrides(predefinedProps, 'paddleNext');\n        }\n      })));\n    };\n\n    var renderNavigation = function renderNavigation() {\n      if (!items || !items.length) {\n        return null;\n      }\n\n      return navigation ? CarouselNavigation.create(navigation, {\n        defaultProps: function defaultProps() {\n          return {\n            className: carouselSlotClassNames.navigation,\n            iconOnly: true,\n            activeIndex: activeIndex,\n            thumbnails: thumbnails\n          };\n        },\n        overrideProps: function overrideProps(predefinedProps) {\n          return {\n            onItemClick: function onItemClick(e, itemProps) {\n              var index = itemProps.index;\n              setActiveIndex(e, index, true);\n\n              _invoke(predefinedProps, 'onClick', e, itemProps);\n            }\n          };\n        }\n      }) : getItemPositionText ? /*#__PURE__*/React.createElement(Text, {\n        \"aria-hidden\": \"true\",\n        className: carouselSlotClassNames.pagination,\n        content: getItemPositionText(+activeIndex, items.length)\n      }) : null;\n    };\n\n    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), childrenExist(children) ? children : /*#__PURE__*/React.createElement(React.Fragment, null, renderContent(), renderPaddles(), renderNavigation()));\n    setEnd();\n    return element;\n  };\n\n  Carousel.displayName = 'Carousel';\n  Carousel.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: false\n  }), {\n    activeIndex: PropTypes.number,\n    ariaRoleDescription: PropTypes.string,\n    ariaLabel: PropTypes.string,\n    circular: PropTypes.bool,\n    defaultActiveIndex: PropTypes.number,\n    getItemPositionText: PropTypes.func,\n    items: customPropTypes.collectionShorthand,\n    navigation: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n    navigationPosition: PropTypes.oneOf(['below', 'above', 'start', 'end']),\n    onActiveIndexChange: PropTypes.func,\n    paddleNext: customPropTypes.itemShorthand,\n    paddlesPosition: PropTypes.oneOf(['inside', 'outside', 'inline']),\n    paddlePrevious: customPropTypes.itemShorthand,\n    thumbnails: PropTypes.bool\n  });\n  Carousel.defaultProps = {\n    accessibility: carouselBehavior,\n    paddlePrevious: {},\n    paddleNext: {}\n  };\n  Carousel.Item = CarouselItem;\n  Carousel.Navigation = CarouselNavigation;\n  Carousel.NavigationItem = CarouselNavigationItem;\n  Carousel.Paddle = CarouselPaddle;\n  Carousel.handledProps = Object.keys(Carousel.propTypes);\n  Carousel.create = createShorthandFactory({\n    Component: Carousel,\n    mappedArrayProp: 'items'\n  });\n  return Carousel;\n}();","map":{"version":3,"sources":["components/Carousel/Carousel.tsx"],"names":["isFromKeyboard","carouselClassName","carouselSlotClassNames","itemsContainer","paddleNext","paddlePrevious","pagination","navigation","Carousel","context","useFluentContext","setStart","setEnd","useTelemetry","accessibility","items","circular","getItemPositionText","thumbnails","children","ariaRoleDescription","ariaLabel","className","design","styles","variables","props","ElementType","getElementType","state","actions","useStateManager","mapPropsToInitialState","activeIndex","defaultActiveIndex","mapPropsToState","prevActiveIndex","ariaLiveOn","shouldFocusContainer","itemRefs","length","React","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","actionHandlers","showNextSlideByKeyboardNavigation","e","showNextSlide","showPreviousSlideByKeyboardNavigation","showPreviousSlide","showNextSlideByPaddlePress","handleNextPaddleFocus","showPreviousSlideByPaddlePress","handlePreviousPaddleFocus","mapPropsToBehavior","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","paddleNextRef","paddlePreviousRef","focusItemAtIndex","setActiveIndex","lastItemIndex","nextActiveIndex","lastActiveIndex","index","overrideItemProps","onFocus","isEventFromKeyboard","onBlur","renderContent","itemsContainerWrapper","cx","itemRef","active","slideToNext","initialMounting","item","defaultProps","itemPositionText","overrideProps","handlePaddleOverrides","onClick","paddleName","renderPaddles","previous","hidden","next","renderNavigation","iconOnly","onItemClick","itemProps","element","root","childrenExist","content","PropTypes","customPropTypes","navigationPosition","onActiveIndexChange","paddlesPosition","bool","Object","createShorthandFactory","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { Accessibility, carouselBehavior, CarouselBehaviorProps } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { Animation } from '../Animation/Animation';\n\nimport {\n  UIComponentProps,\n  createShorthandFactory,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  isFromKeyboard as isEventFromKeyboard,\n} from '../../utils';\nimport { ShorthandCollection, ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { CarouselItem, CarouselItemProps } from './CarouselItem';\nimport { Text } from '../Text/Text';\nimport { CarouselNavigation, CarouselNavigationProps } from './CarouselNavigation';\nimport { CarouselNavigationItem, CarouselNavigationItemProps } from './CarouselNavigationItem';\nimport { CarouselPaddle, CarouselPaddleProps } from './CarouselPaddle';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n  useStateManager,\n} from '@fluentui/react-bindings';\nimport { createCarouselManager, CarouselState, CarouselActions } from '@fluentui/state';\n\nexport interface CarouselSlotClassNames {\n  itemsContainer: string;\n  paddleNext: string;\n  paddlePrevious: string;\n  pagination: string;\n  navigation: string;\n}\n\nexport interface CarouselProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuAsToolbarBehavior, tabListBehavior, tabBehavior\n   */\n  accessibility?: Accessibility<CarouselBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /**\n   * Sets the aria-roledescription attribute.\n   */\n  ariaRoleDescription?: string;\n\n  /**\n   * Sets the aria-label attribute for carousel.\n   */\n  ariaLabel?: string;\n\n  /** Specifies if the process of switching slides is circular. */\n  circular?: boolean;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number;\n\n  /**\n   * Message generator for item position in the carousel. Used to generate the\n   * text for pagination. Also generates invisible text content for each item\n   * which is added along with the slide content. These are used by the screen\n   * reader to narrate position when active item is changed.\n   */\n  getItemPositionText?: (index: number, size: number) => string;\n\n  /** Shorthand array of props for CarouselItem. */\n  items?: ShorthandCollection<CarouselItemProps>;\n\n  thumbnails?: boolean;\n\n  /** Shorthand array of props for the buttons of the CarouselNavigation. */\n  navigation?: ShorthandValue<CarouselNavigationProps> | ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * A Carousel can position its navigation below the content by default,\n   * above the content, to the start or to the end of the content.\n   */\n  navigationPosition?: 'below' | 'above' | 'start' | 'end';\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All Carousel props.\n   */\n  onActiveIndexChange?: ComponentEventHandler<CarouselProps>;\n\n  /** Shorthand for the paddle that navigates to the next item. */\n  paddleNext?: ShorthandValue<CarouselPaddleProps>;\n\n  /**\n   * A Carousel can position its paddels inside the content, outside or inline\n   * with the navigation component.\n   */\n  paddlesPosition?: 'inside' | 'outside' | 'inline';\n\n  /** Shorthand for the paddle that navigates to the previous item. */\n  paddlePrevious?: ShorthandValue<CarouselPaddleProps>;\n}\n\nexport type CarouselStylesProps = { isFromKeyboard: boolean; shouldFocusContainer: boolean };\n\nexport const carouselClassName = 'ui-carousel';\nexport const carouselSlotClassNames: CarouselSlotClassNames = {\n  itemsContainer: `${carouselClassName}__itemscontainer`,\n  paddleNext: `${carouselClassName}__paddlenext`,\n  paddlePrevious: `${carouselClassName}__paddleprevious`,\n  pagination: `${carouselClassName}__pagination`,\n  navigation: `${carouselClassName}__navigation`,\n};\n\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n * @accessibilityIssues\n * [VoiceOver doens't narrate label referenced by aria-labelledby attribute, when role is \"tabpanel\"](https://bugs.chromium.org/p/chromium/issues/detail?id=1040924)\n */\nexport const Carousel: ComponentWithAs<'div', CarouselProps> &\n  FluentComponentStaticProps<CarouselProps> & {\n    Item: typeof CarouselItem;\n    Navigation: typeof CarouselNavigation;\n    NavigationItem: typeof CarouselNavigationItem;\n    Paddle: typeof CarouselPaddle;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Carousel.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibility,\n    items,\n    circular,\n    getItemPositionText,\n    paddlePrevious,\n    paddleNext,\n    navigation,\n    thumbnails,\n    children,\n    ariaRoleDescription,\n    ariaLabel,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const ElementType = getElementType(props);\n\n  const { state, actions } = useStateManager<CarouselState, CarouselActions>(createCarouselManager, {\n    mapPropsToInitialState: () => ({\n      activeIndex: props.defaultActiveIndex,\n    }),\n    mapPropsToState: () => ({\n      activeIndex: props.activeIndex,\n    }),\n  });\n\n  const { prevActiveIndex, ariaLiveOn, shouldFocusContainer, isFromKeyboard, activeIndex } = state;\n\n  const itemRefs = React.useMemo<React.RefObject<HTMLElement>[]>(\n    () => Array.from({ length: items?.length }, () => React.createRef()),\n    // As we are using \"panels.length\" it's fine to have dependency on them\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items?.length],\n  );\n\n  const unhandledProps = useUnhandledProps(Carousel.handledProps, props);\n  const getA11yProps = useAccessibility<CarouselBehaviorProps>(accessibility, {\n    debugName: Carousel.displayName,\n    actionHandlers: {\n      showNextSlideByKeyboardNavigation: e => {\n        e.preventDefault();\n        showNextSlide(e, true);\n      },\n      showPreviousSlideByKeyboardNavigation: e => {\n        e.preventDefault();\n        showPreviousSlide(e, true);\n      },\n      showNextSlideByPaddlePress: e => {\n        e.preventDefault();\n        showNextSlide(e, false);\n        handleNextPaddleFocus();\n      },\n      showPreviousSlideByPaddlePress: e => {\n        e.preventDefault();\n        showPreviousSlide(e, false);\n        handlePreviousPaddleFocus();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      navigation,\n      ariaLiveOn,\n      ariaRoleDescription,\n      ariaLabel,\n    }),\n  });\n\n  const { classes } = useStyles<CarouselStylesProps>(Carousel.displayName, {\n    className: carouselClassName,\n    mapPropsToStyles: () => ({\n      shouldFocusContainer,\n      isFromKeyboard,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const paddleNextRef = React.useRef<HTMLElement>();\n  const paddlePreviousRef = React.useRef<HTMLElement>();\n\n  const focusItemAtIndex = React.useMemo(\n    () =>\n      _.debounce((index: number) => {\n        itemRefs[index].current?.focus();\n      }, 400),\n    [itemRefs],\n  );\n\n  React.useEffect(() => {\n    return () => {\n      focusItemAtIndex.cancel();\n    };\n  }, [focusItemAtIndex, items]);\n\n  const setActiveIndex = (e: React.SyntheticEvent, index: number, focusItem: boolean): void => {\n    const lastItemIndex = items.length - 1;\n    let nextActiveIndex = index;\n    const lastActiveIndex = state.activeIndex;\n\n    if (index < 0) {\n      if (!circular) {\n        return;\n      }\n      nextActiveIndex = lastItemIndex;\n    }\n\n    if (index > lastItemIndex) {\n      if (!circular) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n\n    actions.setIndexes(nextActiveIndex, lastActiveIndex);\n\n    _.invoke(props, 'onActiveIndexChange', e, props);\n\n    if (focusItem) {\n      focusItemAtIndex(nextActiveIndex);\n    }\n  };\n\n  const overrideItemProps = predefinedProps => ({\n    onFocus: (e, itemProps) => {\n      actions.setShouldFocusContainer(e.currentTarget === e.target);\n      actions.setIsFromKeyboard(isEventFromKeyboard());\n      _.invoke(predefinedProps, 'onFocus', e, itemProps);\n    },\n    onBlur: (e, itemProps) => {\n      actions.setShouldFocusContainer(e.currentTarget.contains(e.relatedTarget));\n      actions.setIsFromKeyboard(false);\n      _.invoke(predefinedProps, 'onBlur', e, itemProps);\n    },\n  });\n\n  const renderContent = () => {\n    return (\n      <div\n        {...getA11yProps('itemsContainerWrapper', {\n          className: classes.itemsContainerWrapper,\n        })}\n      >\n        <div\n          {...getA11yProps('itemsContainer', {\n            className: cx(carouselSlotClassNames.itemsContainer, classes.itemsContainer),\n          })}\n        >\n          {items &&\n            items.map((item, index) => {\n              const itemRef = itemRefs[index];\n              const active = activeIndex === index;\n              let slideToNext = prevActiveIndex < activeIndex;\n\n              const initialMounting = prevActiveIndex === -1;\n\n              if (circular && prevActiveIndex === items.length - 1 && activeIndex === 0) {\n                slideToNext = true;\n              } else if (circular && prevActiveIndex === 0 && activeIndex === items.length - 1) {\n                slideToNext = false;\n              }\n\n              return (\n                <Animation\n                  key={item['key'] || index}\n                  mountOnEnter\n                  unmountOnExit\n                  visible={active}\n                  name={\n                    initialMounting || !active\n                      ? ''\n                      : slideToNext\n                      ? 'carousel-slide-to-next-enter'\n                      : 'carousel-slide-to-previous-enter'\n                  }\n                >\n                  <Ref innerRef={itemRef}>\n                    {CarouselItem.create(item, {\n                      defaultProps: () => ({\n                        active,\n                        navigation: !!navigation,\n                        ...(getItemPositionText && {\n                          itemPositionText: getItemPositionText(index, items.length),\n                        }),\n                      }),\n                      overrideProps: overrideItemProps,\n                    })}\n                  </Ref>\n                </Animation>\n              );\n            })}\n        </div>\n      </div>\n    );\n  };\n\n  const handleNextPaddleFocus = () => {\n    // if 'next' paddle will disappear, will focus 'previous' one.\n    if (!navigation && activeIndex >= props.items.length - 2 && !circular) {\n      paddlePreviousRef.current.focus();\n    }\n  };\n\n  const handlePreviousPaddleFocus = () => {\n    // if 'previous' paddle will disappear, will focus 'next' one.\n    if (!navigation && activeIndex <= 1 && !circular) {\n      paddleNextRef.current.focus();\n    }\n  };\n\n  const showPreviousSlide = (e: React.SyntheticEvent, focusItem: boolean) => {\n    setActiveIndex(e, +activeIndex - 1, focusItem);\n  };\n\n  const showNextSlide = (e: React.SyntheticEvent, focusItem: boolean) => {\n    setActiveIndex(e, +activeIndex + 1, focusItem);\n  };\n\n  const handlePaddleOverrides = (predefinedProps: CarouselPaddleProps, paddleName: string) => ({\n    onClick: (e: React.SyntheticEvent, paddleProps: CarouselPaddleProps) => {\n      _.invoke(predefinedProps, 'onClick', e, paddleProps);\n      if (paddleName === 'paddleNext') {\n        showNextSlide(e, false);\n        handleNextPaddleFocus();\n      } else if (paddleName === 'paddlePrevious') {\n        showPreviousSlide(e, false);\n        handlePreviousPaddleFocus();\n      }\n    },\n    onBlur: (e: React.FocusEvent, paddleProps: CarouselPaddleProps) => {\n      if (e.relatedTarget !== paddleNextRef.current) {\n        actions.setAriaLiveOn(false);\n      }\n    },\n    onFocus: (e: React.SyntheticEvent, paddleProps: CarouselPaddleProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, paddleProps);\n      actions.setAriaLiveOn(true);\n    },\n  });\n\n  const renderPaddles = () => {\n    return (\n      <>\n        <Ref innerRef={paddlePreviousRef}>\n          {CarouselPaddle.create(paddlePrevious, {\n            defaultProps: () =>\n              getA11yProps('paddlePrevious', {\n                className: carouselSlotClassNames.paddlePrevious,\n                previous: true,\n                hidden: items !== undefined && !circular && activeIndex === 0,\n              }),\n            overrideProps: (predefinedProps: CarouselPaddleProps) =>\n              handlePaddleOverrides(predefinedProps, 'paddlePrevious'),\n          })}\n        </Ref>\n        <Ref innerRef={paddleNextRef}>\n          {CarouselPaddle.create(paddleNext, {\n            defaultProps: () =>\n              getA11yProps('paddleNext', {\n                className: carouselSlotClassNames.paddleNext,\n                next: true,\n                hidden: items !== undefined && !circular && activeIndex === items.length - 1,\n              }),\n            overrideProps: (predefinedProps: CarouselPaddleProps) =>\n              handlePaddleOverrides(predefinedProps, 'paddleNext'),\n          })}\n        </Ref>\n      </>\n    );\n  };\n\n  const renderNavigation = () => {\n    if (!items || !items.length) {\n      return null;\n    }\n\n    return navigation ? (\n      CarouselNavigation.create(navigation, {\n        defaultProps: () => ({\n          className: carouselSlotClassNames.navigation,\n          iconOnly: true,\n          activeIndex,\n          thumbnails,\n        }),\n        overrideProps: (predefinedProps: CarouselNavigationItemProps) => ({\n          onItemClick: (e: React.SyntheticEvent, itemProps: CarouselNavigationItemProps) => {\n            const { index } = itemProps;\n\n            setActiveIndex(e, index, true);\n\n            _.invoke(predefinedProps, 'onClick', e, itemProps);\n          },\n        }),\n      })\n    ) : getItemPositionText ? (\n      <Text\n        aria-hidden=\"true\"\n        className={carouselSlotClassNames.pagination}\n        content={getItemPositionText(+activeIndex, items.length)}\n      />\n    ) : null;\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? (\n        children\n      ) : (\n        <>\n          {renderContent()}\n          {renderPaddles()}\n          {renderNavigation()}\n        </>\n      )}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCarousel.displayName = 'Carousel';\n\nCarousel.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.number,\n  ariaRoleDescription: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  circular: PropTypes.bool,\n  defaultActiveIndex: PropTypes.number,\n  getItemPositionText: PropTypes.func,\n  items: customPropTypes.collectionShorthand,\n  navigation: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  navigationPosition: PropTypes.oneOf(['below', 'above', 'start', 'end']),\n  onActiveIndexChange: PropTypes.func,\n  paddleNext: customPropTypes.itemShorthand,\n  paddlesPosition: PropTypes.oneOf(['inside', 'outside', 'inline']),\n  paddlePrevious: customPropTypes.itemShorthand,\n  thumbnails: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  accessibility: carouselBehavior,\n  paddlePrevious: {},\n  paddleNext: {},\n};\n\nCarousel.Item = CarouselItem;\nCarousel.Navigation = CarouselNavigation;\nCarousel.NavigationItem = CarouselNavigationItem;\nCarousel.Paddle = CarouselPaddle;\n\nCarousel.handledProps = Object.keys(Carousel.propTypes) as any;\n\nCarousel.create = createShorthandFactory({\n  Component: Carousel,\n  mappedArrayProp: 'items',\n});\n"]},"metadata":{},"sourceType":"module"}