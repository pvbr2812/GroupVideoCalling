{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport arrayReduce from 'fast-loops/lib/arrayReduce';\nimport { clusterCache, cssifySupportRules, RULE_TYPE, KEYFRAME_TYPE, STATIC_TYPE, FONT_TYPE } from 'fela-utils';\nimport cssifyMediaQueryRules from './cssifyMediaQueryRules';\nexport default function renderToString(renderer) {\n  var _clusterCache = clusterCache(renderer.cache, renderer.mediaQueryOrder, renderer.supportQueryOrder, renderer.ruleOrder),\n      fontFaces = _clusterCache.fontFaces,\n      statics = _clusterCache.statics,\n      keyframes = _clusterCache.keyframes,\n      rules = _clusterCache.rules,\n      mediaRules = _clusterCache.mediaRules,\n      supportRules = _clusterCache.supportRules,\n      supportMediaRules = _clusterCache.supportMediaRules;\n\n  var basicCSS = fontFaces + statics + keyframes + rules + cssifySupportRules(supportRules);\n  var mediaKeys = Object.keys(_extends({}, supportMediaRules, mediaRules));\n  return arrayReduce(mediaKeys, function (css, query) {\n    var mediaCSS = mediaRules[query] || '';\n    var supportCSS = cssifySupportRules(supportMediaRules[query] || {});\n    return css + cssifyMediaQueryRules(query, mediaCSS + supportCSS);\n  }, basicCSS);\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/VSCODE2/communication-services-web-calling-hero/Calling/ClientApp/node_modules/fela-tools/es/renderToString.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","arrayReduce","clusterCache","cssifySupportRules","RULE_TYPE","KEYFRAME_TYPE","STATIC_TYPE","FONT_TYPE","cssifyMediaQueryRules","renderToString","renderer","_clusterCache","cache","mediaQueryOrder","supportQueryOrder","ruleOrder","fontFaces","statics","keyframes","rules","mediaRules","supportRules","supportMediaRules","basicCSS","mediaKeys","keys","css","query","mediaCSS","supportCSS"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,OAAOS,WAAP,MAAwB,4BAAxB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,SAA3C,EAAsDC,aAAtD,EAAqEC,WAArE,EAAkFC,SAAlF,QAAmG,YAAnG;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC/C,MAAIC,aAAa,GAAGT,YAAY,CAACQ,QAAQ,CAACE,KAAV,EAAiBF,QAAQ,CAACG,eAA1B,EAA2CH,QAAQ,CAACI,iBAApD,EAAuEJ,QAAQ,CAACK,SAAhF,CAAhC;AAAA,MACIC,SAAS,GAAGL,aAAa,CAACK,SAD9B;AAAA,MAEIC,OAAO,GAAGN,aAAa,CAACM,OAF5B;AAAA,MAGIC,SAAS,GAAGP,aAAa,CAACO,SAH9B;AAAA,MAIIC,KAAK,GAAGR,aAAa,CAACQ,KAJ1B;AAAA,MAKIC,UAAU,GAAGT,aAAa,CAACS,UAL/B;AAAA,MAMIC,YAAY,GAAGV,aAAa,CAACU,YANjC;AAAA,MAOIC,iBAAiB,GAAGX,aAAa,CAACW,iBAPtC;;AASA,MAAIC,QAAQ,GAAGP,SAAS,GAAGC,OAAZ,GAAsBC,SAAtB,GAAkCC,KAAlC,GAA0ChB,kBAAkB,CAACkB,YAAD,CAA3E;AAEA,MAAIG,SAAS,GAAGlC,MAAM,CAACmC,IAAP,CAAYpC,QAAQ,CAAC,EAAD,EAAKiC,iBAAL,EAAwBF,UAAxB,CAApB,CAAhB;AAEA,SAAOnB,WAAW,CAACuB,SAAD,EAAY,UAAUE,GAAV,EAAeC,KAAf,EAAsB;AAClD,QAAIC,QAAQ,GAAGR,UAAU,CAACO,KAAD,CAAV,IAAqB,EAApC;AACA,QAAIE,UAAU,GAAG1B,kBAAkB,CAACmB,iBAAiB,CAACK,KAAD,CAAjB,IAA4B,EAA7B,CAAnC;AAEA,WAAOD,GAAG,GAAGlB,qBAAqB,CAACmB,KAAD,EAAQC,QAAQ,GAAGC,UAAnB,CAAlC;AACD,GALiB,EAKfN,QALe,CAAlB;AAMD","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport arrayReduce from 'fast-loops/lib/arrayReduce';\nimport { clusterCache, cssifySupportRules, RULE_TYPE, KEYFRAME_TYPE, STATIC_TYPE, FONT_TYPE } from 'fela-utils';\n\nimport cssifyMediaQueryRules from './cssifyMediaQueryRules';\n\nexport default function renderToString(renderer) {\n  var _clusterCache = clusterCache(renderer.cache, renderer.mediaQueryOrder, renderer.supportQueryOrder, renderer.ruleOrder),\n      fontFaces = _clusterCache.fontFaces,\n      statics = _clusterCache.statics,\n      keyframes = _clusterCache.keyframes,\n      rules = _clusterCache.rules,\n      mediaRules = _clusterCache.mediaRules,\n      supportRules = _clusterCache.supportRules,\n      supportMediaRules = _clusterCache.supportMediaRules;\n\n  var basicCSS = fontFaces + statics + keyframes + rules + cssifySupportRules(supportRules);\n\n  var mediaKeys = Object.keys(_extends({}, supportMediaRules, mediaRules));\n\n  return arrayReduce(mediaKeys, function (css, query) {\n    var mediaCSS = mediaRules[query] || '';\n    var supportCSS = cssifySupportRules(supportMediaRules[query] || {});\n\n    return css + cssifyMediaQueryRules(query, mediaCSS + supportCSS);\n  }, basicCSS);\n}"]},"metadata":{},"sourceType":"module"}