{"ast":null,"code":"import * as React from 'react';\nimport { commonPropTypes, createShorthandFactory } from '../../utils';\nimport { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility, useFluentContext } from '@fluentui/react-bindings';\nexport var cardColumnClassName = 'ui-card__column';\n/**\n * A CardColumn is used to display content in card as column\n */\n\nexport var CardColumn = /*#__PURE__*/function () {\n  var CardColumn = function CardColumn(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(CardColumn.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables,\n        children = props.children;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(CardColumn.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: CardColumn.displayName,\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(CardColumn.displayName, {\n      className: cardColumnClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), children);\n    setEnd();\n    return element;\n  };\n\n  CardColumn.displayName = 'CardColumn';\n  CardColumn.propTypes = Object.assign({}, commonPropTypes.createCommon());\n  CardColumn.handledProps = Object.keys(CardColumn.propTypes);\n  CardColumn.create = createShorthandFactory({\n    Component: CardColumn\n  });\n  return CardColumn;\n}();","map":{"version":3,"sources":["components/Card/CardColumn.tsx"],"names":["cardColumnClassName","CardColumn","context","useFluentContext","setStart","setEnd","useTelemetry","className","design","styles","variables","children","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToInlineStyles","element","root","commonPropTypes","Object","createShorthandFactory","Component"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAGA,SAAA,eAAA,EAAA,sBAAA,QAAA,aAAA;AACA,SAAA,YAAA,EAAA,SAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,gBAAA,QAAA,0BAAA;AAkBA,OAAO,IAAMA,mBAAmB,GAAzB,iBAAA;AAEP;;;;AAGA,OAAO,IAAMC,UAAN,GAAA,aAAA,YAAA;AAAA,MAAMA,UACgC,GAAG,SADnCA,UACmC,CAAA,KAAA,EAAS;AACvD,QAAMC,OAAO,GAAGC,gBAAhB,EAAA;;AADuD,QAAA,aAAA,GAE1BG,YAAY,CAACL,UAAU,CAAX,WAAA,EAAyBC,OAAO,CAFlB,SAEd,CAFc;AAAA,QAE/CE,QAF+C,GAAA,aAAA,CAAA,QAAA;AAAA,QAErCC,MAFqC,GAAA,aAAA,CAAA,MAAA;;AAGvDD,IAAAA,QAAQ;AAH+C,QAK/CG,SAL+C,GAKIK,KALJ,CAAA,SAAA;AAAA,QAKpCJ,MALoC,GAKII,KALJ,CAAA,MAAA;AAAA,QAK5BH,MAL4B,GAKIG,KALJ,CAAA,MAAA;AAAA,QAKpBF,SALoB,GAKIE,KALJ,CAAA,SAAA;AAAA,QAKTD,QALS,GAKIC,KALJ,CAAA,QAAA;AAMvD,QAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AACA,QAAMC,cAAc,GAAGC,iBAAiB,CAACf,UAAU,CAAX,YAAA,EAAxC,KAAwC,CAAxC;AACA,QAAMgB,YAAY,GAAGC,gBAAgB,CAACN,KAAK,CAAN,aAAA,EAAsB;AACzDO,MAAAA,SAAS,EAAElB,UAAU,CADoC,WAAA;AAEzDmB,MAAAA,GAAG,EAAElB,OAAO,CAACkB;AAF4C,KAAtB,CAArC;;AARuD,QAAA,UAAA,GAanCE,SAAS,CAAwBrB,UAAU,CAAlC,WAAA,EAAgD;AAC3EM,MAAAA,SAAS,EADkE,mBAAA;AAE3EgB,MAAAA,sBAAsB,EAAE,SAAA,sBAAA,GAAA;AAAA,eAAO;AAC7BhB,UAAAA,SAAS,EADoB,SAAA;AAE7BC,UAAAA,MAAM,EAFuB,MAAA;AAG7BC,UAAAA,MAAM,EAHuB,MAAA;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAFmD,OAAA;AAQ3EU,MAAAA,GAAG,EAAElB,OAAO,CAACkB;AAR8D,KAAhD,CAb0B;AAAA,QAa/CC,OAb+C,GAAA,UAAA,CAAA,OAAA;;AAwBvD,QAAMG,OAAO,GAAA,aACX,KAAA,CAAA,aAAA,CAAA,WAAA,EACMP,YAAY,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACdV,MAAAA,SAAS,EAAEc,OAAO,CAACI;AADL,KAAA,EADlB,cACkB,CAAA,CADlB,EADF,QACE,CADF;AAUApB,IAAAA,MAAM;AACN,WAAA,OAAA;AApCK,GAAA;;AAuCPJ,EAAAA,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AAEAA,EAAAA,UAAU,CAAVA,SAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EACKyB,eAAe,CADpBzB,YACKyB,EADLzB,CAAAA;AAIAA,EAAAA,UAAU,CAAVA,YAAAA,GAA0B0B,MAAM,CAANA,IAAAA,CAAY1B,UAAU,CAAhDA,SAA0B0B,CAA1B1B;AAEAA,EAAAA,UAAU,CAAVA,MAAAA,GAAoB2B,sBAAsB,CAAC;AAAEC,IAAAA,SAAS,EAAE5B;AAAb,GAAD,CAA1CA;AA/CO,SAAA,UAAA;AAAA,CAAA,EAAA","sourcesContent":["import * as React from 'react';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useStyles,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n} from '@fluentui/react-bindings';\n\nexport interface CardColumnProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CardColumnStylesProps = never;\nexport const cardColumnClassName = 'ui-card__column';\n\n/**\n * A CardColumn is used to display content in card as column\n */\nexport const CardColumn: ComponentWithAs<'div', CardColumnProps> &\n  FluentComponentStaticProps<CardColumnProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardColumn.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardColumn.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardColumn.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardColumnStylesProps>(CardColumn.displayName, {\n    className: cardColumnClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardColumn.displayName = 'CardColumn';\n\nCardColumn.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCardColumn.handledProps = Object.keys(CardColumn.propTypes) as any;\n\nCardColumn.create = createShorthandFactory({ Component: CardColumn });\n"]},"metadata":{},"sourceType":"module"}