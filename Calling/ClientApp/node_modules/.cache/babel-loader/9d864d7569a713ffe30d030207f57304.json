{"ast":null,"code":"/** Copy of TextAlignProperty from csstype (works around TS error) */\n// This is probably removable if we turn off isolatedModules in the future (then we can just\n// re-export TextAlignProperty).)\nexport var translateAlignProp = function translateAlignProp(textAlignProp) {\n  // This assignment verifies that the copy of TextAlignProperty matches up with the real one.\n  var alignProp = textAlignProp;\n\n  switch (alignProp) {\n    case 'start':\n      return 'left';\n\n    case 'end':\n      return 'right';\n\n    default:\n      return alignProp;\n  }\n};","map":{"version":3,"sources":["styles/translateAlignProp.ts"],"names":["translateAlignProp","alignProp"],"mappings":"AAGA;AACA;AACA;AAeA,OAAO,IAAMA,kBAAoE,GAAG,SAAvEA,kBAAuE,CAAA,aAAA,EAAiB;AACnG;AACA,MAAMC,SAAgC,GAAtC,aAAA;;AACA,UAAA,SAAA;AACE,SAAA,OAAA;AACE,aAAA,MAAA;;AACF,SAAA,KAAA;AACE,aAAA,OAAA;;AACF;AACE,aAAA,SAAA;AANJ;AAHK,CAAA","sourcesContent":["import { TextAlignProperty as RealTextAlignProperty } from 'csstype';\nimport { AlignValue } from '../utils';\n\n/** Copy of TextAlignProperty from csstype (works around TS error) */\n// This is probably removable if we turn off isolatedModules in the future (then we can just\n// re-export TextAlignProperty).)\nexport type TextAlignProperty =\n  | '-moz-initial'\n  | 'inherit'\n  | 'initial'\n  | 'revert'\n  | 'unset'\n  | 'center'\n  | 'end'\n  | 'justify'\n  | 'left'\n  | 'match-parent'\n  | 'right'\n  | 'start';\n\nexport const translateAlignProp: (textAlignProp: AlignValue) => TextAlignProperty = textAlignProp => {\n  // This assignment verifies that the copy of TextAlignProperty matches up with the real one.\n  const alignProp: RealTextAlignProperty = textAlignProp;\n  switch (alignProp) {\n    case 'start':\n      return 'left';\n    case 'end':\n      return 'right';\n    default:\n      return alignProp as TextAlignProperty;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}