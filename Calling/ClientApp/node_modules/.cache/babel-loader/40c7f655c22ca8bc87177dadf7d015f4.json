{"ast":null,"code":"import { getCode, keyboardKey } from '@fluentui/keyboard-key';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { gridRowBehavior } from './gridRowBehavior';\n/**\n * @specification\n * Adds role='grid'.\n * Focus can be moved inside a child component with embeded inner FocusZone by pressing a specified key.\n * Provides arrow key navigation in vertical direction.\n * Focused active element of the component is reset when TAB from the component.\n * Triggers 'focus' action with 'Escape' on 'root'.\n * Applies 'gridRowBehavior' for 'row' child component.\n */\n\nexport var gridNestedBehavior = function gridNestedBehavior(props) {\n  return {\n    attributes: {\n      root: {\n        role: 'grid'\n      }\n    },\n    focusZone: {\n      props: {\n        shouldEnterInnerZone: function shouldEnterInnerZone(event) {\n          return getCode(event) === keyboardKey.ArrowRight;\n        },\n        direction: FocusZoneDirection.vertical,\n        shouldResetActiveElementWhenTabFromZone: true\n      }\n    },\n    keyActions: {\n      root: {\n        focus: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Escape\n          }]\n        }\n      }\n    },\n    childBehaviors: {\n      row: gridRowBehavior\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Table/gridNestedBehavior.ts"],"names":["gridNestedBehavior","attributes","root","role","focusZone","props","shouldEnterInnerZone","getCode","keyboardKey","direction","FocusZoneDirection","shouldResetActiveElementWhenTabFromZone","keyActions","focus","keyCombinations","keyCode","Escape","childBehaviors","row","gridRowBehavior"],"mappings":"AACA,SAAA,OAAA,EAAA,WAAA,QAAA,wBAAA;AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,SAAA,eAAA,QAAA,mBAAA;AAEA;;;;;;;;;;AASA,OAAO,IAAMA,kBAAiC,GAAG,SAApCA,kBAAoC,CAAA,KAAA,EAAK;AAAA,SAAK;AACzDC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD6C;AAMzDC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,oBAAoB,EAAE,SAAA,oBAAA,CAAA,KAAA,EAAK;AAAA,iBAAIC,OAAO,CAAPA,KAAO,CAAPA,KAAmBC,WAAW,CAAlC,UAAA;AADtB,SAAA;AAELC,QAAAA,SAAS,EAAEC,kBAAkB,CAFxB,QAAA;AAGLC,QAAAA,uCAAuC,EAAE;AAHpC;AADE,KAN8C;AAazDC,IAAAA,UAAU,EAAE;AACVV,MAAAA,IAAI,EAAE;AACJW,QAAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEP,WAAW,CAACQ;AAAvB,WAAD;AADZ;AADH;AADI,KAb6C;AAoBzDC,IAAAA,cAAc,EAAE;AACdC,MAAAA,GAAG,EAAEC;AADS;AApByC,GAAL;AAA/C,CAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { getCode, keyboardKey } from '@fluentui/keyboard-key';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { gridRowBehavior } from './gridRowBehavior';\n\n/**\n * @specification\n * Adds role='grid'.\n * Focus can be moved inside a child component with embeded inner FocusZone by pressing a specified key.\n * Provides arrow key navigation in vertical direction.\n * Focused active element of the component is reset when TAB from the component.\n * Triggers 'focus' action with 'Escape' on 'root'.\n * Applies 'gridRowBehavior' for 'row' child component.\n */\nexport const gridNestedBehavior: Accessibility = props => ({\n  attributes: {\n    root: {\n      role: 'grid',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldEnterInnerZone: event => getCode(event) === keyboardKey.ArrowRight,\n      direction: FocusZoneDirection.vertical,\n      shouldResetActiveElementWhenTabFromZone: true,\n    },\n  },\n  keyActions: {\n    root: {\n      focus: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n  childBehaviors: {\n    row: gridRowBehavior,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}