{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function signingPolicy(authenticationProvider) {\n  return {\n    create: function (nextPolicy, options) {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\n\nvar SigningPolicy =\n/** @class */\nfunction (_super) {\n  __extends(SigningPolicy, _super);\n\n  function SigningPolicy(nextPolicy, options, authenticationProvider) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n\n    _this.authenticationProvider = authenticationProvider;\n    return _this;\n  }\n\n  SigningPolicy.prototype.signRequest = function (request) {\n    return this.authenticationProvider.signRequest(request);\n  };\n\n  SigningPolicy.prototype.sendRequest = function (request) {\n    var _this = this;\n\n    return this.signRequest(request).then(function (nextRequest) {\n      return _this._nextPolicy.sendRequest(nextRequest);\n    });\n  };\n\n  return SigningPolicy;\n}(BaseRequestPolicy);\n\nexport { SigningPolicy };","map":{"version":3,"sources":["../../../src/policies/signingPolicy.ts"],"names":[],"mappings":"AAAA;AACA;;AAKA,SACE,iBADF,QAKO,iBALP;AAOA,OAAM,SAAU,aAAV,CACJ,sBADI,EAC4C;AAEhD,SAAO;AACL,IAAA,MAAM,EAAE,UAAC,UAAD,EAA4B,OAA5B,EAAyD;AAC/D,aAAO,IAAI,aAAJ,CAAkB,UAAlB,EAA8B,OAA9B,EAAuC,sBAAvC,CAAP;AACD;AAHI,GAAP;AAKD;;AAED,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AACjC,WAAA,aAAA,CACE,UADF,EAEE,OAFF,EAGS,sBAHT,EAGyD;AAHzD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAN,EAAkB,OAAlB,KAA0B,IAL5B;;AAGS,IAAA,KAAA,CAAA,sBAAA,GAAA,sBAAA;;AAGR;;AAED,EAAA,aAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,OAAZ,EAAoC;AAClC,WAAO,KAAK,sBAAL,CAA4B,WAA5B,CAAwC,OAAxC,CAAP;AACD,GAFD;;AAIO,EAAA,aAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,OAAnB,EAA2C;AAA3C,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,KAAK,WAAL,CAAiB,OAAjB,EAA0B,IAA1B,CAA+B,UAAC,WAAD,EAAY;AAChD,aAAA,KAAI,CAAC,WAAL,CAAiB,WAAjB,CAA6B,WAA7B,CAAA;AAAyC,KADpC,CAAP;AAGD,GAJM;;AAKT,SAAA,aAAA;AAAC,CAlBD,CAAmC,iBAAnC,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceClientCredentials } from \"../credentials/serviceClientCredentials\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function signingPolicy(\n  authenticationProvider: ServiceClientCredentials\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\n\nexport class SigningPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    public authenticationProvider: ServiceClientCredentials\n  ) {\n    super(nextPolicy, options);\n  }\n\n  signRequest(request: WebResourceLike): Promise<WebResourceLike> {\n    return this.authenticationProvider.signRequest(request);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this.signRequest(request).then((nextRequest) =>\n      this._nextPolicy.sendRequest(nextRequest)\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}