{"ast":null,"code":"import { debugRoot, debugArea, debugGap } from '../../../../styles/debugStyles';\n\nvar countTrue = function countTrue(items) {\n  return items.filter(Boolean).length;\n};\n\nexport var layoutStyles = {\n  root: function root(_ref) {\n    var _Object$assign;\n\n    var props = _ref.props;\n    var alignItems = props.alignItems,\n        debug = props.debug,\n        gap = props.gap,\n        justifyItems = props.justifyItems,\n        hasMain = props.hasMain,\n        mainSize = props.mainSize,\n        hasEnd = props.hasEnd,\n        endSize = props.endSize,\n        hasStart = props.hasStart,\n        startSize = props.startSize,\n        vertical = props.vertical;\n    return Object.assign({}, debug && debugRoot(), (_Object$assign = {\n      justifyItems: justifyItems,\n      alignItems: alignItems,\n      display: ['grid', '-ms-grid']\n    }, _Object$assign[vertical ? 'gridTemplateRows' : 'gridTemplateColumns'] = [// Heads up!\n    // IE11 Doesn't support grid-gap, insert virtual columns instead\n    hasStart && startSize, gap && hasStart && hasMain && gap, hasMain && mainSize, gap && (hasStart || hasMain) && hasEnd && gap, hasEnd && endSize].filter(Boolean).join(' '), _Object$assign), vertical && {\n      gridAutoFlow: 'row',\n      msGridColumns: '1fr'\n    });\n  },\n  gap: function gap(_ref2) {\n    var props = _ref2.props;\n    return Object.assign({}, props.debug && debugGap({\n      vertical: props.vertical\n    }));\n  },\n  start: function start(_ref3) {\n    var _Object$assign2;\n\n    var p = _ref3.props;\n    return Object.assign({}, p.debug && debugArea(), (_Object$assign2 = {\n      alignItems: 'center',\n      display: 'inline-flex'\n    }, _Object$assign2[p.vertical ? 'msGridRow' : 'msGridColumn'] = '1', _Object$assign2));\n  },\n  main: function main(_ref4) {\n    var _Object$assign3;\n\n    var p = _ref4.props;\n    return Object.assign({}, p.debug && debugArea(), (_Object$assign3 = {\n      alignItems: 'center',\n      display: ['grid', '-ms-grid']\n    }, _Object$assign3[p.vertical ? 'msGridRow' : 'msGridColumn'] = countTrue([p.hasStart, p.hasStart && p.gap, p.hasMain]), _Object$assign3));\n  },\n  end: function end(_ref5) {\n    var _Object$assign4;\n\n    var p = _ref5.props;\n    return Object.assign({}, p.debug && debugArea(), (_Object$assign4 = {\n      alignItems: 'center',\n      display: 'inline-flex'\n    }, _Object$assign4[p.vertical ? 'msGridRow' : 'msGridColumn'] = countTrue([p.hasStart, p.hasStart && p.gap, p.hasMain && p.gap]), _Object$assign4));\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Layout/layoutStyles.ts"],"names":["countTrue","items","layoutStyles","root","props","alignItems","debug","gap","justifyItems","hasMain","mainSize","hasEnd","endSize","hasStart","startSize","vertical","debugRoot","display","gridAutoFlow","msGridColumns","debugGap","start","p","debugArea","main","end"],"mappings":"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","sourcesContent":["import { debugRoot, debugArea, debugGap } from '../../../../styles/debugStyles';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { LayoutStylesProps } from '../../../../components/Layout/Layout';\n\nconst countTrue = items => items.filter(Boolean).length;\n\nexport const layoutStyles: ComponentSlotStylesPrepared<LayoutStylesProps> = {\n  root: ({ props }): ICSSInJSStyle => {\n    const {\n      alignItems,\n      debug,\n      gap,\n      justifyItems,\n      hasMain,\n      mainSize,\n      hasEnd,\n      endSize,\n      hasStart,\n      startSize,\n      vertical,\n    } = props;\n\n    return {\n      ...(debug && debugRoot()),\n      justifyItems,\n      alignItems,\n      display: ['grid', '-ms-grid'],\n      [vertical ? 'gridTemplateRows' : 'gridTemplateColumns']: [\n        // Heads up!\n        // IE11 Doesn't support grid-gap, insert virtual columns instead\n        hasStart && startSize,\n        gap && hasStart && hasMain && gap,\n        hasMain && mainSize,\n        gap && (hasStart || hasMain) && hasEnd && gap,\n        hasEnd && endSize,\n      ]\n        .filter(Boolean)\n        .join(' '),\n      ...(vertical && {\n        gridAutoFlow: 'row',\n        msGridColumns: '1fr',\n      }),\n    };\n  },\n\n  gap: ({ props }): ICSSInJSStyle => ({\n    ...(props.debug && debugGap({ vertical: props.vertical })),\n  }),\n\n  start: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: 'inline-flex',\n    [p.vertical ? 'msGridRow' : 'msGridColumn']: '1',\n  }),\n\n  main: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: ['grid', '-ms-grid'],\n    [p.vertical ? 'msGridRow' : 'msGridColumn']: countTrue([p.hasStart, p.hasStart && p.gap, p.hasMain]),\n  }),\n\n  end: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: 'inline-flex',\n    [p.vertical ? 'msGridRow' : 'msGridColumn']: countTrue([p.hasStart, p.hasStart && p.gap, p.hasMain && p.gap]),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}