{"ast":null,"code":"import { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry, useFluentContext } from '@fluentui/react-bindings';\nimport * as React from 'react';\nimport { commonPropTypes, createShorthandFactory } from '../../utils';\nexport var cardTopControlsClassName = 'ui-card__topcontrols';\n/**\n * A CardTopControls is used to render control elements in the top of a Card component.\n */\n\nexport var CardTopControls = /*#__PURE__*/function () {\n  var CardTopControls = function CardTopControls(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(CardTopControls.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables,\n        children = props.children;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(CardTopControls.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: CardTopControls.displayName,\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(CardTopControls.displayName, {\n      className: cardTopControlsClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), children);\n    setEnd();\n    return element;\n  };\n\n  CardTopControls.displayName = 'CardTopControls';\n  CardTopControls.propTypes = Object.assign({}, commonPropTypes.createCommon());\n  CardTopControls.handledProps = Object.keys(CardTopControls.propTypes);\n  CardTopControls.create = createShorthandFactory({\n    Component: CardTopControls\n  });\n  return CardTopControls;\n}();","map":{"version":3,"sources":["components/Card/CardTopControls.tsx"],"names":["cardTopControlsClassName","CardTopControls","context","useFluentContext","setStart","setEnd","useTelemetry","className","design","styles","variables","children","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToInlineStyles","element","root","commonPropTypes","Object","createShorthandFactory","Component"],"mappings":"AACA,SAAA,cAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,YAAA,EAAA,gBAAA,QAAA,0BAAA;AASA,OAAO,KAAP,KAAA,MAAA,OAAA;AAGA,SAAA,eAAA,EAAA,sBAAA,QAAA,aAAA;AAUA,OAAO,IAAMA,wBAAwB,GAA9B,sBAAA;AAEP;;;;AAGA,OAAO,IAAMC,eAAN,GAAA,aAAA,YAAA;AAAA,MAAMA,eACqC,GAAG,SADxCA,eACwC,CAAA,KAAA,EAAS;AAC5D,QAAMC,OAAO,GAAGC,gBAAhB,EAAA;;AAD4D,QAAA,aAAA,GAE/BG,YAAY,CAACL,eAAe,CAAhB,WAAA,EAA8BC,OAAO,CAFlB,SAEnB,CAFmB;AAAA,QAEpDE,QAFoD,GAAA,aAAA,CAAA,QAAA;AAAA,QAE1CC,MAF0C,GAAA,aAAA,CAAA,MAAA;;AAG5DD,IAAAA,QAAQ;AAHoD,QAKpDG,SALoD,GAKDK,KALC,CAAA,SAAA;AAAA,QAKzCJ,MALyC,GAKDI,KALC,CAAA,MAAA;AAAA,QAKjCH,MALiC,GAKDG,KALC,CAAA,MAAA;AAAA,QAKzBF,SALyB,GAKDE,KALC,CAAA,SAAA;AAAA,QAKdD,QALc,GAKDC,KALC,CAAA,QAAA;AAM5D,QAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AACA,QAAMC,cAAc,GAAGC,iBAAiB,CAACf,eAAe,CAAhB,YAAA,EAAxC,KAAwC,CAAxC;AACA,QAAMgB,YAAY,GAAGC,gBAAgB,CAACN,KAAK,CAAN,aAAA,EAAsB;AACzDO,MAAAA,SAAS,EAAElB,eAAe,CAD+B,WAAA;AAEzDmB,MAAAA,GAAG,EAAElB,OAAO,CAACkB;AAF4C,KAAtB,CAArC;;AAR4D,QAAA,UAAA,GAaxCE,SAAS,CAA6BrB,eAAe,CAA5C,WAAA,EAA0D;AACrFM,MAAAA,SAAS,EAD4E,wBAAA;AAErFgB,MAAAA,sBAAsB,EAAE,SAAA,sBAAA,GAAA;AAAA,eAAO;AAC7BhB,UAAAA,SAAS,EADoB,SAAA;AAE7BC,UAAAA,MAAM,EAFuB,MAAA;AAG7BC,UAAAA,MAAM,EAHuB,MAAA;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAF6D,OAAA;AAQrFU,MAAAA,GAAG,EAAElB,OAAO,CAACkB;AARwE,KAA1D,CAb+B;AAAA,QAapDC,OAboD,GAAA,UAAA,CAAA,OAAA;;AAwB5D,QAAMG,OAAO,GAAA,aACX,KAAA,CAAA,aAAA,CAAA,WAAA,EACMP,YAAY,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACdV,MAAAA,SAAS,EAAEc,OAAO,CAACI;AADL,KAAA,EADlB,cACkB,CAAA,CADlB,EADF,QACE,CADF;AAUApB,IAAAA,MAAM;AACN,WAAA,OAAA;AApCK,GAAA;;AAuCPJ,EAAAA,eAAe,CAAfA,WAAAA,GAAAA,iBAAAA;AAEAA,EAAAA,eAAe,CAAfA,SAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EACKyB,eAAe,CADpBzB,YACKyB,EADLzB,CAAAA;AAIAA,EAAAA,eAAe,CAAfA,YAAAA,GAA+B0B,MAAM,CAANA,IAAAA,CAAY1B,eAAe,CAA1DA,SAA+B0B,CAA/B1B;AAEAA,EAAAA,eAAe,CAAfA,MAAAA,GAAyB2B,sBAAsB,CAAC;AAAEC,IAAAA,SAAS,EAAE5B;AAAb,GAAD,CAA/CA;AA/CO,SAAA,eAAA;AAAA,CAAA,EAAA","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardTopControlsProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CardTopControlsStylesProps = never;\nexport const cardTopControlsClassName = 'ui-card__topcontrols';\n\n/**\n * A CardTopControls is used to render control elements in the top of a Card component.\n */\nexport const CardTopControls: ComponentWithAs<'div', CardTopControlsProps> &\n  FluentComponentStaticProps<CardTopControlsProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardTopControls.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardTopControls.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardTopControls.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardTopControlsStylesProps>(CardTopControls.displayName, {\n    className: cardTopControlsClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardTopControls.displayName = 'CardTopControls';\n\nCardTopControls.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCardTopControls.handledProps = Object.keys(CardTopControls.propTypes) as any;\n\nCardTopControls.create = createShorthandFactory({ Component: CardTopControls });\n"]},"metadata":{},"sourceType":"module"}