{"ast":null,"code":"import { mergeComponentVariables } from '@fluentui/styles';\n/**\n mergeComponentVariables() is always creating a function even if the arguments are undefined we have this temporary\n fix in place to avoid creating empty function because it is breaking caching we should either fix\n mergeComponentVariables(), or handle this in a more generic way.\n */\n\nexport function mergeVariablesOverrides(variables, overrides) {\n  return (variables || overrides) && mergeComponentVariables(variables, overrides);\n}","map":{"version":3,"sources":["utils/mergeVariablesOverrides.ts"],"names":["variables","mergeComponentVariables"],"mappings":"AAAA,SAAA,uBAAA,QAAA,kBAAA;AAEA;;;;;;AAKA,OAAO,SAAA,uBAAA,CAAA,SAAA,EAAA,SAAA,EAGuB;AAC5B,SAAO,CAACA,SAAS,IAAV,SAAA,KAA4BC,uBAAuB,CAAA,SAAA,EAA1D,SAA0D,CAA1D;AACD","sourcesContent":["import { ComponentVariablesInput, ComponentVariablesPrepared, mergeComponentVariables } from '@fluentui/styles';\n\n/**\n mergeComponentVariables() is always creating a function even if the arguments are undefined we have this temporary\n fix in place to avoid creating empty function because it is breaking caching we should either fix\n mergeComponentVariables(), or handle this in a more generic way.\n */\nexport function mergeVariablesOverrides(\n  variables: ComponentVariablesInput,\n  overrides: ComponentVariablesInput,\n): ComponentVariablesPrepared {\n  return (variables || overrides) && mergeComponentVariables(variables, overrides);\n}\n"]},"metadata":{},"sourceType":"module"}