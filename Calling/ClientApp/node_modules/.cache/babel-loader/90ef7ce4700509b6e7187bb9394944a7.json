{"ast":null,"code":"import { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { keyboardKey } from '@fluentui/keyboard-key';\nimport { gridHeaderCellBehavior } from './gridHeaderCellBehavior';\n/**\n * @specification\n * Adds role='row'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Provides arrow key navigation in horizontal direction.\n * Focused active element of the component is reset when TAB from the component.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n * Triggers 'unsetRowTabbable' action using 'shiftKey' + 'Tab' key on 'root'.\n * Applies 'gridHeaderCellBehavior' for 'cell' child component.\n */\n\nexport var gridHeaderRowBehavior = function gridHeaderRowBehavior(props) {\n  var _root;\n\n  return {\n    attributes: {\n      root: (_root = {}, _root[IS_FOCUSABLE_ATTRIBUTE] = true, _root.role = 'row', _root)\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.horizontal,\n        shouldFocusInnerElementWhenReceivedFocus: true,\n        shouldResetActiveElementWhenTabFromZone: true\n      }\n    },\n    keyActions: {\n      root: {\n        unsetRowTabbable: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Tab,\n            shiftKey: true\n          }]\n        }\n      }\n    },\n    childBehaviors: {\n      cell: gridHeaderCellBehavior\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Table/gridHeaderRowBehavior.ts"],"names":["gridHeaderRowBehavior","attributes","root","focusZone","props","direction","FocusZoneDirection","shouldFocusInnerElementWhenReceivedFocus","shouldResetActiveElementWhenTabFromZone","keyActions","unsetRowTabbable","keyCombinations","keyCode","keyboardKey","shiftKey","childBehaviors","cell","gridHeaderCellBehavior"],"mappings":"AACA,SAAA,sBAAA,QAAA,kBAAA;AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,SAAA,WAAA,QAAA,wBAAA;AACA,SAAA,sBAAA,QAAA,0BAAA;AAGA;;;;;;;;;;;AAUA,OAAO,IAAMA,qBAA0D,GAAG,SAA7DA,qBAA6D,CAAA,KAAA,EAAK;AAAA,MAAA,KAAA;;AAAA,SAAK;AAClFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,GAAA,KAAA,GAAA,EAAA,EAAA,KAAA,CAAA,sBAAA,CAAA,GAAA,IAAA,EAAA,KAAA,CAAA,IAAA,GAAA,KAAA,EAAA,KAAA;AADM,KADsE;AAOlFC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAEC,kBAAkB,CADxB,UAAA;AAELC,QAAAA,wCAAwC,EAFnC,IAAA;AAGLC,QAAAA,uCAAuC,EAAE;AAHpC;AADE,KAPuE;AAclFC,IAAAA,UAAU,EAAE;AACVP,MAAAA,IAAI,EAAE;AACJQ,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAAtB,GAAA;AAA4BC,YAAAA,QAAQ,EAAE;AAAtC,WAAD;AADD;AADd;AADI,KAdsE;AAqBlFC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEC;AADQ;AArBkE,GAAL;AAAxE,CAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { keyboardKey } from '@fluentui/keyboard-key';\nimport { gridHeaderCellBehavior } from './gridHeaderCellBehavior';\nimport { GridRowBehaviorProps } from './gridRowBehavior';\n\n/**\n * @specification\n * Adds role='row'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Provides arrow key navigation in horizontal direction.\n * Focused active element of the component is reset when TAB from the component.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n * Triggers 'unsetRowTabbable' action using 'shiftKey' + 'Tab' key on 'root'.\n * Applies 'gridHeaderCellBehavior' for 'cell' child component.\n */\nexport const gridHeaderRowBehavior: Accessibility<GridRowBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      role: 'row',\n    },\n  },\n  focusZone: {\n    props: {\n      direction: FocusZoneDirection.horizontal,\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      shouldResetActiveElementWhenTabFromZone: true,\n    },\n  },\n  keyActions: {\n    root: {\n      unsetRowTabbable: {\n        keyCombinations: [{ keyCode: keyboardKey.Tab, shiftKey: true }],\n      },\n    },\n  },\n  childBehaviors: {\n    cell: gridHeaderCellBehavior,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}