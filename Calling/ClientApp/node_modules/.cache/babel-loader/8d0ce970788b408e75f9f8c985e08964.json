{"ast":null,"code":"import { keyboardKey, SpacebarKey } from '@fluentui/keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n/**\n * @specification\n * Adds role='option'. This role is used for a selectable item in a list.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Adds attribute 'aria-selected=true' based on the property 'selected'. Based on this screen readers will recognize the selected state of the item.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\n\nexport var selectableListItemBehavior = function selectableListItemBehavior(props) {\n  var _root;\n\n  return {\n    attributes: {\n      root: (_root = {\n        role: 'option',\n        'aria-selected': !!props.selected\n      }, _root[IS_FOCUSABLE_ATTRIBUTE] = true, _root)\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Enter\n          }, {\n            keyCode: SpacebarKey\n          }]\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/List/selectableListItemBehavior.ts"],"names":["selectableListItemBehavior","attributes","root","role","props","selected","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","SpacebarKey"],"mappings":"AAAA,SAAA,WAAA,EAAA,WAAA,QAAA,wBAAA;AAEA,SAAA,sBAAA,QAAA,kBAAA;AAIA;;;;;;;;AAOA,OAAO,IAAMA,0BAAgE,GAAG,SAAnEA,0BAAmE,CAAA,KAAA,EAAK;AAAA,MAAA,KAAA;;AAAA,SAAK;AACxFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,GAAA,KAAA,GAAA;AACFC,QAAAA,IAAI,EADF,QAAA;AAEF,yBAAiB,CAAC,CAACC,KAAK,CAACC;AAFvB,OAAA,EAAA,KAAA,CAAA,sBAAA,CAAA,GAAA,IAAA,EAAA,KAAA;AADM,KAD4E;AAQxFC,IAAAA,UAAU,EAAE;AACVJ,MAAAA,IAAI,EAAE;AACJK,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEG;AAAX,WAAjC;AADL;AADV;AADI;AAR4E,GAAL;AAA9E,CAAA","sourcesContent":["import { keyboardKey, SpacebarKey } from '@fluentui/keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { ListItemBehaviorProps } from './listItemBehavior';\n\n/**\n * @specification\n * Adds role='option'. This role is used for a selectable item in a list.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Adds attribute 'aria-selected=true' based on the property 'selected'. Based on this screen readers will recognize the selected state of the item.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nexport const selectableListItemBehavior: Accessibility<ListItemBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'option',\n      'aria-selected': !!props.selected,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}