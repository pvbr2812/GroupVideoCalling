{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useStyles, useFluentContext, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { createShorthandFactory, pxToRem, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { Layout } from '../Layout/Layout';\nexport var itemLayoutClassName = 'ui-itemlayout';\nexport var itemLayoutSlotClassNames = {\n  header: itemLayoutClassName + \"__header\",\n  headerMedia: itemLayoutClassName + \"__headerMedia\",\n  main: itemLayoutClassName + \"__main\",\n  content: itemLayoutClassName + \"__content\",\n  contentMedia: itemLayoutClassName + \"__contentMedia\",\n  media: itemLayoutClassName + \"__media\",\n  endMedia: itemLayoutClassName + \"__endMedia\"\n};\n/**\n * (DEPRECATED) The Item Layout handles layout styles for menu items, list items and other similar item templates.\n */\n\nexport var ItemLayout = /*#__PURE__*/function () {\n  var ItemLayout = function ItemLayout(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(ItemLayout.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var as = props.as,\n        debug = props.debug,\n        endMedia = props.endMedia,\n        media = props.media,\n        renderMainArea = props.renderMainArea,\n        rootCSS = props.rootCSS,\n        mediaCSS = props.mediaCSS,\n        endMediaCSS = props.endMediaCSS,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables;\n    var unhandledProps = useUnhandledProps(ItemLayout.handledProps, props);\n\n    var _useStyles = useStyles(ItemLayout.displayName, {\n      className: itemLayoutClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes,\n        resolvedStyles = _useStyles.styles;\n\n    var startArea = media;\n    var mainArea = renderMainArea(props, classes);\n    var endArea = endMedia;\n    var mergedMediaClasses = cx(itemLayoutSlotClassNames.media, classes.media);\n    var mergedEndMediaClasses = cx(itemLayoutSlotClassNames.endMedia, classes.endMedia);\n    var element = /*#__PURE__*/React.createElement(Layout, _extends({\n      as: as,\n      className: classes.root,\n      styles: resolvedStyles.root,\n      rootCSS: rootCSS,\n      alignItems: \"center\",\n      gap: pxToRem(8),\n      debug: debug,\n      reducing: true,\n      start: startArea && /*#__PURE__*/React.createElement(\"span\", {\n        style: mediaCSS,\n        className: mergedMediaClasses\n      }, rtlTextContainer.createFor({\n        element: startArea\n      })),\n      main: mainArea,\n      end: endArea && /*#__PURE__*/React.createElement(\"span\", {\n        style: endMediaCSS,\n        className: mergedEndMediaClasses\n      }, rtlTextContainer.createFor({\n        element: endArea\n      }))\n    }, unhandledProps));\n    setEnd();\n    return element;\n  };\n\n  ItemLayout.displayName = 'ItemLayout';\n  ItemLayout.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false\n  }), {\n    contentMedia: PropTypes.any,\n    content: PropTypes.any,\n    debug: PropTypes.bool,\n    header: PropTypes.any,\n    endMedia: PropTypes.any,\n    headerMedia: PropTypes.any,\n    media: PropTypes.any,\n    renderContentArea: PropTypes.func,\n    renderHeaderArea: PropTypes.func,\n    renderMainArea: PropTypes.func,\n    rootCSS: PropTypes.object,\n    mediaCSS: PropTypes.object,\n    headerCSS: PropTypes.object,\n    headerMediaCSS: PropTypes.object,\n    contentCSS: PropTypes.object,\n    contentMediaCSS: PropTypes.object,\n    endMediaCSS: PropTypes.object\n  });\n  ItemLayout.defaultProps = {\n    renderMainArea: function renderMainArea(props, classes) {\n      var renderHeaderArea = props.renderHeaderArea,\n          renderContentArea = props.renderContentArea;\n      var headerArea = renderHeaderArea(props, classes);\n      var contentArea = renderContentArea(props, classes);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: itemLayoutSlotClassNames.main,\n        style: {\n          gridTemplateRows: '1fr 1fr'\n        }\n      }, headerArea, contentArea);\n    },\n    renderHeaderArea: function renderHeaderArea(props, classes) {\n      var debug = props.debug,\n          header = props.header,\n          headerMedia = props.headerMedia,\n          headerCSS = props.headerCSS,\n          headerMediaCSS = props.headerMediaCSS;\n      var mergedClasses = cx(itemLayoutSlotClassNames.header, classes.header);\n      var mediaClasses = cx(itemLayoutSlotClassNames.headerMedia, classes.headerMedia);\n      return !header && !headerMedia ? null : /*#__PURE__*/React.createElement(Layout, {\n        className: mergedClasses,\n        alignItems: \"end\",\n        gap: pxToRem(8),\n        debug: debug,\n        main: rtlTextContainer.createFor({\n          element: header\n        }),\n        rootCSS: headerCSS,\n        end: headerMedia && /*#__PURE__*/React.createElement(\"span\", {\n          style: headerMediaCSS,\n          className: mediaClasses\n        }, rtlTextContainer.createFor({\n          element: headerMedia\n        }))\n      });\n    },\n    renderContentArea: function renderContentArea(props, classes) {\n      var debug = props.debug,\n          content = props.content,\n          contentMedia = props.contentMedia,\n          contentCSS = props.contentCSS,\n          contentMediaCSS = props.contentMediaCSS;\n      var mergedClasses = cx(itemLayoutSlotClassNames.content, classes.content);\n      var mediaClasses = cx(itemLayoutSlotClassNames.contentMedia, classes.contentMedia);\n      return !content && !contentMedia ? null : /*#__PURE__*/React.createElement(Layout, {\n        className: mergedClasses,\n        alignItems: \"start\",\n        gap: pxToRem(8),\n        debug: debug,\n        rootCSS: contentCSS,\n        main: rtlTextContainer.createFor({\n          element: content\n        }),\n        end: contentMedia && /*#__PURE__*/React.createElement(\"span\", {\n          style: contentMediaCSS,\n          className: mediaClasses\n        }, rtlTextContainer.createFor({\n          element: contentMedia\n        }))\n      });\n    }\n  };\n  ItemLayout.handledProps = Object.keys(ItemLayout.propTypes);\n  ItemLayout.create = createShorthandFactory({\n    Component: ItemLayout,\n    mappedProp: 'content'\n  });\n  return ItemLayout;\n}();","map":{"version":3,"sources":["components/ItemLayout/ItemLayout.tsx"],"names":["itemLayoutClassName","itemLayoutSlotClassNames","header","headerMedia","main","content","contentMedia","media","endMedia","ItemLayout","context","useFluentContext","setStart","setEnd","useTelemetry","as","debug","renderMainArea","rootCSS","mediaCSS","endMediaCSS","className","design","styles","variables","props","unhandledProps","useUnhandledProps","classes","resolvedStyles","useStyles","mapPropsToInlineStyles","rtl","startArea","mainArea","endArea","mergedMediaClasses","cx","mergedEndMediaClasses","element","pxToRem","accessibility","children","PropTypes","renderContentArea","renderHeaderArea","headerCSS","headerMediaCSS","contentCSS","contentMediaCSS","object","headerArea","contentArea","gridTemplateRows","mergedClasses","mediaClasses","Object","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  ComponentWithAs,\n  ComponentSlotClasses,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport {\n  createShorthandFactory,\n  pxToRem,\n  UIComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport { Layout } from '../Layout/Layout';\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface ItemLayoutSlotClassNames {\n  header: string;\n  headerMedia: string;\n  main: string;\n  content: string;\n  contentMedia: string;\n  media: string;\n  endMedia: string;\n}\n\nexport interface ItemLayoutProps extends UIComponentProps, ContentComponentProps<any> {\n  contentMedia?: any;\n  /** Toggle debug mode */\n  debug?: boolean;\n  header?: any;\n  endMedia?: any;\n  headerMedia?: any;\n  media?: any;\n  renderContentArea?: (props: ItemLayoutProps, classes: ComponentSlotClasses) => React.ReactNode;\n  renderHeaderArea?: (props: ItemLayoutProps, classes: ComponentSlotClasses) => React.ReactNode;\n  renderMainArea?: (props: ItemLayoutProps, classes: ComponentSlotClasses) => React.ReactNode;\n  /** Styled applied to the root element of the rendered component. */\n  rootCSS?: React.CSSProperties;\n  /** Styled applied to the media element of the rendered component. */\n  mediaCSS?: React.CSSProperties;\n  /** Styled applied to the header element of the rendered component. */\n  headerCSS?: React.CSSProperties;\n  /** Styled applied to the header media element of the rendered component. */\n  headerMediaCSS?: React.CSSProperties;\n  /** Styled applied to the content element of the rendered component. */\n  contentCSS?: React.CSSProperties;\n  /** Styled applied to the content element of the rendered component. */\n  contentMediaCSS?: React.CSSProperties;\n  /** Styled applied to the end media element of the rendered component. */\n  endMediaCSS?: React.CSSProperties;\n}\n\nexport const itemLayoutClassName = 'ui-itemlayout';\nexport const itemLayoutSlotClassNames: ItemLayoutSlotClassNames = {\n  header: `${itemLayoutClassName}__header`,\n  headerMedia: `${itemLayoutClassName}__headerMedia`,\n  main: `${itemLayoutClassName}__main`,\n  content: `${itemLayoutClassName}__content`,\n  contentMedia: `${itemLayoutClassName}__contentMedia`,\n  media: `${itemLayoutClassName}__media`,\n  endMedia: `${itemLayoutClassName}__endMedia`,\n};\n\nexport type ItemLayoutStylesProps = never;\n\n/**\n * (DEPRECATED) The Item Layout handles layout styles for menu items, list items and other similar item templates.\n */\nexport const ItemLayout: ComponentWithAs<'div', ItemLayoutProps> &\n  FluentComponentStaticProps<ItemLayoutProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ItemLayout.displayName, context.telemetry);\n  setStart();\n  const {\n    as,\n    debug,\n    endMedia,\n    media,\n    renderMainArea,\n    rootCSS,\n    mediaCSS,\n    endMediaCSS,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const unhandledProps = useUnhandledProps(ItemLayout.handledProps, props);\n\n  const { classes, styles: resolvedStyles } = useStyles<ItemLayoutStylesProps>(ItemLayout.displayName, {\n    className: itemLayoutClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const startArea = media;\n  const mainArea = renderMainArea(props, classes);\n  const endArea = endMedia;\n\n  const mergedMediaClasses = cx(itemLayoutSlotClassNames.media, classes.media);\n  const mergedEndMediaClasses = cx(itemLayoutSlotClassNames.endMedia, classes.endMedia);\n\n  const element = (\n    <Layout\n      as={as as React.ElementType}\n      className={classes.root}\n      styles={resolvedStyles.root}\n      rootCSS={rootCSS}\n      alignItems=\"center\"\n      gap={pxToRem(8)}\n      debug={debug}\n      reducing\n      start={\n        startArea && (\n          <span style={mediaCSS} className={mergedMediaClasses}>\n            {rtlTextContainer.createFor({ element: startArea })}\n          </span>\n        )\n      }\n      main={mainArea}\n      end={\n        endArea && (\n          <span style={endMediaCSS} className={mergedEndMediaClasses}>\n            {rtlTextContainer.createFor({ element: endArea })}\n          </span>\n        )\n      }\n      {...unhandledProps}\n    />\n  );\n  setEnd();\n  return element;\n};\n\nItemLayout.displayName = 'ItemLayout';\n\nItemLayout.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  contentMedia: PropTypes.any,\n  content: PropTypes.any,\n  debug: PropTypes.bool,\n  header: PropTypes.any,\n  endMedia: PropTypes.any,\n  headerMedia: PropTypes.any,\n  media: PropTypes.any,\n  renderContentArea: PropTypes.func,\n  renderHeaderArea: PropTypes.func,\n  renderMainArea: PropTypes.func,\n  rootCSS: PropTypes.object,\n  mediaCSS: PropTypes.object,\n  headerCSS: PropTypes.object,\n  headerMediaCSS: PropTypes.object,\n  contentCSS: PropTypes.object,\n  contentMediaCSS: PropTypes.object,\n  endMediaCSS: PropTypes.object,\n};\n\nItemLayout.defaultProps = {\n  renderMainArea: (props, classes) => {\n    const { renderHeaderArea, renderContentArea } = props;\n\n    const headerArea = renderHeaderArea(props, classes);\n    const contentArea = renderContentArea(props, classes);\n\n    return (\n      <div\n        className={itemLayoutSlotClassNames.main}\n        style={{\n          gridTemplateRows: '1fr 1fr',\n        }}\n      >\n        {headerArea}\n        {contentArea}\n      </div>\n    );\n  },\n\n  renderHeaderArea: (props, classes) => {\n    const { debug, header, headerMedia, headerCSS, headerMediaCSS } = props;\n\n    const mergedClasses = cx(itemLayoutSlotClassNames.header, classes.header);\n    const mediaClasses = cx(itemLayoutSlotClassNames.headerMedia, classes.headerMedia);\n\n    return !header && !headerMedia ? null : (\n      <Layout\n        className={mergedClasses}\n        alignItems=\"end\"\n        gap={pxToRem(8)}\n        debug={debug}\n        main={rtlTextContainer.createFor({ element: header })}\n        rootCSS={headerCSS}\n        end={\n          headerMedia && (\n            <span style={headerMediaCSS} className={mediaClasses}>\n              {rtlTextContainer.createFor({ element: headerMedia })}\n            </span>\n          )\n        }\n      />\n    );\n  },\n\n  renderContentArea: (props, classes) => {\n    const { debug, content, contentMedia, contentCSS, contentMediaCSS } = props;\n\n    const mergedClasses = cx(itemLayoutSlotClassNames.content, classes.content);\n    const mediaClasses = cx(itemLayoutSlotClassNames.contentMedia, classes.contentMedia);\n\n    return !content && !contentMedia ? null : (\n      <Layout\n        className={mergedClasses}\n        alignItems=\"start\"\n        gap={pxToRem(8)}\n        debug={debug}\n        rootCSS={contentCSS}\n        main={rtlTextContainer.createFor({ element: content })}\n        end={\n          contentMedia && (\n            <span style={contentMediaCSS} className={mediaClasses}>\n              {rtlTextContainer.createFor({ element: contentMedia })}\n            </span>\n          )\n        }\n      />\n    );\n  },\n};\n\nItemLayout.handledProps = Object.keys(ItemLayout.propTypes) as any;\n\nItemLayout.create = createShorthandFactory({ Component: ItemLayout, mappedProp: 'content' });\n"]},"metadata":{},"sourceType":"module"}