{"ast":null,"code":"/**\n * Given input/parent options, which are both assumed to be defined and populated with\n * displayNames array, return a string array of display names.\n */\nexport function computeDisplayNames(inputOptions, parentOptions) {\n  if (inputOptions.overrideStyles) {\n    return [inputOptions.displayName].filter(Boolean);\n  } // To support styles composition we need to properly pick up display names\n\n\n  return inputOptions.displayName ? parentOptions.displayNames.concat(inputOptions.displayName) : parentOptions.displayNames;\n}","map":{"version":3,"sources":["computeDisplayNames.ts"],"names":[],"mappings":"AACA;;;AAGG;AACH,OAAM,SAAU,mBAAV,CAA8B,YAA9B,EAA4D,aAA5D,EAAiG;AACrG,MAAI,YAAY,CAAC,cAAjB,EAAiC;AAC/B,WAAO,CAAC,YAAY,CAAC,WAAd,EAA2B,MAA3B,CAAkC,OAAlC,CAAP;AACD,GAHoG,CAIrG;;;AACA,SAAO,YAAY,CAAC,WAAb,GACH,aAAa,CAAC,YAAd,CAA2B,MAA3B,CAAkC,YAAY,CAAC,WAA/C,CADG,GAEH,aAAa,CAAC,YAFlB;AAGD","sourcesContent":["import { ComposeOptions, ComposePreparedOptions } from './types';\n/**\n * Given input/parent options, which are both assumed to be defined and populated with\n * displayNames array, return a string array of display names.\n */\nexport function computeDisplayNames(inputOptions: ComposeOptions, parentOptions: ComposePreparedOptions): string[] {\n  if (inputOptions.overrideStyles) {\n    return [inputOptions.displayName].filter(Boolean) as string[];\n  }\n  // To support styles composition we need to properly pick up display names\n  return inputOptions.displayName\n    ? parentOptions.displayNames.concat(inputOptions.displayName)\n    : parentOptions.displayNames;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}