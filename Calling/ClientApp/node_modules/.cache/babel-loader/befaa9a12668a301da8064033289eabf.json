{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * Returns whether provided week days are contiguous.\n * @param days - list of days in a week\n * @param isSingleWeek - decides whether the contiguous logic applies across week boundaries or not\n * @param firstDayOfWeek - decides which day of week is the first one in the order.\n */\n\n\nexport var isContiguous = function isContiguous(days, isSingleWeek, firstDayOfWeek) {\n  var daySet = new Set(days);\n  var amountOfNoNeighbors = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(days), _step; !(_step = _iterator()).done;) {\n    var day = _step.value;\n    var nextDay = (day + 1) % 7;\n\n    if (!(daySet.has(nextDay) && (!isSingleWeek || firstDayOfWeek !== nextDay))) {\n      amountOfNoNeighbors++;\n    }\n  } // In case the full week is provided, then each day has a neighbor\n  // , otherwise the last day does not have a neighbor.\n\n\n  return amountOfNoNeighbors < 2;\n};","map":{"version":3,"sources":["utils/date-time-utilities/dateGrid/isContiguous.ts"],"names":["isContiguous","daySet","amountOfNoNeighbors","day","nextDay","firstDayOfWeek"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;AAMA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAA,YAAA,EAAA,cAAA,EAAkF;AAC5G,MAAMC,MAAM,GAAG,IAAA,GAAA,CAAf,IAAe,CAAf;AACA,MAAIC,mBAAmB,GAAvB,CAAA;;AACA,OAAA,IAAA,SAAA,GAAA,+BAAA,CAAA,IAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAAwB;AAAA,QAAbC,GAAa,GAAA,KAAA,CAAA,KAAA;AACtB,QAAMC,OAAO,GAAG,CAACD,GAAG,GAAJ,CAAA,IAAhB,CAAA;;AACA,QAAI,EAAEF,MAAM,CAANA,GAAAA,CAAAA,OAAAA,MAAwB,CAAA,YAAA,IAAiBI,cAAc,KAA7D,OAAMJ,CAAF,CAAJ,EAA6E;AAC3EC,MAAAA,mBAAmB;AACpB;AAPyG,GAAA,CAU5G;AACA;;;AACA,SAAOA,mBAAmB,GAA1B,CAAA;AAZK,CAAA","sourcesContent":["import { DayOfWeek } from '../dateValues/dateValues';\n\n/**\n * Returns whether provided week days are contiguous.\n * @param days - list of days in a week\n * @param isSingleWeek - decides whether the contiguous logic applies across week boundaries or not\n * @param firstDayOfWeek - decides which day of week is the first one in the order.\n */\nexport const isContiguous = (days: DayOfWeek[], isSingleWeek: boolean, firstDayOfWeek: DayOfWeek): boolean => {\n  const daySet = new Set(days);\n  let amountOfNoNeighbors = 0;\n  for (const day of days) {\n    const nextDay = (day + 1) % 7;\n    if (!(daySet.has(nextDay) && (!isSingleWeek || firstDayOfWeek !== nextDay))) {\n      amountOfNoNeighbors++;\n    }\n  }\n\n  // In case the full week is provided, then each day has a neighbor\n  // , otherwise the last day does not have a neighbor.\n  return amountOfNoNeighbors < 2;\n};\n"]},"metadata":{},"sourceType":"module"}