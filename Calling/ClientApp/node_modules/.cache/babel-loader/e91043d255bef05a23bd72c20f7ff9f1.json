{"ast":null,"code":"// @ts-ignore\nimport { expandProperty } from 'inline-style-expand-shorthand'; // https://jsperf.com/array-indexof-vs-object-key-lookup2/12\n\nvar handledCssProps = {\n  // 'font', Oops, is not supported by inline-style-expand-shorthand\n  padding: true,\n  margin: true,\n  border: true,\n  borderWidth: true,\n  borderStyle: true,\n  borderColor: true,\n  borderTop: true,\n  borderRight: true,\n  borderBottom: true,\n  borderLeft: true,\n  borderRadius: true,\n  background: true,\n  outline: true\n};\nexport var felaExpandCssShorthandsPlugin = function felaExpandCssShorthandsPlugin(styles) {\n  return Object.keys(styles).reduce(function (acc, cssPropertyName) {\n    var _Object$assign4;\n\n    var cssPropertyValue = styles[cssPropertyName];\n\n    if (cssPropertyValue === null || typeof cssPropertyValue === 'undefined') {\n      var _Object$assign;\n\n      return Object.assign({}, acc, (_Object$assign = {}, _Object$assign[cssPropertyName] = cssPropertyValue, _Object$assign));\n    }\n\n    if (handledCssProps[cssPropertyName]) {\n      var expandedProps = expandProperty(cssPropertyName, cssPropertyValue);\n\n      if (expandedProps) {\n        return Object.assign({}, acc, expandedProps);\n      }\n    }\n\n    if (Array.isArray(cssPropertyValue)) {\n      var _Object$assign2;\n\n      return Object.assign({}, acc, (_Object$assign2 = {}, _Object$assign2[cssPropertyName] = cssPropertyValue, _Object$assign2));\n    }\n\n    if (typeof cssPropertyValue === 'object') {\n      var _Object$assign3;\n\n      return Object.assign({}, acc, (_Object$assign3 = {}, _Object$assign3[cssPropertyName] = felaExpandCssShorthandsPlugin(cssPropertyValue), _Object$assign3));\n    }\n\n    return Object.assign({}, acc, (_Object$assign4 = {}, _Object$assign4[cssPropertyName] = cssPropertyValue, _Object$assign4));\n  }, {});\n};","map":{"version":3,"sources":["felaExpandCssShorthandsPlugin.ts"],"names":["handledCssProps","padding","margin","border","borderWidth","borderStyle","borderColor","borderTop","borderRight","borderBottom","borderLeft","borderRadius","background","outline","felaExpandCssShorthandsPlugin","cssPropertyValue","styles","expandedProps","expandProperty","Array"],"mappings":"AAEA;AACA,SAAA,cAAA,QAAA,+BAAA,C,CAEA;;AACA,IAAMA,eAA4D,GAAG;AACnE;AACAC,EAAAA,OAAO,EAF4D,IAAA;AAGnEC,EAAAA,MAAM,EAH6D,IAAA;AAInEC,EAAAA,MAAM,EAJ6D,IAAA;AAKnEC,EAAAA,WAAW,EALwD,IAAA;AAMnEC,EAAAA,WAAW,EANwD,IAAA;AAOnEC,EAAAA,WAAW,EAPwD,IAAA;AAQnEC,EAAAA,SAAS,EAR0D,IAAA;AASnEC,EAAAA,WAAW,EATwD,IAAA;AAUnEC,EAAAA,YAAY,EAVuD,IAAA;AAWnEC,EAAAA,UAAU,EAXyD,IAAA;AAYnEC,EAAAA,YAAY,EAZuD,IAAA;AAanEC,EAAAA,UAAU,EAbyD,IAAA;AAcnEC,EAAAA,OAAO,EAAE;AAd0D,CAArE;AAiBA,OAAO,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAA,MAAA,EAA0C;AACrF,SAAO,MAAM,CAAN,IAAA,CAAA,MAAA,EAAA,MAAA,CAA2B,UAAA,GAAA,EAAA,eAAA,EAA+D;AAAA,QAAA,eAAA;;AAC/F,QAAMC,gBAAgB,GAAGC,MAAM,CAA/B,eAA+B,CAA/B;;AAEA,QAAID,gBAAgB,KAAhBA,IAAAA,IAA6B,OAAA,gBAAA,KAAjC,WAAA,EAA0E;AAAA,UAAA,cAAA;;AACxE,aAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,cAAA,GAAA,EAAA,EAAA,cAAA,CAAA,eAAA,CAAA,GAAA,gBAAA,EAAA,cAAA,EAAA;AACD;;AAED,QAAIf,eAAe,CAAnB,eAAmB,CAAnB,EAAsC;AACpC,UAAMiB,aAAa,GAAGC,cAAc,CAAA,eAAA,EAApC,gBAAoC,CAApC;;AAEA,UAAA,aAAA,EAAmB;AACjB,eAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,aAAA,CAAA;AACD;AACF;;AAED,QAAIC,KAAK,CAALA,OAAAA,CAAJ,gBAAIA,CAAJ,EAAqC;AAAA,UAAA,eAAA;;AACnC,aAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAA,gBAAA,EAAA,eAAA,EAAA;AACD;;AAED,QAAI,OAAA,gBAAA,KAAJ,QAAA,EAA0C;AAAA,UAAA,eAAA;;AACxC,aAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAoCL,6BAA6B,CAAjE,gBAAiE,CAAjE,EAAA,eAAA,EAAA;AACD;;AAED,WAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,GAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAA,gBAAA,EAAA,eAAA,EAAA;AAvBK,GAAA,EAAP,EAAO,CAAP;AADK,CAAA","sourcesContent":["import { ICSSInJSStyle } from '@fluentui/styles';\nimport * as CSS from 'csstype';\n// @ts-ignore\nimport { expandProperty } from 'inline-style-expand-shorthand';\n\n// https://jsperf.com/array-indexof-vs-object-key-lookup2/12\nconst handledCssProps: Partial<Record<keyof CSS.Properties, true>> = {\n  // 'font', Oops, is not supported by inline-style-expand-shorthand\n  padding: true,\n  margin: true,\n  border: true,\n  borderWidth: true,\n  borderStyle: true,\n  borderColor: true,\n  borderTop: true,\n  borderRight: true,\n  borderBottom: true,\n  borderLeft: true,\n  borderRadius: true,\n  background: true,\n  outline: true,\n};\n\nexport const felaExpandCssShorthandsPlugin = (styles: ICSSInJSStyle): ICSSInJSStyle => {\n  return Object.keys(styles).reduce((acc: ICSSInJSStyle, cssPropertyName: keyof CSS.Properties) => {\n    const cssPropertyValue = styles[cssPropertyName];\n\n    if (cssPropertyValue === null || typeof cssPropertyValue === 'undefined') {\n      return { ...acc, [cssPropertyName]: cssPropertyValue };\n    }\n\n    if (handledCssProps[cssPropertyName]) {\n      const expandedProps = expandProperty(cssPropertyName, cssPropertyValue);\n\n      if (expandedProps) {\n        return { ...acc, ...expandedProps };\n      }\n    }\n\n    if (Array.isArray(cssPropertyValue)) {\n      return { ...acc, [cssPropertyName]: cssPropertyValue };\n    }\n\n    if (typeof cssPropertyValue === 'object') {\n      return { ...acc, [cssPropertyName]: felaExpandCssShorthandsPlugin(cssPropertyValue) };\n    }\n\n    return { ...acc, [cssPropertyName]: cssPropertyValue };\n  }, {});\n};\n"]},"metadata":{},"sourceType":"module"}