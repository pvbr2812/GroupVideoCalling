{"ast":null,"code":"import _isNil from \"lodash/isNil\";\nimport _invoke from \"lodash/invoke\";\nimport { hierarchicalTreeItemBehavior, hierarchicalSubtreeBehavior } from '@fluentui/accessibility';\nimport { getFirstFocusable, useTelemetry, useFluentContext, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { HierarchicalTree } from './HierarchicalTree';\nimport { HierarchicalTreeTitle } from './HierarchicalTreeTitle';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';\nexport var hierarchicalTreeItemClassName = 'ui-hierarchicaltree__item';\nexport var hierarchicalTreeItemSlotClassNames = {\n  subtree: hierarchicalTreeItemClassName + \"__subtree\"\n};\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\n\nexport var HierarchicalTreeItem = /*#__PURE__*/function () {\n  var HierarchicalTreeItem = function HierarchicalTreeItem(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(HierarchicalTreeItem.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var items = props.items,\n        title = props.title,\n        renderItemTitle = props.renderItemTitle,\n        open = props.open,\n        exclusive = props.exclusive,\n        children = props.children,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(HierarchicalTreeItem.handledProps, props);\n    var actionHandlers = {\n      performClick: function performClick(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        _invoke(props, 'onTitleClick', e, props);\n      },\n      receiveFocus: function receiveFocus(e) {\n        e.preventDefault();\n        e.stopPropagation(); // Focuses the title if the event comes from a child item.\n\n        if (eventComesFromChildItem(e)) {\n          itemRef.current.focus();\n        }\n      },\n      collapse: function collapse(e) {\n        e.preventDefault();\n        e.stopPropagation(); // Handle click on title if the keyboard event was dispatched on that title\n\n        if (!eventComesFromChildItem(e)) {\n          handleTitleClick(e);\n        }\n      },\n      expand: function expand(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        handleTitleClick(e);\n      },\n      focusSubtree: function focusSubtree(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        var element = getFirstFocusable(treeRef.current, treeRef.current, true);\n\n        if (element) {\n          element.focus();\n        }\n      }\n    };\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: HierarchicalTreeItem.displayName,\n      actionHandlers: actionHandlers,\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          hasItems: items && !!items.length,\n          open: open\n        };\n      },\n      rtl: context.rtl\n    });\n    var itemRef = React.useRef();\n    var treeRef = React.useRef();\n\n    var _useStyles = useStyles(HierarchicalTreeItem.displayName, {\n      className: hierarchicalTreeItemClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var eventComesFromChildItem = function eventComesFromChildItem(e) {\n      return e.currentTarget !== e.target;\n    };\n\n    var handleTitleClick = function handleTitleClick(e) {\n      _invoke(props, 'onTitleClick', e, props);\n    };\n\n    var handleTitleOverrides = function handleTitleOverrides(predefinedProps) {\n      return {\n        onClick: function onClick(e, titleProps) {\n          handleTitleClick(e);\n\n          _invoke(predefinedProps, 'onClick', e, titleProps);\n        }\n      };\n    };\n\n    var renderContent = function renderContent() {\n      var hasSubtree = !_isNil(items);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, HierarchicalTreeTitle.create(title, {\n        defaultProps: function defaultProps() {\n          return {\n            open: open,\n            hasSubtree: hasSubtree,\n            as: hasSubtree ? 'span' : 'a'\n          };\n        },\n        render: renderItemTitle,\n        overrideProps: handleTitleOverrides\n      }), hasSubtree && open && /*#__PURE__*/React.createElement(Ref, {\n        innerRef: treeRef\n      }, HierarchicalTree.create(items, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('item', {\n            accessibility: hierarchicalSubtreeBehavior,\n            className: hierarchicalTreeItemSlotClassNames.subtree,\n            exclusive: exclusive,\n            renderItemTitle: renderItemTitle\n          });\n        }\n      })));\n    };\n\n    var element = /*#__PURE__*/React.createElement(Ref, {\n      innerRef: itemRef\n    }, /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps, rtlTextContainer.getAttributes({\n      forElements: [children]\n    }))), childrenExist(children) ? children : renderContent()));\n    setEnd();\n    return element;\n  };\n\n  HierarchicalTreeItem.displayName = 'HierarchicalTreeItem';\n  HierarchicalTreeItem.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: false\n  }), {\n    items: customPropTypes.collectionShorthand,\n    index: PropTypes.number,\n    exclusive: PropTypes.bool,\n    onTitleClick: PropTypes.func,\n    open: PropTypes.bool,\n    renderItemTitle: PropTypes.func,\n    title: customPropTypes.itemShorthand\n  });\n  HierarchicalTreeItem.defaultProps = {\n    as: 'li',\n    accessibility: hierarchicalTreeItemBehavior\n  };\n  HierarchicalTreeItem.handledProps = Object.keys(HierarchicalTreeItem.propTypes);\n  HierarchicalTreeItem.create = createShorthandFactory({\n    Component: HierarchicalTreeItem,\n    mappedProp: 'title'\n  });\n  return HierarchicalTreeItem;\n}();","map":{"version":3,"sources":["components/HierarchicalTree/HierarchicalTreeItem.tsx"],"names":["hierarchicalTreeItemClassName","hierarchicalTreeItemSlotClassNames","subtree","HierarchicalTreeItem","context","useFluentContext","setStart","setEnd","useTelemetry","items","title","renderItemTitle","open","exclusive","children","className","design","styles","variables","props","ElementType","getElementType","unhandledProps","useUnhandledProps","actionHandlers","performClick","e","receiveFocus","eventComesFromChildItem","itemRef","collapse","handleTitleClick","expand","focusSubtree","element","getFirstFocusable","treeRef","getA11yProps","useAccessibility","debugName","mapPropsToBehavior","hasItems","rtl","React","classes","useStyles","mapPropsToInlineStyles","handleTitleOverrides","onClick","renderContent","hasSubtree","defaultProps","as","render","overrideProps","accessibility","root","forElements","childrenExist","content","customPropTypes","index","PropTypes","onTitleClick","itemShorthand","hierarchicalTreeItemBehavior","Object","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  hierarchicalTreeItemBehavior,\n  hierarchicalSubtreeBehavior,\n  HierarchicalTreeItemBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getFirstFocusable,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { HierarchicalTree, HierarchicalTreeProps } from './HierarchicalTree';\nimport { HierarchicalTreeTitle, HierarchicalTreeTitleProps } from './HierarchicalTreeTitle';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n} from '../../types';\n\nexport interface HierarchicalTreeItemSlotClassNames {\n  subtree: string;\n}\n\nexport interface HierarchicalTreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<HierarchicalTreeItemBehaviorProps>;\n\n  /** Only allow one subtree to be open at a time. */\n  exclusive?: boolean;\n\n  /** The index of the item among its sibbling */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandValue<HierarchicalTreeProps> | ShorthandCollection<HierarchicalTreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<HierarchicalTreeItemProps>;\n\n  /** Whether or not the subtree of the item is in the open state. */\n  open?: boolean;\n\n  /**\n   * A custom render iterator for rendering each Accordion panel title.\n   * The default component, props, and children are available for each panel title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<HierarchicalTreeTitleProps>;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<HierarchicalTreeTitleProps>;\n}\n\nexport const hierarchicalTreeItemClassName = 'ui-hierarchicaltree__item';\nexport const hierarchicalTreeItemSlotClassNames: HierarchicalTreeItemSlotClassNames = {\n  subtree: `${hierarchicalTreeItemClassName}__subtree`,\n};\n\nexport type HierarchicalTreeItemStyles = never;\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const HierarchicalTreeItem: ComponentWithAs<'li', HierarchicalTreeItemProps> &\n  FluentComponentStaticProps<HierarchicalTreeItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(HierarchicalTreeItem.displayName, context.telemetry);\n  setStart();\n  const { items, title, renderItemTitle, open, exclusive, children, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(HierarchicalTreeItem.handledProps, props);\n\n  const actionHandlers = {\n    performClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _.invoke(props, 'onTitleClick', e, props);\n    },\n    receiveFocus: e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Focuses the title if the event comes from a child item.\n      if (eventComesFromChildItem(e)) {\n        itemRef.current.focus();\n      }\n    },\n    collapse: e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Handle click on title if the keyboard event was dispatched on that title\n      if (!eventComesFromChildItem(e)) {\n        handleTitleClick(e);\n      }\n    },\n    expand: e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      handleTitleClick(e);\n    },\n    focusSubtree: e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const element = getFirstFocusable(treeRef.current, treeRef.current, true);\n      if (element) {\n        element.focus();\n      }\n    },\n  };\n  const getA11yProps = useAccessibility<HierarchicalTreeItemBehaviorProps>(props.accessibility, {\n    debugName: HierarchicalTreeItem.displayName,\n    actionHandlers,\n    mapPropsToBehavior: () => ({\n      hasItems: items && !!(items as HierarchicalTreeItemProps[]).length,\n      open,\n    }),\n    rtl: context.rtl,\n  });\n\n  const itemRef = React.useRef<HTMLElement>();\n  const treeRef = React.useRef<HTMLElement>();\n\n  const { classes } = useStyles<HierarchicalTreeItemStyles>(HierarchicalTreeItem.displayName, {\n    className: hierarchicalTreeItemClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const eventComesFromChildItem = e => {\n    return e.currentTarget !== e.target;\n  };\n\n  const handleTitleClick = e => {\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleTitleOverrides = (predefinedProps: HierarchicalTreeTitleProps) => ({\n    onClick: (e, titleProps) => {\n      handleTitleClick(e);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const renderContent = () => {\n    const hasSubtree = !_.isNil(items);\n\n    return (\n      <>\n        {HierarchicalTreeTitle.create(title, {\n          defaultProps: () => ({\n            open,\n            hasSubtree,\n            as: hasSubtree ? 'span' : 'a',\n          }),\n          render: renderItemTitle,\n          overrideProps: handleTitleOverrides,\n        })}\n        {hasSubtree && open && (\n          <Ref innerRef={treeRef}>\n            {HierarchicalTree.create(items, {\n              defaultProps: () =>\n                getA11yProps('item', {\n                  accessibility: hierarchicalSubtreeBehavior,\n                  className: hierarchicalTreeItemSlotClassNames.subtree,\n                  exclusive,\n                  renderItemTitle,\n                }),\n            })}\n          </Ref>\n        )}\n      </>\n    );\n  };\n\n  const element = (\n    <Ref innerRef={itemRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...unhandledProps,\n          ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        })}\n      >\n        {childrenExist(children) ? children : renderContent()}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n};\n\nHierarchicalTreeItem.displayName = 'HierarchicalTreeItem';\n\nHierarchicalTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  items: customPropTypes.collectionShorthand,\n  index: PropTypes.number,\n  exclusive: PropTypes.bool,\n  onTitleClick: PropTypes.func,\n  open: PropTypes.bool,\n  renderItemTitle: PropTypes.func,\n  title: customPropTypes.itemShorthand,\n};\n\nHierarchicalTreeItem.defaultProps = {\n  as: 'li',\n  accessibility: hierarchicalTreeItemBehavior,\n};\n\nHierarchicalTreeItem.handledProps = Object.keys(HierarchicalTreeItem.propTypes) as any;\n\nHierarchicalTreeItem.create = createShorthandFactory({\n  Component: HierarchicalTreeItem,\n  mappedProp: 'title',\n});\n"]},"metadata":{},"sourceType":"module"}