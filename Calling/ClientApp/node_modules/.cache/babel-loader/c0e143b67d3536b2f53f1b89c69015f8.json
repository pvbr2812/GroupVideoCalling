{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VISHWANATH REDDY\\\\Documents\\\\Teams_Clone\\\\Group_Call\\\\Calling\\\\ClientApp\\\\src\\\\App.tsx\";\n// Â© Microsoft Corporation. All rights reserved.\nimport React, { useState, useEffect, useCallback } from 'react';\nimport GroupCall from './containers/GroupCall';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer } from './core/reducers';\nimport thunk from 'redux-thunk';\nimport EndCall from './components/EndCall';\nimport HomeScreen from './components/HomeScreen';\nimport ConfigurationScreen from './containers/Configuration';\nimport { v1 as createGUID } from 'uuid';\nimport { loadTheme, initializeIcons } from '@fluentui/react';\nimport { utils } from './Utils/Utils';\n\nconst sdkVersion = require('../package.json').dependencies['@azure/communication-calling'];\n\nconst lastUpdated = `Last Updated ${utils.getBuildTime()} with @azure/communication-calling:${sdkVersion}`;\nloadTheme({});\ninitializeIcons();\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nconst App = () => {\n  const [page, setPage] = useState('home');\n  const [callEndReason, setCallEndReason] = useState();\n  const [groupId, setGroupId] = useState('');\n  const [screenWidth, setScreenWidth] = useState(0);\n  const [localVideoStream, setLocalVideoStream] = useState(undefined);\n  const unsupportedStateHandler = useCallback(() => setPage('unsupported'), []);\n  useEffect(() => {\n    const setWindowWidth = () => {\n      const width = typeof window !== 'undefined' ? window.innerWidth : 0;\n      setScreenWidth(width);\n    };\n\n    setWindowWidth();\n    window.addEventListener('resize', setWindowWidth);\n    return () => window.removeEventListener('resize', setWindowWidth);\n  }, []);\n\n  const getGroupIdFromUrl = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('groupId');\n  };\n\n  const getGroupId = () => {\n    if (groupId) return groupId;\n    const uriGid = getGroupIdFromUrl();\n    const gid = uriGid == null || uriGid === '' ? createGUID() : uriGid;\n    setGroupId(gid);\n    return gid;\n  };\n\n  const getContent = () => {\n    if (page === 'home') {\n      return /*#__PURE__*/React.createElement(HomeScreen, {\n        startCallHandler: () => {\n          window.history.pushState({}, document.title, window.location.href + '?groupId=' + getGroupId());\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      });\n    } else if (page === 'configuration') {\n      return /*#__PURE__*/React.createElement(ConfigurationScreen, {\n        startCallHandler: () => setPage('call'),\n        unsupportedStateHandler: unsupportedStateHandler,\n        callEndedHandler: errorMsg => {\n          setCallEndReason(errorMsg);\n          setPage('error');\n        },\n        groupId: getGroupId(),\n        screenWidth: screenWidth,\n        localVideoStream: localVideoStream,\n        setLocalVideoStream: setLocalVideoStream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      });\n    } else if (page === 'call') {\n      return /*#__PURE__*/React.createElement(GroupCall, {\n        endCallHandler: () => setPage('endCall'),\n        groupId: getGroupId(),\n        screenWidth: screenWidth,\n        localVideoStream: localVideoStream,\n        setLocalVideoStream: setLocalVideoStream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      });\n    } else if (page === 'endCall') {\n      return /*#__PURE__*/React.createElement(EndCall, {\n        message: 'You left the call',\n        rejoinHandler: () => {\n          window.location.reload();\n        },\n        homeHandler: () => {\n          window.location.href = window.location.href.split('?')[0];\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      });\n    } else if (page === 'unsupported') {\n      window.document.title = 'Unsupported browser';\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://docs.microsoft.com/en-us/azure/communication-services/concepts/voice-video-calling/calling-sdk-features#calling-client-library-browser-support\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, \"Learn more\"), \"\\xA0about browsers and platforms supported by the web calling sdk\");\n    } else if (page === 'error') {\n      window.document.title = 'Call Ended';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, `The call has ended with this error code (Code: ${callEndReason === null || callEndReason === void 0 ? void 0 : callEndReason.code} Subcode: ${callEndReason === null || callEndReason === void 0 ? void 0 : callEndReason.subCode})`), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://docs.microsoft.com/en-us/azure/communication-services/concepts/troubleshooting-info?tabs=csharp%2Cjavascript%2Cdotnet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, \"Learn more\"), \"\\xA0about why this Azure Communication Services call has ended.\"));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  };\n\n  if (getGroupIdFromUrl() && page === 'home') {\n    setPage('configuration');\n  }\n\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 10\n    }\n  }, getContent());\n};\n\nwindow.setTimeout(() => {\n  try {\n    console.log(`Azure Communication Services sample group calling app: ${lastUpdated}`);\n  } catch (e) {}\n}, 0);\nexport default App;","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/Teams_Clone/Group_Call/Calling/ClientApp/src/App.tsx"],"names":["React","useState","useEffect","useCallback","GroupCall","createStore","applyMiddleware","Provider","reducer","thunk","EndCall","HomeScreen","ConfigurationScreen","v1","createGUID","loadTheme","initializeIcons","utils","sdkVersion","require","dependencies","lastUpdated","getBuildTime","store","App","page","setPage","callEndReason","setCallEndReason","groupId","setGroupId","screenWidth","setScreenWidth","localVideoStream","setLocalVideoStream","undefined","unsupportedStateHandler","setWindowWidth","width","window","innerWidth","addEventListener","removeEventListener","getGroupIdFromUrl","urlParams","URLSearchParams","location","search","get","getGroupId","uriGid","gid","getContent","history","pushState","document","title","href","errorMsg","reload","split","code","subCode","setTimeout","console","log","e"],"mappings":"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","sourcesContent":["// Â© Microsoft Corporation. All rights reserved.\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport GroupCall from './containers/GroupCall';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { reducer } from './core/reducers';\r\nimport thunk from 'redux-thunk';\r\nimport EndCall from './components/EndCall';\r\nimport HomeScreen from './components/HomeScreen';\r\nimport ConfigurationScreen from './containers/Configuration';\r\nimport { v1 as createGUID } from 'uuid';\r\nimport { loadTheme, initializeIcons } from '@fluentui/react';\r\nimport { utils } from './Utils/Utils';\r\nimport { CallEndReason } from '@azure/communication-calling';\r\n\r\nconst sdkVersion = require('../package.json').dependencies['@azure/communication-calling'];\r\nconst lastUpdated = `Last Updated ${utils.getBuildTime()} with @azure/communication-calling:${sdkVersion}`;\r\n\r\nloadTheme({});\r\ninitializeIcons();\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nconst App = (): JSX.Element => {\r\n  const [page, setPage] = useState('home');\r\n  const [callEndReason, setCallEndReason] = useState<CallEndReason | undefined>();\r\n  const [groupId, setGroupId] = useState('');\r\n  const [screenWidth, setScreenWidth] = useState(0);\r\n  const [localVideoStream, setLocalVideoStream] = useState(undefined);\r\n\r\n  const unsupportedStateHandler = useCallback((): void => setPage('unsupported'), []);\r\n\r\n  useEffect(() => {\r\n    const setWindowWidth = (): void => {\r\n      const width = typeof window !== 'undefined' ? window.innerWidth : 0;\r\n      setScreenWidth(width);\r\n    };\r\n    setWindowWidth();\r\n    window.addEventListener('resize', setWindowWidth);\r\n    return (): void => window.removeEventListener('resize', setWindowWidth);\r\n  }, []);\r\n\r\n  const getGroupIdFromUrl = (): string | null => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.get('groupId');\r\n  };\r\n\r\n  const getGroupId = (): string => {\r\n    if (groupId) return groupId;\r\n    const uriGid = getGroupIdFromUrl();\r\n    const gid = uriGid == null || uriGid === '' ? createGUID() : uriGid;\r\n    setGroupId(gid);\r\n    return gid;\r\n  };\r\n\r\n  const getContent = (): JSX.Element => {\r\n    if (page === 'home') {\r\n      return (\r\n        <HomeScreen\r\n          startCallHandler={(): void => {\r\n            window.history.pushState({}, document.title, window.location.href + '?groupId=' + getGroupId());\r\n          }}\r\n        />\r\n      );\r\n    } else if (page === 'configuration') {\r\n      return (\r\n        <ConfigurationScreen\r\n          startCallHandler={(): void => setPage('call')}\r\n          unsupportedStateHandler={unsupportedStateHandler}\r\n          callEndedHandler={(errorMsg: CallEndReason): void => {\r\n            setCallEndReason(errorMsg);\r\n            setPage('error');\r\n          }}\r\n          groupId={getGroupId()}\r\n          screenWidth={screenWidth}\r\n          localVideoStream={localVideoStream}\r\n          setLocalVideoStream={setLocalVideoStream}\r\n        />\r\n      );\r\n    } else if (page === 'call') {\r\n      return (\r\n        <GroupCall\r\n          endCallHandler={(): void => setPage('endCall')}\r\n          groupId={getGroupId()}\r\n          screenWidth={screenWidth}\r\n          localVideoStream={localVideoStream}\r\n          setLocalVideoStream={setLocalVideoStream}\r\n        />\r\n      );\r\n    } else if (page === 'endCall') {\r\n      return (\r\n        <EndCall\r\n          message={'You left the call'}\r\n          rejoinHandler={(): void => {\r\n            window.location.reload();\r\n          }}\r\n          homeHandler={(): void => {\r\n            window.location.href = window.location.href.split('?')[0];\r\n          }}\r\n        />\r\n      );\r\n    } else if (page === 'unsupported') {\r\n      window.document.title = 'Unsupported browser';\r\n      return (\r\n        <>\r\n          <a href=\"https://docs.microsoft.com/en-us/azure/communication-services/concepts/voice-video-calling/calling-sdk-features#calling-client-library-browser-support\">\r\n            Learn more\r\n          </a>\r\n          &nbsp;about browsers and platforms supported by the web calling sdk\r\n        </>\r\n      );\r\n    } else if (page === 'error') {\r\n      window.document.title = 'Call Ended';\r\n      return (\r\n        <div>\r\n          <div>{`The call has ended with this error code (Code: ${callEndReason?.code} Subcode: ${callEndReason?.subCode})`}</div>\r\n\r\n          <div>\r\n            <a href=\"https://docs.microsoft.com/en-us/azure/communication-services/concepts/troubleshooting-info?tabs=csharp%2Cjavascript%2Cdotnet\">\r\n              Learn more\r\n            </a>\r\n            &nbsp;about why this Azure Communication Services call has ended.\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  if (getGroupIdFromUrl() && page === 'home') {\r\n    setPage('configuration');\r\n  }\r\n\r\n  return <Provider store={store}>{getContent()}</Provider>;\r\n};\r\n\r\nwindow.setTimeout(() => {\r\n  try {\r\n    console.log(`Azure Communication Services sample group calling app: ${lastUpdated}`);\r\n  } catch (e) {}\r\n}, 0);\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}