{"ast":null,"code":"import { FocusZoneDirection } from '../../focusZone/types';\nimport { hierarchicalSubtreeBehavior } from './hierarchicalSubtreeBehavior';\n/**\n * @specification\n * Adds role 'tree' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Provides arrow key navigation in vertical direction.\n * Triggers 'expandSiblings' action with '*' on 'root'.\n */\n\nexport var hierarchicalTreeBehavior = function hierarchicalTreeBehavior(props) {\n  var subtreeBehaviorData = hierarchicalSubtreeBehavior({});\n  return {\n    attributes: {\n      root: Object.assign({}, subtreeBehaviorData.attributes.root, {\n        role: 'tree',\n        'aria-labelledby': props['aria-labelledby']\n      })\n    },\n    keyActions: {\n      root: Object.assign({}, subtreeBehaviorData.keyActions.root)\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.vertical\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/HierarchicalTree/hierarchicalTreeBehavior.ts"],"names":["hierarchicalTreeBehavior","subtreeBehaviorData","hierarchicalSubtreeBehavior","attributes","root","role","props","keyActions","focusZone","direction","FocusZoneDirection","vertical"],"mappings":"AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,SAAA,2BAAA,QAAA,+BAAA;AAEA;;;;;;;;AAOA,OAAO,IAAMA,wBAA8E,GAAG,SAAjFA,wBAAiF,CAAA,KAAA,EAAS;AACrG,MAAMC,mBAAmB,GAAGC,2BAA2B,CAAvD,EAAuD,CAAvD;AACA,SAAO;AACLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACCH,mBAAmB,CAAnBA,UAAAA,CADD,IAAA,EAAA;AAEFI,QAAAA,IAAI,EAFF,MAAA;AAGF,2BAAmBC,KAAK,CAAA,iBAAA;AAHtB,OAAA;AADM,KADP;AAQLC,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACCH,mBAAmB,CAAnBA,UAAAA,CADD,IAAA;AADM,KARP;AAaLO,IAAAA,SAAS,EAAE;AACTF,MAAAA,KAAK,EAAE;AACLG,QAAAA,SAAS,EAAEC,kBAAkB,CAACC;AADzB;AADE;AAbN,GAAP;AAFK,CAAA","sourcesContent":["import { Accessibility, AccessibilityAttributes } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { hierarchicalSubtreeBehavior } from './hierarchicalSubtreeBehavior';\n\n/**\n * @specification\n * Adds role 'tree' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Provides arrow key navigation in vertical direction.\n * Triggers 'expandSiblings' action with '*' on 'root'.\n */\nexport const hierarchicalTreeBehavior: Accessibility<HierarchicalTreeBehaviorBehaviorProps> = props => {\n  const subtreeBehaviorData = hierarchicalSubtreeBehavior({});\n  return {\n    attributes: {\n      root: {\n        ...subtreeBehaviorData.attributes.root,\n        role: 'tree',\n        'aria-labelledby': props['aria-labelledby'],\n      },\n    },\n    keyActions: {\n      root: {\n        ...subtreeBehaviorData.keyActions.root,\n      },\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.vertical,\n      },\n    },\n  };\n};\n\nexport type HierarchicalTreeBehaviorBehaviorProps = {} & Pick<AccessibilityAttributes, 'aria-labelledby'>;\n"]},"metadata":{},"sourceType":"module"}