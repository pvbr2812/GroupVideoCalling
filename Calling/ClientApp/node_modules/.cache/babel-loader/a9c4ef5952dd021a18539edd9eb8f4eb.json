{"ast":null,"code":"import * as React from 'react';\nimport { DebugPanelData } from './DebugPanelData';\nimport { filter } from './utils';\nimport { deepmerge } from '@fluentui/styles';\nexport var DebugPanelItem = function DebugPanelItem(props) {\n  var _React$useState = React.useState(''),\n      value = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var propData = props.data,\n      valueKey = props.valueKey,\n      commentKey = props.commentKey,\n      commentKeyPredicate = props.commentKeyPredicate,\n      idKey = props.idKey;\n  var reversedData = JSON.parse(JSON.stringify(propData)).reverse();\n  var data = valueKey ? reversedData.map(function (v) {\n    return v[valueKey];\n  }) : reversedData;\n  var comments = commentKey ? reversedData.map(function (v) {\n    return v[commentKey];\n  }) : [];\n  var ids = idKey ? reversedData.map(function (v) {\n    return v[idKey];\n  }) : [];\n  var mergedThemes = [];\n  mergedThemes.push({}); // init\n\n  for (var i = 1; i < data.length; i++) {\n    mergedThemes.push(deepmerge(mergedThemes[i - 1], data[i - 1]));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    style: {\n      padding: '2px 4px',\n      marginBottom: '4px',\n      width: '100%',\n      border: '1px solid #ccc',\n      background: 'none'\n    },\n    placeholder: \"Filter\"\n  }), data.map(function (theme, idx) {\n    var filteredTheme = value === '' ? theme : filter(theme, value);\n    return /*#__PURE__*/React.createElement(\"pre\", {\n      key: idx,\n      style: {\n        position: 'relative',\n        marginBottom: '4px',\n        borderTop: idx > 0 ? '1px solid #ddd' : 'none'\n      }\n    }, ids && ids[idx] && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        right: 0,\n        color: '#707070'\n      }\n    }, ids[idx]), /*#__PURE__*/React.createElement(DebugPanelData, {\n      data: filteredTheme,\n      comments: comments[idx],\n      commentKeyPredicate: commentKeyPredicate,\n      overrides: mergedThemes[idx],\n      highlightKey: value\n    }));\n  }));\n};","map":{"version":3,"sources":["components/Debug/DebugPanelItem.tsx"],"names":["DebugPanelItem","value","setValue","React","propData","valueKey","commentKey","commentKeyPredicate","idKey","props","reversedData","JSON","data","v","comments","ids","mergedThemes","i","deepmerge","e","padding","marginBottom","width","border","background","filteredTheme","filter","position","borderTop","idx","right","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DebugPanelData } from './DebugPanelData';\nimport { filter } from './utils';\nimport { deepmerge } from '@fluentui/styles';\n\ninterface DebugPanelItemProps {\n  data: any;\n  valueKey?: string;\n  commentKey?: string;\n  idKey?: string;\n  commentKeyPredicate?: (val: any) => boolean;\n}\n\nexport const DebugPanelItem: React.FC<DebugPanelItemProps> = props => {\n  const [value, setValue] = React.useState('');\n  const { data: propData, valueKey, commentKey, commentKeyPredicate, idKey } = props;\n\n  const reversedData = JSON.parse(JSON.stringify(propData)).reverse();\n\n  const data = valueKey ? reversedData.map(v => v[valueKey]) : reversedData;\n  const comments = commentKey ? reversedData.map(v => v[commentKey]) : [];\n  const ids = idKey ? reversedData.map(v => v[idKey]) : [];\n\n  const mergedThemes = [];\n\n  mergedThemes.push({}); // init\n\n  for (let i = 1; i < data.length; i++) {\n    mergedThemes.push(deepmerge(mergedThemes[i - 1], data[i - 1]));\n  }\n\n  return (\n    <>\n      <input\n        onChange={e => setValue(e.target.value)}\n        style={{\n          padding: '2px 4px',\n          marginBottom: '4px',\n          width: '100%',\n          border: '1px solid #ccc',\n          background: 'none',\n        }}\n        placeholder=\"Filter\"\n      />\n      {data.map((theme, idx) => {\n        const filteredTheme = value === '' ? theme : filter(theme, value);\n\n        return (\n          <pre\n            key={idx}\n            style={{\n              position: 'relative',\n              marginBottom: '4px',\n              borderTop: idx > 0 ? '1px solid #ddd' : 'none',\n            }}\n          >\n            {ids && ids[idx] && <div style={{ position: 'absolute', right: 0, color: '#707070' }}>{ids[idx]}</div>}\n            <DebugPanelData\n              data={filteredTheme}\n              comments={comments[idx]}\n              commentKeyPredicate={commentKeyPredicate}\n              overrides={mergedThemes[idx]}\n              highlightKey={value}\n            />\n          </pre>\n        );\n      })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}