{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nvar proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n  return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n  return {\n    create: function (_nextPolicy, _options) {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\n\nvar ProxyPolicy =\n/** @class */\nfunction (_super) {\n  __extends(ProxyPolicy, _super);\n\n  function ProxyPolicy(nextPolicy, options) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n\n    throw proxyNotSupportedInBrowser;\n    return _this;\n  }\n\n  ProxyPolicy.prototype.sendRequest = function (_request) {\n    throw proxyNotSupportedInBrowser;\n  };\n\n  return ProxyPolicy;\n}(BaseRequestPolicy);\n\nexport { ProxyPolicy };","map":{"version":3,"sources":["../../../src/policies/proxyPolicy.browser.ts"],"names":[],"mappings":"AAAA;AACA;;AAGA,SACE,iBADF,QAKO,iBALP;AASA,IAAM,0BAA0B,GAAG,IAAI,KAAJ,CAAU,qDAAV,CAAnC;AAEA,OAAM,SAAU,uBAAV,CAAkC,SAAlC,EAAoD;AACxD,SAAO,SAAP;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,cAAtB,EAAoD;AACxD,SAAO;AACL,IAAA,MAAM,EAAE,UAAC,WAAD,EAA6B,QAA7B,EAA2D;AACjE,YAAM,0BAAN;AACD;AAHI,GAAP;AAKD;;AAED,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAC/B,WAAA,WAAA,CAAY,UAAZ,EAAuC,OAAvC,EAAoE;AAApE,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAN,EAAkB,OAAlB,KAA0B,IAD5B;;AAEE,UAAM,0BAAN;;AACD;;AAEM,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,QAAnB,EAA4C;AAC1C,UAAM,0BAAN;AACD,GAFM;;AAGT,SAAA,WAAA;AAAC,CATD,CAAiC,iBAAjC,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ProxySettings } from \"../serviceClient\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw proxyNotSupportedInBrowser;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}