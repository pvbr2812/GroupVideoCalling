{"ast":null,"code":"\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NOOP_TRACER = exports.NoopTracer = void 0;\n\nvar NoopSpan_1 = require(\"./NoopSpan\");\n/**\n * No-op implementations of {@link Tracer}.\n */\n\n\nvar NoopTracer =\n/** @class */\nfunction () {\n  function NoopTracer() {}\n\n  NoopTracer.prototype.getCurrentSpan = function () {\n    return NoopSpan_1.NOOP_SPAN;\n  }; // startSpan starts a noop span.\n\n\n  NoopTracer.prototype.startSpan = function (name, options) {\n    return NoopSpan_1.NOOP_SPAN;\n  };\n\n  NoopTracer.prototype.withSpan = function (span, fn) {\n    return fn();\n  };\n\n  NoopTracer.prototype.bind = function (target, span) {\n    return target;\n  };\n\n  return NoopTracer;\n}();\n\nexports.NoopTracer = NoopTracer;\nexports.NOOP_TRACER = new NoopTracer();","map":{"version":3,"sources":["../../../src/trace/NoopTracer.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;AAGH,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAEA;;AAEG;;;AACH,IAAA,UAAA;AAAA;AAAA,YAAA;AAAA,WAAA,UAAA,GAAA,CAoBC;;AAnBC,EAAA,UAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,WAAO,UAAA,CAAA,SAAP;AACD,GAFD,CADF,CAKE;;;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,IAAV,EAAwB,OAAxB,EAA6C;AAC3C,WAAO,UAAA,CAAA,SAAP;AACD,GAFD;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UACE,IADF,EAEE,EAFF,EAEO;AAEL,WAAO,EAAE,EAAT;AACD,GALD;;AAOA,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAQ,MAAR,EAAmB,IAAnB,EAA8B;AAC5B,WAAO,MAAP;AACD,GAFD;;AAGF,SAAA,UAAA;AAAC,CApBD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;AAsBA,OAAA,CAAA,WAAA,GAAc,IAAI,UAAJ,EAAd","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TRACER = exports.NoopTracer = void 0;\nvar NoopSpan_1 = require(\"./NoopSpan\");\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    NoopTracer.prototype.getCurrentSpan = function () {\n        return NoopSpan_1.NOOP_SPAN;\n    };\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options) {\n        return NoopSpan_1.NOOP_SPAN;\n    };\n    NoopTracer.prototype.withSpan = function (span, fn) {\n        return fn();\n    };\n    NoopTracer.prototype.bind = function (target, span) {\n        return target;\n    };\n    return NoopTracer;\n}());\nexports.NoopTracer = NoopTracer;\nexports.NOOP_TRACER = new NoopTracer();\n//# sourceMappingURL=NoopTracer.js.map"]},"metadata":{},"sourceType":"script"}