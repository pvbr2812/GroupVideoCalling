{"ast":null,"code":"import { connect } from 'react-redux';\nimport GroupCall from '../components/GroupCall';\nimport { setMicrophone } from '../core/sideEffects';\nimport { setVideoDeviceInfo, setAudioDeviceInfo } from '../core/actions/devices';\n\nconst mapStateToProps = (state, props) => ({\n  userId: state.sdk.userId,\n  callAgent: state.calls.callAgent,\n  deviceManager: state.devices.deviceManager,\n  group: state.calls.group,\n  screenWidth: props.screenWidth,\n  call: state.calls.call,\n  shareScreen: state.controls.shareScreen,\n  mic: state.controls.mic,\n  groupCallEndReason: state.calls.groupCallEndReason,\n  isGroup: () => state.calls.call && state.calls.call.direction !== 'Incoming' && !!state.calls.group,\n  remoteParticipants: state.calls.remoteParticipants,\n  callState: state.calls.callState,\n  localVideo: state.controls.localVideo,\n  screenShareStreams: state.streams.screenShareStreams,\n  videoDeviceInfo: state.devices.videoDeviceInfo,\n  audioDeviceInfo: state.devices.audioDeviceInfo,\n  videoDeviceList: state.devices.videoDeviceList,\n  audioDeviceList: state.devices.audioDeviceList,\n  cameraPermission: state.devices.cameraPermission,\n  microphonePermission: state.devices.microphonePermission\n});\n\nconst mapDispatchToProps = dispatch => ({\n  mute: () => dispatch(setMicrophone(false)),\n  setAudioDeviceInfo: deviceInfo => {\n    dispatch(setAudioDeviceInfo(deviceInfo));\n  },\n  setVideoDeviceInfo: deviceInfo => {\n    dispatch(setVideoDeviceInfo(deviceInfo));\n  }\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default connector(GroupCall);","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/Git Uploads/GroupVideoCalling/Calling/ClientApp/src/containers/GroupCall.ts"],"names":["connect","GroupCall","setMicrophone","setVideoDeviceInfo","setAudioDeviceInfo","mapStateToProps","state","props","userId","sdk","callAgent","calls","deviceManager","devices","group","screenWidth","call","shareScreen","controls","mic","groupCallEndReason","isGroup","direction","remoteParticipants","callState","localVideo","screenShareStreams","streams","videoDeviceInfo","audioDeviceInfo","videoDeviceList","audioDeviceList","cameraPermission","microphonePermission","mapDispatchToProps","dispatch","mute","deviceInfo","connector"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAA0C,yBAA1C;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,yBAAvD;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAeC,KAAf,MAA0C;AAChEC,EAAAA,MAAM,EAAEF,KAAK,CAACG,GAAN,CAAUD,MAD8C;AAEhEE,EAAAA,SAAS,EAAEJ,KAAK,CAACK,KAAN,CAAYD,SAFyC;AAGhEE,EAAAA,aAAa,EAAEN,KAAK,CAACO,OAAN,CAAcD,aAHmC;AAIhEE,EAAAA,KAAK,EAAER,KAAK,CAACK,KAAN,CAAYG,KAJ6C;AAKhEC,EAAAA,WAAW,EAAER,KAAK,CAACQ,WAL6C;AAMhEC,EAAAA,IAAI,EAAEV,KAAK,CAACK,KAAN,CAAYK,IAN8C;AAOhEC,EAAAA,WAAW,EAAEX,KAAK,CAACY,QAAN,CAAeD,WAPoC;AAQhEE,EAAAA,GAAG,EAAEb,KAAK,CAACY,QAAN,CAAeC,GAR4C;AAShEC,EAAAA,kBAAkB,EAAEd,KAAK,CAACK,KAAN,CAAYS,kBATgC;AAUhEC,EAAAA,OAAO,EAAE,MACPf,KAAK,CAACK,KAAN,CAAYK,IAAZ,IAAoBV,KAAK,CAACK,KAAN,CAAYK,IAAZ,CAAiBM,SAAjB,KAA+B,UAAnD,IAAiE,CAAC,CAAChB,KAAK,CAACK,KAAN,CAAYG,KAXjB;AAYhES,EAAAA,kBAAkB,EAAEjB,KAAK,CAACK,KAAN,CAAYY,kBAZgC;AAahEC,EAAAA,SAAS,EAAElB,KAAK,CAACK,KAAN,CAAYa,SAbyC;AAchEC,EAAAA,UAAU,EAAEnB,KAAK,CAACY,QAAN,CAAeO,UAdqC;AAehEC,EAAAA,kBAAkB,EAAEpB,KAAK,CAACqB,OAAN,CAAcD,kBAf8B;AAgBhEE,EAAAA,eAAe,EAAEtB,KAAK,CAACO,OAAN,CAAce,eAhBiC;AAiBhEC,EAAAA,eAAe,EAAEvB,KAAK,CAACO,OAAN,CAAcgB,eAjBiC;AAkBhEC,EAAAA,eAAe,EAAExB,KAAK,CAACO,OAAN,CAAciB,eAlBiC;AAmBhEC,EAAAA,eAAe,EAAEzB,KAAK,CAACO,OAAN,CAAckB,eAnBiC;AAoBhEC,EAAAA,gBAAgB,EAAE1B,KAAK,CAACO,OAAN,CAAcmB,gBApBgC;AAqBhEC,EAAAA,oBAAoB,EAAE3B,KAAK,CAACO,OAAN,CAAcoB;AArB4B,CAA1C,CAAxB;;AAwBA,MAAMC,kBAAkB,GAAIC,QAAD,KAAoB;AAC7CC,EAAAA,IAAI,EAAE,MAAYD,QAAQ,CAACjC,aAAa,CAAC,KAAD,CAAd,CADmB;AAE7CE,EAAAA,kBAAkB,EAAGiC,UAAD,IAAuC;AACzDF,IAAAA,QAAQ,CAAC/B,kBAAkB,CAACiC,UAAD,CAAnB,CAAR;AACD,GAJ4C;AAK7ClC,EAAAA,kBAAkB,EAAGkC,UAAD,IAAuC;AACzDF,IAAAA,QAAQ,CAAChC,kBAAkB,CAACkC,UAAD,CAAnB,CAAR;AACD;AAP4C,CAApB,CAA3B;;AAUA,MAAMC,SAAc,GAAGtC,OAAO,CAACK,eAAD,EAAkB6B,kBAAlB,CAA9B;AACA,eAAeI,SAAS,CAACrC,SAAD,CAAxB","sourcesContent":["import { connect } from 'react-redux';\r\nimport GroupCall, { GroupCallProps } from '../components/GroupCall';\r\nimport { setMicrophone } from '../core/sideEffects';\r\nimport { setVideoDeviceInfo, setAudioDeviceInfo } from '../core/actions/devices';\r\nimport { AudioDeviceInfo, VideoDeviceInfo } from '@azure/communication-calling';\r\nimport { State } from '../core/reducers';\r\n\r\nconst mapStateToProps = (state: State, props: GroupCallProps) => ({\r\n  userId: state.sdk.userId,\r\n  callAgent: state.calls.callAgent,\r\n  deviceManager: state.devices.deviceManager,\r\n  group: state.calls.group,\r\n  screenWidth: props.screenWidth,\r\n  call: state.calls.call,\r\n  shareScreen: state.controls.shareScreen,\r\n  mic: state.controls.mic,\r\n  groupCallEndReason: state.calls.groupCallEndReason,\r\n  isGroup: (): boolean | undefined =>\r\n    state.calls.call && state.calls.call.direction !== 'Incoming' && !!state.calls.group,\r\n  remoteParticipants: state.calls.remoteParticipants,\r\n  callState: state.calls.callState,\r\n  localVideo: state.controls.localVideo,\r\n  screenShareStreams: state.streams.screenShareStreams,\r\n  videoDeviceInfo: state.devices.videoDeviceInfo,\r\n  audioDeviceInfo: state.devices.audioDeviceInfo,\r\n  videoDeviceList: state.devices.videoDeviceList,\r\n  audioDeviceList: state.devices.audioDeviceList,\r\n  cameraPermission: state.devices.cameraPermission,\r\n  microphonePermission: state.devices.microphonePermission\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  mute: (): void => dispatch(setMicrophone(false)),\r\n  setAudioDeviceInfo: (deviceInfo: AudioDeviceInfo): void => {\r\n    dispatch(setAudioDeviceInfo(deviceInfo));\r\n  },\r\n  setVideoDeviceInfo: (deviceInfo: VideoDeviceInfo): void => {\r\n    dispatch(setVideoDeviceInfo(deviceInfo));\r\n  }\r\n});\r\n\r\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connector(GroupCall);\r\n"]},"metadata":{},"sourceType":"module"}