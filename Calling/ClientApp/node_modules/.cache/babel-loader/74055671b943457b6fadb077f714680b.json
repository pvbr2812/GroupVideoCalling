{"ast":null,"code":"import { pxToRem } from '../../../../utils';\nimport { getColorScheme } from '../../colors';\nexport var labelStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    var colors = getColorScheme(v.colorScheme, p.color);\n    return Object.assign({\n      display: 'inline-flex',\n      alignItems: 'center',\n      overflow: 'hidden',\n      height: v.height,\n      lineHeight: v.height,\n      color: colors.background,\n      backgroundColor: colors.foreground,\n      fontSize: pxToRem(14),\n      borderRadius: pxToRem(3),\n      padding: v.padding\n    }, p.hasImage && (p.imagePosition === 'start' ? {\n      paddingLeft: v.startPaddingLeft\n    } : {\n      paddingRight: v.endPaddingRight\n    }), p.circular && {\n      borderRadius: v.circularRadius\n    });\n  },\n  content: function content(_ref2) {\n    var p = _ref2.props,\n        v = _ref2.variables;\n    var hasStartElement = p.hasImage && p.imagePosition === 'start' || p.hasIcon && p.iconPosition === 'start';\n    var hasEndElement = p.hasImage && p.imagePosition === 'end' || p.hasIcon && p.iconPosition === 'end';\n    return Object.assign({}, hasStartElement && {\n      marginLeft: pxToRem(3)\n    }, hasEndElement && {\n      marginRight: pxToRem(3)\n    });\n  },\n  image: function image(_ref3) {\n    var v = _ref3.variables;\n    return {\n      height: v.height,\n      width: v.height\n    };\n  },\n  icon: function icon(_ref4) {\n    var p = _ref4.props,\n        v = _ref4.variables;\n    return Object.assign({\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: v.iconSize,\n      height: v.iconSize,\n      '& > :first-child': {\n        height: '100%',\n        width: '100%',\n        '& svg': {\n          height: '100%',\n          width: '100%'\n        }\n      }\n    }, p.hasActionableIcon && {\n      cursor: 'pointer'\n    });\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Label/labelStyles.ts"],"names":["labelStyles","root","props","p","variables","v","colors","getColorScheme","display","alignItems","overflow","height","lineHeight","color","backgroundColor","fontSize","pxToRem","borderRadius","padding","paddingLeft","startPaddingLeft","paddingRight","endPaddingRight","circularRadius","content","hasStartElement","hasEndElement","marginLeft","marginRight","image","width","icon","justifyContent","cursor"],"mappings":"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","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { LabelStylesProps } from '../../../../components/Label/Label';\nimport { LabelVariables } from './labelVariables';\nimport { getColorScheme } from '../../colors';\n\nexport const labelStyles: ComponentSlotStylesPrepared<LabelStylesProps, LabelVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const colors = getColorScheme(v.colorScheme, p.color);\n\n    return {\n      display: 'inline-flex',\n      alignItems: 'center',\n      overflow: 'hidden',\n      height: v.height,\n      lineHeight: v.height,\n      color: colors.background,\n      backgroundColor: colors.foreground,\n      fontSize: pxToRem(14),\n      borderRadius: pxToRem(3),\n      padding: v.padding,\n      ...(p.hasImage &&\n        (p.imagePosition === 'start' ? { paddingLeft: v.startPaddingLeft } : { paddingRight: v.endPaddingRight })),\n      ...(p.circular && {\n        borderRadius: v.circularRadius,\n      }),\n    };\n  },\n\n  content: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const hasStartElement = (p.hasImage && p.imagePosition === 'start') || (p.hasIcon && p.iconPosition === 'start');\n    const hasEndElement = (p.hasImage && p.imagePosition === 'end') || (p.hasIcon && p.iconPosition === 'end');\n\n    return {\n      ...(hasStartElement && {\n        marginLeft: pxToRem(3),\n      }),\n      ...(hasEndElement && {\n        marginRight: pxToRem(3),\n      }),\n    };\n  },\n\n  image: ({ variables: v }): ICSSInJSStyle => ({\n    height: v.height,\n    width: v.height,\n  }),\n\n  icon: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: v.iconSize,\n    height: v.iconSize,\n\n    '& > :first-child': {\n      height: '100%',\n      width: '100%',\n      '& svg': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n    ...(p.hasActionableIcon && {\n      cursor: 'pointer',\n    }),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}