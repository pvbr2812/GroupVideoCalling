{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _invoke from \"lodash/invoke\";\nimport { submenuBehavior, menuItemBehavior } from '@fluentui/accessibility';\nimport { compose, focusAsync, mergeVariablesOverrides, useTelemetry, useAutoControlled, useFluentContext, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref, handleRef } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { childrenExist, createShorthand, doesNodeContainClick, commonPropTypes, isFromKeyboard as isEventFromKeyboard } from '../../utils';\nimport { Menu } from './Menu';\nimport { MenuItemIcon } from './MenuItemIcon';\nimport { MenuItemContent } from './MenuItemContent';\nimport { MenuItemIndicator } from './MenuItemIndicator';\nimport { MenuItemWrapper } from './MenuItemWrapper';\nimport { Popper, partitionPopperPropsFromShorthand } from '../../utils/positioner';\nimport { MenuContext } from './menuContext';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nexport var menuItemClassName = 'ui-menu__item';\nexport var menuItemSlotClassNames = {\n  submenu: menuItemClassName + \"__submenu\"\n};\n/**\n * A MenuItem is an actionable item within a Menu.\n */\n\nexport var MenuItem = /*#__PURE__*/function () {\n  var MenuItem = compose(function (inputProps, ref, composeOptions) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(composeOptions.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var parentProps = useContextSelectors(MenuContext, {\n      active: function active(v) {\n        return v.activeIndex === inputProps.index;\n      },\n      onItemClick: function onItemClick(v) {\n        return v.onItemClick;\n      },\n      variables: function variables(v) {\n        return v.variables;\n      },\n      menuSlot: function menuSlot(v) {\n        return v.slots.menu;\n      },\n      slotProps: function slotProps(v) {\n        return v.slotProps.item;\n      },\n      accessibility: function accessibility(v) {\n        return v.behaviors.item;\n      }\n    }); // TODO: we should improve typings for the useContextSelectors\n\n    var props = Object.assign({}, parentProps.slotProps, {\n      active: parentProps.active,\n      variables: parentProps.variables,\n      accessibility: parentProps.accessibility\n    }, inputProps);\n    var _props$accessibility = props.accessibility,\n        accessibility = _props$accessibility === void 0 ? menuItemBehavior : _props$accessibility,\n        children = props.children,\n        content = props.content,\n        icon = props.icon,\n        wrapper = props.wrapper,\n        primary = props.primary,\n        secondary = props.secondary,\n        active = props.active,\n        vertical = props.vertical,\n        indicator = props.indicator,\n        disabled = props.disabled,\n        underlined = props.underlined,\n        iconOnly = props.iconOnly,\n        inSubmenu = props.inSubmenu,\n        pills = props.pills,\n        pointing = props.pointing,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables;\n\n    var _partitionPopperProps = partitionPopperPropsFromShorthand(props.menu),\n        menu = _partitionPopperProps[0],\n        positioningProps = _partitionPopperProps[1];\n\n    var _useAutoControlled = useAutoControlled({\n      defaultValue: props.defaultMenuOpen,\n      value: props.menuOpen,\n      initialValue: false\n    }),\n        menuOpen = _useAutoControlled[0],\n        setMenuOpen = _useAutoControlled[1];\n\n    var _React$useState = React.useState(false),\n        isFromKeyboard = _React$useState[0],\n        setIsFromKeyboard = _React$useState[1];\n\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    var slotProps = composeOptions.resolveSlotProps(Object.assign({}, props, {\n      accessibility: accessibility,\n      variables: mergeVariablesOverrides(variables, parentProps.variables),\n      isFromKeyboard: isFromKeyboard,\n      menuOpen: menuOpen\n    }));\n    var getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: function performClick(event) {\n          return !event.defaultPrevented && handleClick(event);\n        },\n        openMenu: function (_openMenu) {\n          function openMenu(_x) {\n            return _openMenu.apply(this, arguments);\n          }\n\n          openMenu.toString = function () {\n            return _openMenu.toString();\n          };\n\n          return openMenu;\n        }(function (event) {\n          return openMenu(event);\n        }),\n        closeAllMenusAndFocusNextParentItem: function closeAllMenusAndFocusNextParentItem(event) {\n          return closeAllMenus(event);\n        },\n        closeMenu: function (_closeMenu) {\n          function closeMenu(_x2) {\n            return _closeMenu.apply(this, arguments);\n          }\n\n          closeMenu.toString = function () {\n            return _closeMenu.toString();\n          };\n\n          return closeMenu;\n        }(function (event) {\n          return closeMenu(event);\n        }),\n        closeMenuAndFocusTrigger: function closeMenuAndFocusTrigger(event) {\n          return closeMenu(event, true);\n        },\n        doNotNavigateNextParentItem: function doNotNavigateNextParentItem(event) {\n          event.stopPropagation();\n        },\n        closeAllMenus: function (_closeAllMenus) {\n          function closeAllMenus(_x3) {\n            return _closeAllMenus.apply(this, arguments);\n          }\n\n          closeAllMenus.toString = function () {\n            return _closeAllMenus.toString();\n          };\n\n          return closeAllMenus;\n        }(function (event) {\n          return closeAllMenus(event);\n        })\n      },\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          menuOpen: menuOpen,\n          hasMenu: !!menu,\n          disabled: disabled,\n          vertical: vertical,\n          active: active // for tabBehavior\n\n        };\n      },\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(MenuItem.displayName, {\n      className: composeOptions.className,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          primary: primary,\n          underlined: underlined,\n          active: active,\n          vertical: vertical,\n          pointing: pointing,\n          secondary: secondary,\n          disabled: disabled,\n          iconOnly: iconOnly,\n          pills: pills,\n          inSubmenu: inSubmenu,\n          isFromKeyboard: isFromKeyboard\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: mergeVariablesOverrides(parentProps.variables, variables)\n        };\n      },\n      rtl: context.rtl,\n      composeOptions: composeOptions,\n      unstable_props: Object.assign({}, props, {\n        menuOpen: menuOpen,\n        isFromKeyboard: isFromKeyboard\n      })\n    }),\n        classes = _useStyles.classes,\n        resolvedStyles = _useStyles.styles;\n\n    var menuRef = React.useRef();\n    var itemRef = React.useRef();\n\n    var handleWrapperBlur = function handleWrapperBlur(e) {\n      if (!props.inSubmenu && !e.currentTarget.contains(e.relatedTarget)) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    var outsideClickHandler = function outsideClickHandler(e) {\n      if (!isSubmenuOpen()) return;\n\n      if (!doesNodeContainClick(itemRef.current, e, context.target) && !doesNodeContainClick(menuRef.current, e, context.target)) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    var performClick = function performClick(e) {\n      if (menu) {\n        if (doesNodeContainClick(menuRef.current, e, context.target)) {\n          // submenu was clicked => close it and propagate\n          trySetMenuOpen(false, e, function () {\n            return focusAsync(itemRef.current);\n          });\n        } else {\n          // the menuItem element was clicked => toggle the open/close and stop propagation\n          trySetMenuOpen(active ? !menuOpen : true, e);\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    };\n\n    var handleClick = function handleClick(e) {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      performClick(e);\n\n      _invoke(Object.assign({\n        onClick: parentProps.onItemClick\n      }, props), 'onClick', e, props);\n    };\n\n    var handleBlur = function handleBlur(e) {\n      setIsFromKeyboard(false);\n\n      _invoke(props, 'onBlur', e, props);\n    };\n\n    var handleFocus = function handleFocus(e) {\n      setIsFromKeyboard(isEventFromKeyboard());\n\n      _invoke(props, 'onFocus', e, props);\n    };\n\n    var isSubmenuOpen = function isSubmenuOpen() {\n      return !!(menu && menuOpen);\n    };\n\n    var closeAllMenus = function closeAllMenus(e) {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      trySetMenuOpen(false, e, function () {\n        if (!inSubmenu) {\n          focusAsync(itemRef.current);\n        }\n      }); // avoid spacebar scrolling the page\n\n      if (!inSubmenu) {\n        e.preventDefault();\n      }\n    };\n\n    var closeMenu = function closeMenu(e, forceTriggerFocus) {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      var shouldStopPropagation = inSubmenu || props.vertical;\n      trySetMenuOpen(false, e, function () {\n        if (forceTriggerFocus || shouldStopPropagation) {\n          focusAsync(itemRef.current);\n        }\n      });\n\n      if (forceTriggerFocus || shouldStopPropagation) {\n        e.stopPropagation();\n      }\n    };\n\n    var openMenu = function openMenu(e) {\n      if (menu && !menuOpen) {\n        trySetMenuOpen(true, e);\n\n        _invoke(props, 'onActiveChanged', e, Object.assign({}, props, {\n          active: true\n        }));\n\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    var trySetMenuOpen = function trySetMenuOpen(newValue, e, onStateChanged) {\n      setMenuOpen(newValue); // The reason why post-effect is not passed as callback to trySetState method\n      // is that in 'controlled' mode the post-effect is applied before final re-rendering\n      // which cause a broken behavior: for e.g. when it is needed to focus submenu trigger on ESC.\n      // TODO: all DOM post-effects should be applied at componentDidMount & componentDidUpdated stages.\n\n      onStateChanged && onStateChanged();\n\n      _invoke(props, 'onMenuOpenChange', e, Object.assign({}, props, {\n        menuOpen: newValue\n      }));\n    };\n\n    var menuItemInner = /*#__PURE__*/React.createElement(Ref, {\n      innerRef: function innerRef(node) {\n        itemRef.current = node;\n        handleRef(ref, node);\n      }\n    }, /*#__PURE__*/React.createElement(ElementType, _extends({}, getA11yProps('root', Object.assign({\n      className: classes.root,\n      disabled: disabled,\n      onBlur: handleBlur,\n      onFocus: handleFocus\n    }, unhandledProps)), !wrapper && {\n      onClick: handleClick\n    }), childrenExist(children) ? children : /*#__PURE__*/React.createElement(React.Fragment, null, createShorthand(composeOptions.slots.icon, icon, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('icon', slotProps.icon);\n      }\n    }), createShorthand(composeOptions.slots.content, content, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('content', slotProps.content);\n      }\n    }), menu && createShorthand(composeOptions.slots.indicator, indicator, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('indicator', slotProps.indicator);\n      }\n    }))));\n    var maybeSubmenu = menu && active && menuOpen ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Ref, {\n      innerRef: menuRef\n    }, /*#__PURE__*/React.createElement(Popper, _extends({\n      align: vertical ? 'top' : context.rtl ? 'end' : 'start',\n      position: vertical ? context.rtl ? 'before' : 'after' : 'below',\n      targetRef: itemRef\n    }, positioningProps), createShorthand(parentProps.menuSlot || composeOptions.slots.menu || Menu, menu, {\n      defaultProps: function defaultProps() {\n        return Object.assign({}, slotProps.menu, {\n          styles: resolvedStyles.menu\n        });\n      }\n    }))), /*#__PURE__*/React.createElement(EventListener, {\n      listener: outsideClickHandler,\n      target: context.target,\n      type: \"click\"\n    })) : null;\n\n    if (wrapper) {\n      var wrapperElement = createShorthand(composeOptions.slots.wrapper, wrapper, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('wrapper', slotProps.wrapper);\n        },\n        overrideProps: function overrideProps() {\n          return {\n            children: /*#__PURE__*/React.createElement(React.Fragment, null, menuItemInner, maybeSubmenu),\n            onClick: handleClick,\n            onBlur: handleWrapperBlur\n          };\n        }\n      });\n      setEnd();\n      return wrapperElement;\n    }\n\n    setEnd();\n    return menuItemInner;\n  }, {\n    displayName: 'MenuItem',\n    className: menuItemClassName,\n    slots: {\n      icon: MenuItemIcon,\n      indicator: MenuItemIndicator,\n      content: MenuItemContent,\n      wrapper: MenuItemWrapper\n    },\n    slotProps: function slotProps(props) {\n      return {\n        icon: {\n          hasContent: !!props.content,\n          iconOnly: props.iconOnly\n        },\n        content: {\n          hasIcon: !!props.icon,\n          hasMenu: !!props.menu,\n          inSubmenu: props.inSubmenu,\n          vertical: props.vertical\n        },\n        indicator: {\n          iconOnly: props.iconOnly,\n          vertical: props.vertical,\n          inSubmenu: props.inSubmenu,\n          active: props.active,\n          primary: props.primary,\n          underlined: props.underlined\n        },\n        wrapper: {\n          active: props.active,\n          disabled: props.disabled,\n          iconOnly: props.iconOnly,\n          isFromKeyboard: props.isFromKeyboard,\n          pills: props.pills,\n          pointing: props.pointing,\n          secondary: props.secondary,\n          underlined: props.underlined,\n          vertical: props.vertical,\n          primary: props.primary\n        },\n        menu: {\n          accessibility: submenuBehavior,\n          className: menuItemSlotClassNames.submenu,\n          vertical: true,\n          primary: props.primary,\n          secondary: props.secondary,\n          submenu: true,\n          indicator: props.indicator\n        }\n      };\n    },\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'design', 'active', 'disabled', 'icon', 'iconOnly', 'index', 'itemPosition', 'itemsCount', 'onClick', 'onFocus', 'onBlur', 'pills', 'pointing', 'primary', 'secondary', 'underlined', 'vertical', 'wrapper', 'menu', 'menuOpen', 'defaultMenuOpen', 'onActiveChanged', 'inSubmenu', 'indicator', 'onMenuOpenChange', 'styles', 'variables'],\n    shorthandConfig: {\n      mappedProp: 'content'\n    }\n  });\n  MenuItem.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: 'shorthand'\n  }), {\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: customPropTypes.shorthandAllowingChildren,\n    iconOnly: PropTypes.bool,\n    index: PropTypes.number,\n    itemPosition: PropTypes.number,\n    itemsCount: PropTypes.number,\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    pills: PropTypes.bool,\n    pointing: PropTypes.oneOf(['start', 'end', true, false]),\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    underlined: PropTypes.bool,\n    vertical: PropTypes.bool,\n    wrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n    menu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n    menuOpen: PropTypes.bool,\n    defaultMenuOpen: PropTypes.bool,\n    onActiveChanged: PropTypes.func,\n    inSubmenu: PropTypes.bool,\n    indicator: customPropTypes.shorthandAllowingChildren,\n    onMenuOpenChange: PropTypes.func\n  });\n  MenuItem.defaultProps = {\n    as: 'a',\n    wrapper: {},\n    indicator: {}\n  };\n  return MenuItem;\n}();","map":{"version":3,"sources":["components/Menu/MenuItem.tsx"],"names":["isFromKeyboard","menuItemClassName","menuItemSlotClassNames","submenu","MenuItem","compose","context","useFluentContext","setStart","setEnd","useTelemetry","composeOptions","parentProps","useContextSelectors","active","v","inputProps","onItemClick","variables","menuSlot","slotProps","accessibility","props","children","content","icon","wrapper","primary","secondary","vertical","indicator","disabled","underlined","iconOnly","inSubmenu","pills","pointing","className","design","styles","menu","positioningProps","partitionPopperPropsFromShorthand","menuOpen","setMenuOpen","useAutoControlled","defaultValue","value","initialValue","setIsFromKeyboard","React","ElementType","getElementType","unhandledProps","useUnhandledProps","mergeVariablesOverrides","getA11yProps","useAccessibility","debugName","actionHandlers","performClick","event","handleClick","openMenu","closeAllMenusAndFocusNextParentItem","closeAllMenus","closeMenu","closeMenuAndFocusTrigger","doNotNavigateNextParentItem","mapPropsToBehavior","hasMenu","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","menuRef","itemRef","handleWrapperBlur","e","trySetMenuOpen","outsideClickHandler","isSubmenuOpen","doesNodeContainClick","focusAsync","onClick","handleBlur","handleFocus","isEventFromKeyboard","shouldStopPropagation","forceTriggerFocus","onStateChanged","newValue","menuItemInner","handleRef","onBlur","onFocus","childrenExist","createShorthand","defaultProps","maybeSubmenu","wrapperElement","overrideProps","displayName","slots","MenuItemWrapper","hasContent","hasIcon","handledProps","shorthandConfig","mappedProp","PropTypes","customPropTypes","index","itemPosition","itemsCount","defaultMenuOpen","onActiveChanged","onMenuOpenChange","func","as"],"mappings":"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","sourcesContent":["import { Accessibility, submenuBehavior, menuItemBehavior, MenuItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  compose,\n  focusAsync,\n  mergeVariablesOverrides,\n  useTelemetry,\n  useAutoControlled,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ComponentWithAs,\n  ShorthandConfig,\n} from '@fluentui/react-bindings';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref, handleRef } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  childrenExist,\n  createShorthand,\n  doesNodeContainClick,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  isFromKeyboard as isEventFromKeyboard,\n} from '../../utils';\nimport { Menu, MenuProps, MenuShorthandKinds } from './Menu';\nimport { MenuItemIcon, MenuItemIconProps } from './MenuItemIcon';\nimport { MenuItemContent, MenuItemContentProps } from './MenuItemContent';\nimport { MenuItemIndicator, MenuItemIndicatorProps } from './MenuItemIndicator';\nimport { MenuItemWrapper, MenuItemWrapperProps } from './MenuItemWrapper';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { Popper, PopperShorthandProps, partitionPopperPropsFromShorthand } from '../../utils/positioner';\n\nimport { MenuContext, MenuItemSubscribedValue } from './menuContext';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\n\nexport interface MenuItemSlotClassNames {\n  submenu: string;\n}\n\nexport interface MenuItemProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<MenuItemContentProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuItemAsToolbarButtonBehavior, tabBehavior\n   */\n  accessibility?: Accessibility<MenuItemBehaviorProps>;\n\n  /** A menu item can be active. */\n  active?: boolean;\n\n  /** A menu item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Name or shorthand for Menu Item Icon */\n  icon?: ShorthandValue<MenuItemIconProps>;\n\n  /** A menu may have just icons. */\n  iconOnly?: boolean;\n\n  /** MenuItem index inside Menu. */\n  index?: number;\n\n  /** MenuItem position inside Menu (skipping separators). */\n  itemPosition?: number;\n\n  /** MenuItem count inside Menu. */\n  itemsCount?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Called after item blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<MenuItemProps>;\n\n  /** A menu can adjust its appearance to de-emphasize its contents. */\n  pills?: boolean;\n\n  /**\n   * A menu can point to show its relationship to nearby content.\n   * For vertical menu, it can point to the start of the item or to the end.\n   */\n  pointing?: boolean | 'start' | 'end';\n\n  /** The menu item can have primary type. */\n  primary?: boolean;\n\n  /** The menu item can have secondary type. */\n  secondary?: boolean;\n\n  /** Menu items can by highlighted using underline. */\n  underlined?: boolean;\n\n  /** A vertical menu displays elements vertically. */\n  vertical?: boolean;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<MenuItemWrapperProps>;\n\n  /** Shorthand for the submenu. */\n  menu?:\n    | ShorthandValue<MenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<MenuItemProps, MenuShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /** Default menu open */\n  defaultMenuOpen?: boolean;\n\n  /** Callback for setting the current menu item as active element in the menu. */\n  onActiveChanged?: ComponentEventHandler<MenuItemProps>;\n\n  /** Indicates whether the menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Shorthand for the submenu indicator. */\n  indicator?: ShorthandValue<MenuItemIndicatorProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onMenuOpenChange?: ComponentEventHandler<MenuItemProps>;\n}\n\nexport type MenuItemStylesProps = Required<\n  Pick<\n    MenuItemProps,\n    | 'primary'\n    | 'underlined'\n    | 'active'\n    | 'vertical'\n    | 'pointing'\n    | 'secondary'\n    | 'disabled'\n    | 'iconOnly'\n    | 'pills'\n    | 'inSubmenu'\n  >\n> & { isFromKeyboard: boolean };\n\nexport type MenuItemState = { isFromKeyboard: boolean; menuOpen: boolean };\n\nexport const menuItemClassName = 'ui-menu__item';\nexport const menuItemSlotClassNames: MenuItemSlotClassNames = {\n  submenu: `${menuItemClassName}__submenu`,\n};\n\n/**\n * A MenuItem is an actionable item within a Menu.\n */\nexport const MenuItem = compose<'a', MenuItemProps, MenuItemStylesProps, {}, {}>(\n  (inputProps, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const parentProps = (useContextSelectors(MenuContext, {\n      active: v => v.activeIndex === inputProps.index,\n      onItemClick: v => v.onItemClick,\n      variables: v => v.variables,\n      menuSlot: v => v.slots.menu,\n      slotProps: v => v.slotProps.item,\n      accessibility: v => v.behaviors.item,\n    }) as unknown) as MenuItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const props = {\n      ...parentProps.slotProps,\n      active: parentProps.active,\n      variables: parentProps.variables,\n      accessibility: parentProps.accessibility,\n      ...inputProps,\n    };\n\n    const {\n      accessibility = menuItemBehavior,\n      children,\n      content,\n      icon,\n      wrapper,\n      primary,\n      secondary,\n      active,\n      vertical,\n      indicator,\n      disabled,\n      underlined,\n      iconOnly,\n      inSubmenu,\n      pills,\n      pointing,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const [menu, positioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const [menuOpen, setMenuOpen] = useAutoControlled({\n      defaultValue: props.defaultMenuOpen,\n      value: props.menuOpen,\n      initialValue: false,\n    });\n\n    const [isFromKeyboard, setIsFromKeyboard] = React.useState(false);\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const slotProps = composeOptions.resolveSlotProps<MenuItemProps & MenuItemState>({\n      ...props,\n      accessibility,\n      variables: mergeVariablesOverrides(variables, parentProps.variables),\n      isFromKeyboard,\n      menuOpen,\n    });\n\n    const getA11yProps = useAccessibility<MenuItemBehaviorProps>(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: event => !event.defaultPrevented && handleClick(event),\n        openMenu: event => openMenu(event),\n        closeAllMenusAndFocusNextParentItem: event => closeAllMenus(event),\n        closeMenu: event => closeMenu(event),\n        closeMenuAndFocusTrigger: event => closeMenu(event, true),\n        doNotNavigateNextParentItem: event => {\n          event.stopPropagation();\n        },\n        closeAllMenus: event => closeAllMenus(event),\n      },\n      mapPropsToBehavior: () => ({\n        menuOpen,\n        hasMenu: !!menu,\n        disabled,\n        vertical,\n        active, // for tabBehavior\n      }),\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<MenuItemStylesProps>(MenuItem.displayName, {\n      className: composeOptions.className,\n      mapPropsToStyles: () => ({\n        primary,\n        underlined,\n        active,\n        vertical,\n        pointing,\n        secondary,\n        disabled,\n        iconOnly,\n        pills,\n        inSubmenu,\n        isFromKeyboard,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(parentProps.variables, variables),\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: { ...props, menuOpen, isFromKeyboard },\n    });\n\n    const menuRef = React.useRef<HTMLElement>();\n    const itemRef = React.useRef<HTMLElement>();\n\n    const handleWrapperBlur = (e: React.FocusEvent) => {\n      if (!props.inSubmenu && !e.currentTarget.contains(e.relatedTarget as Node)) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const outsideClickHandler = (e: MouseEvent) => {\n      if (!isSubmenuOpen()) return;\n      if (\n        !doesNodeContainClick(itemRef.current, e, context.target) &&\n        !doesNodeContainClick(menuRef.current, e, context.target)\n      ) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const performClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (menu) {\n        if (doesNodeContainClick(menuRef.current, (e as unknown) as MouseEvent, context.target)) {\n          // submenu was clicked => close it and propagate\n          trySetMenuOpen(false, e, () => focusAsync(itemRef.current));\n        } else {\n          // the menuItem element was clicked => toggle the open/close and stop propagation\n          trySetMenuOpen(active ? !menuOpen : true, e);\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    };\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n      performClick(e);\n\n      _.invoke({ onClick: parentProps.onItemClick, ...props }, 'onClick', e, props);\n    };\n\n    const handleBlur = (e: React.FocusEvent) => {\n      setIsFromKeyboard(false);\n\n      _.invoke(props, 'onBlur', e, props);\n    };\n\n    const handleFocus = (e: React.FocusEvent) => {\n      setIsFromKeyboard(isEventFromKeyboard());\n\n      _.invoke(props, 'onFocus', e, props);\n    };\n\n    const isSubmenuOpen = (): boolean => {\n      return !!(menu && menuOpen);\n    };\n\n    const closeAllMenus = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      trySetMenuOpen(false, e, () => {\n        if (!inSubmenu) {\n          focusAsync(itemRef.current);\n        }\n      });\n\n      // avoid spacebar scrolling the page\n      if (!inSubmenu) {\n        e.preventDefault();\n      }\n    };\n\n    const closeMenu = (e: React.MouseEvent | React.KeyboardEvent, forceTriggerFocus?: boolean) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      const shouldStopPropagation = inSubmenu || props.vertical;\n      trySetMenuOpen(false, e, () => {\n        if (forceTriggerFocus || shouldStopPropagation) {\n          focusAsync(itemRef.current);\n        }\n      });\n\n      if (forceTriggerFocus || shouldStopPropagation) {\n        e.stopPropagation();\n      }\n    };\n\n    const openMenu = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (menu && !menuOpen) {\n        trySetMenuOpen(true, e);\n        _.invoke(props, 'onActiveChanged', e, { ...props, active: true });\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    const trySetMenuOpen = (\n      newValue: boolean,\n      e: MouseEvent | React.FocusEvent | React.KeyboardEvent | React.MouseEvent,\n      onStateChanged?: any,\n    ) => {\n      setMenuOpen(newValue);\n      // The reason why post-effect is not passed as callback to trySetState method\n      // is that in 'controlled' mode the post-effect is applied before final re-rendering\n      // which cause a broken behavior: for e.g. when it is needed to focus submenu trigger on ESC.\n      // TODO: all DOM post-effects should be applied at componentDidMount & componentDidUpdated stages.\n      onStateChanged && onStateChanged();\n      _.invoke(props, 'onMenuOpenChange', e, {\n        ...props,\n        menuOpen: newValue,\n      });\n    };\n\n    const menuItemInner = (\n      <Ref\n        innerRef={node => {\n          itemRef.current = node;\n          handleRef(ref, node);\n        }}\n      >\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            disabled,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            ...unhandledProps,\n          })}\n          {...(!wrapper && { onClick: handleClick })}\n        >\n          {childrenExist(children) ? (\n            children\n          ) : (\n            <>\n              {createShorthand(composeOptions.slots.icon, icon, {\n                defaultProps: () => getA11yProps('icon', slotProps.icon),\n              })}\n              {createShorthand(composeOptions.slots.content, content, {\n                defaultProps: () => getA11yProps('content', slotProps.content),\n              })}\n              {menu &&\n                createShorthand(composeOptions.slots.indicator, indicator, {\n                  defaultProps: () => getA11yProps('indicator', slotProps.indicator),\n                })}\n            </>\n          )}\n        </ElementType>\n      </Ref>\n    );\n\n    const maybeSubmenu =\n      menu && active && menuOpen ? (\n        <>\n          <Ref innerRef={menuRef}>\n            <Popper\n              align={vertical ? 'top' : context.rtl ? 'end' : 'start'}\n              position={vertical ? (context.rtl ? 'before' : 'after') : 'below'}\n              targetRef={itemRef}\n              {...positioningProps}\n            >\n              {createShorthand(parentProps.menuSlot || composeOptions.slots.menu || Menu, menu, {\n                defaultProps: () => ({\n                  ...slotProps.menu,\n                  styles: resolvedStyles.menu,\n                }),\n              })}\n            </Popper>\n          </Ref>\n          <EventListener listener={outsideClickHandler} target={context.target} type=\"click\" />\n        </>\n      ) : null;\n\n    if (wrapper) {\n      const wrapperElement = createShorthand(composeOptions.slots.wrapper, wrapper, {\n        defaultProps: () => getA11yProps('wrapper', slotProps.wrapper),\n        overrideProps: () => ({\n          children: (\n            <>\n              {menuItemInner}\n              {maybeSubmenu}\n            </>\n          ),\n          onClick: handleClick,\n          onBlur: handleWrapperBlur,\n        }),\n      });\n\n      setEnd();\n      return wrapperElement;\n    }\n\n    setEnd();\n    return menuItemInner;\n  },\n  {\n    displayName: 'MenuItem',\n    className: menuItemClassName,\n\n    slots: {\n      icon: MenuItemIcon,\n      indicator: MenuItemIndicator,\n      content: MenuItemContent,\n      wrapper: MenuItemWrapper,\n    },\n\n    slotProps: (props: MenuItemProps & MenuItemState) => ({\n      icon: {\n        hasContent: !!props.content,\n        iconOnly: props.iconOnly,\n      },\n      content: {\n        hasIcon: !!props.icon,\n        hasMenu: !!props.menu,\n        inSubmenu: props.inSubmenu,\n        vertical: props.vertical,\n      },\n      indicator: {\n        iconOnly: props.iconOnly,\n        vertical: props.vertical,\n        inSubmenu: props.inSubmenu,\n        active: props.active,\n        primary: props.primary,\n        underlined: props.underlined,\n      },\n      wrapper: {\n        active: props.active,\n        disabled: props.disabled,\n        iconOnly: props.iconOnly,\n        isFromKeyboard: props.isFromKeyboard,\n        pills: props.pills,\n        pointing: props.pointing,\n        secondary: props.secondary,\n        underlined: props.underlined,\n        vertical: props.vertical,\n        primary: props.primary,\n      },\n      menu: {\n        accessibility: submenuBehavior,\n        className: menuItemSlotClassNames.submenu,\n        vertical: true,\n        primary: props.primary,\n        secondary: props.secondary,\n        submenu: true,\n        indicator: props.indicator,\n      },\n    }),\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'active',\n      'disabled',\n      'icon',\n      'iconOnly',\n      'index',\n      'itemPosition',\n      'itemsCount',\n      'onClick',\n      'onFocus',\n      'onBlur',\n      'pills',\n      'pointing',\n      'primary',\n      'secondary',\n      'underlined',\n      'vertical',\n      'wrapper',\n      'menu',\n      'menuOpen',\n      'defaultMenuOpen',\n      'onActiveChanged',\n      'inSubmenu',\n      'indicator',\n      'onMenuOpenChange',\n      'styles',\n      'variables',\n    ],\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n  },\n) as ComponentWithAs<'a', MenuItemProps> & {\n  shorthandConfig: ShorthandConfig<MenuItemProps>;\n};\n\nMenuItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  index: PropTypes.number,\n  itemPosition: PropTypes.number,\n  itemsCount: PropTypes.number,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  pills: PropTypes.bool,\n  pointing: PropTypes.oneOf(['start', 'end', true, false]),\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  underlined: PropTypes.bool,\n  vertical: PropTypes.bool,\n  wrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n  menu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  menuOpen: PropTypes.bool,\n  defaultMenuOpen: PropTypes.bool,\n  onActiveChanged: PropTypes.func,\n  inSubmenu: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  onMenuOpenChange: PropTypes.func,\n};\n\nMenuItem.defaultProps = {\n  as: 'a',\n  wrapper: {},\n  indicator: {},\n};\n"]},"metadata":{},"sourceType":"module"}