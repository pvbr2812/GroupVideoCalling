{"ast":null,"code":"import { getColorScheme } from '../../colors';\nexport var segmentStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    var colors = getColorScheme(v.colorScheme, p.color);\n    return Object.assign({\n      borderColor: 'transparent',\n      borderRadius: v.borderRadius,\n      borderStyle: v.borderStyle,\n      borderWidth: v.borderWidth,\n      boxShadow: v.boxShadow,\n      padding: v.padding,\n      color: v.color,\n      backgroundColor: v.backgroundColor\n    }, p.color && {\n      borderColor: colors.foreground\n    }, p.inverted && {\n      color: v.backgroundColor,\n      backgroundColor: p.color ? colors.foreground : v.color\n    }, p.disabled && Object.assign({\n      boxShadow: 'none',\n      borderColor: v.disabledBorderColor,\n      color: v.disabledColor,\n      backgroundColor: v.disabledBackgroundColor\n    }, p.inverted && {\n      color: v.disabledBackgroundColor,\n      backgroundColor: v.disabledColor\n    }));\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Segment/segmentStyles.ts"],"names":["segmentStyles","root","props","p","variables","v","colors","getColorScheme","borderColor","borderRadius","borderStyle","borderWidth","boxShadow","padding","color","backgroundColor","foreground","disabledBackgroundColor","disabledColor"],"mappings":"AAGA,SAAA,cAAA,QAAA,cAAA;AAEA,OAAO,IAAMA,aAAgF,GAAG;AAC9FC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAA+C;AAAA,QAArCE,CAAqC,GAAA,IAAA,CAA5CD,KAA4C;AAAA,QAAvBG,CAAuB,GAAA,IAAA,CAAlCD,SAAkC;AACnD,QAAME,MAAM,GAAGC,cAAc,CAACF,CAAC,CAAF,WAAA,EAAgBF,CAAC,CAA9C,KAA6B,CAA7B;AAEA,WAAA,MAAA,CAAA,MAAA,CAAA;AACEK,MAAAA,WAAW,EADb,aAAA;AAEEC,MAAAA,YAAY,EAAEJ,CAAC,CAFjB,YAAA;AAGEK,MAAAA,WAAW,EAAEL,CAAC,CAHhB,WAAA;AAIEM,MAAAA,WAAW,EAAEN,CAAC,CAJhB,WAAA;AAKEO,MAAAA,SAAS,EAAEP,CAAC,CALd,SAAA;AAMEQ,MAAAA,OAAO,EAAER,CAAC,CANZ,OAAA;AAOES,MAAAA,KAAK,EAAET,CAAC,CAPV,KAAA;AAQEU,MAAAA,eAAe,EAAEV,CAAC,CAACU;AARrB,KAAA,EASMZ,CAAC,CAADA,KAAAA,IAAW;AAAEK,MAAAA,WAAW,EAAEF,MAAM,CAACU;AAAtB,KATjB,EAUMb,CAAC,CAADA,QAAAA,IAAc;AAChBW,MAAAA,KAAK,EAAET,CAAC,CADQ,eAAA;AAEhBU,MAAAA,eAAe,EAAEZ,CAAC,CAADA,KAAAA,GAAUG,MAAM,CAAhBH,UAAAA,GAA8BE,CAAC,CAACS;AAFjC,KAVpB,EAcM,CAAC,CAAD,QAAA,IAAA,MAAA,CAAA,MAAA,CAAA;AACFF,MAAAA,SAAS,EADP,MAAA;AAEFJ,MAAAA,WAAW,EAAEH,CAAC,CAFZ,mBAAA;AAGFS,MAAAA,KAAK,EAAET,CAAC,CAHN,aAAA;AAIFU,MAAAA,eAAe,EAAEV,CAAC,CAACY;AAJjB,KAAA,EAKEd,CAAC,CAADA,QAAAA,IAAc;AAChBW,MAAAA,KAAK,EAAET,CAAC,CADQ,uBAAA;AAEhBU,MAAAA,eAAe,EAAEV,CAAC,CAACa;AAFH,KALhB,CAdN,CAAA;AAyBD;AA7B6F,CAAzF","sourcesContent":["import { SegmentStylesProps } from '../../../../components/Segment/Segment';\nimport { ICSSInJSStyle, ComponentSlotStylesPrepared } from '@fluentui/styles';\nimport { SegmentVariables } from './segmentVariables';\nimport { getColorScheme } from '../../colors';\n\nexport const segmentStyles: ComponentSlotStylesPrepared<SegmentStylesProps, SegmentVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const colors = getColorScheme(v.colorScheme, p.color);\n\n    return {\n      borderColor: 'transparent',\n      borderRadius: v.borderRadius,\n      borderStyle: v.borderStyle,\n      borderWidth: v.borderWidth,\n      boxShadow: v.boxShadow,\n      padding: v.padding,\n      color: v.color,\n      backgroundColor: v.backgroundColor,\n      ...(p.color && { borderColor: colors.foreground }),\n      ...(p.inverted && {\n        color: v.backgroundColor,\n        backgroundColor: p.color ? colors.foreground : v.color,\n      }),\n      ...(p.disabled && {\n        boxShadow: 'none',\n        borderColor: v.disabledBorderColor,\n        color: v.disabledColor,\n        backgroundColor: v.disabledBackgroundColor,\n        ...(p.inverted && {\n          color: v.disabledBackgroundColor,\n          backgroundColor: v.disabledColor,\n        }),\n      }),\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"module"}