{"ast":null,"code":"import { generateCSSRule, generateCSSSupportRule, getRuleScore } from 'fela-utils';\nimport insertRuleInDevMode from './insertRuleInDevMode';\nexport default function insertRule(_ref, renderer, node) {\n  var selector = _ref.selector,\n      declaration = _ref.declaration,\n      support = _ref.support,\n      media = _ref.media,\n      pseudo = _ref.pseudo;\n  var nodeReference = media + support; // only use insertRule in production as browser devtools might have\n  // weird behavior if used together with insertRule at runtime\n\n  if (renderer.devMode) {\n    insertRuleInDevMode(renderer, node);\n    return;\n  }\n\n  try {\n    var score = getRuleScore(renderer.ruleOrder, pseudo);\n    var cssRules = node.sheet.cssRules;\n    var index = cssRules.length; // This heavily optimises the amount of rule iterations we need\n    // due to most rules having a score=0 anyways\n\n    if (score === 0) {\n      if (renderer.scoreIndex[nodeReference] === undefined) {\n        index = 0;\n      } else {\n        index = renderer.scoreIndex[nodeReference] + 1;\n      }\n    } else {\n      // we start iterating from the last score=0 entry\n      // to correctly inject pseudo classes etc.\n      var startIndex = renderer.scoreIndex[nodeReference] || 0;\n\n      for (var i = startIndex, len = cssRules.length; i < len; ++i) {\n        if (cssRules[i].score > score) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    var cssRule = generateCSSRule(selector, declaration);\n\n    if (support.length > 0) {\n      var cssSupportRule = generateCSSSupportRule(support, cssRule);\n      node.sheet.insertRule(cssSupportRule, index);\n    } else {\n      node.sheet.insertRule(cssRule, index);\n    }\n\n    if (score === 0) {\n      renderer.scoreIndex[nodeReference] = index;\n    }\n\n    cssRules[index].score = score;\n  } catch (e) {// We're disabled these warnings due to false-positive errors with browser prefixes\n    // See https://github.com/rofrischmann/fela/issues/634\n    // console.warn(\n    //   `An error occurred while inserting the rules into DOM.\\n`,\n    //   declaration.replace(/;/g, ';\\n'),\n    //   e\n    // )\n  }\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/VSCODE2/communication-services-web-calling-hero/Calling/ClientApp/node_modules/fela-dom/es/dom/connection/insertRule.js"],"names":["generateCSSRule","generateCSSSupportRule","getRuleScore","insertRuleInDevMode","insertRule","_ref","renderer","node","selector","declaration","support","media","pseudo","nodeReference","devMode","score","ruleOrder","cssRules","sheet","index","length","scoreIndex","undefined","startIndex","i","len","cssRule","cssSupportRule","e"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,sBAA1B,EAAkDC,YAAlD,QAAsE,YAAtE;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,IAApC,EAA0C;AACvD,MAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;AAAA,MACIC,WAAW,GAAGJ,IAAI,CAACI,WADvB;AAAA,MAEIC,OAAO,GAAGL,IAAI,CAACK,OAFnB;AAAA,MAGIC,KAAK,GAAGN,IAAI,CAACM,KAHjB;AAAA,MAIIC,MAAM,GAAGP,IAAI,CAACO,MAJlB;AAMA,MAAIC,aAAa,GAAGF,KAAK,GAAGD,OAA5B,CAPuD,CAQvD;AACA;;AACA,MAAIJ,QAAQ,CAACQ,OAAb,EAAsB;AACpBX,IAAAA,mBAAmB,CAACG,QAAD,EAAWC,IAAX,CAAnB;AACA;AACD;;AAED,MAAI;AACF,QAAIQ,KAAK,GAAGb,YAAY,CAACI,QAAQ,CAACU,SAAV,EAAqBJ,MAArB,CAAxB;AACA,QAAIK,QAAQ,GAAGV,IAAI,CAACW,KAAL,CAAWD,QAA1B;AAGA,QAAIE,KAAK,GAAGF,QAAQ,CAACG,MAArB,CALE,CAOF;AACA;;AACA,QAAIL,KAAK,KAAK,CAAd,EAAiB;AACf,UAAIT,QAAQ,CAACe,UAAT,CAAoBR,aAApB,MAAuCS,SAA3C,EAAsD;AACpDH,QAAAA,KAAK,GAAG,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,KAAK,GAAGb,QAAQ,CAACe,UAAT,CAAoBR,aAApB,IAAqC,CAA7C;AACD;AACF,KAND,MAMO;AACL;AACA;AACA,UAAIU,UAAU,GAAGjB,QAAQ,CAACe,UAAT,CAAoBR,aAApB,KAAsC,CAAvD;;AAEA,WAAK,IAAIW,CAAC,GAAGD,UAAR,EAAoBE,GAAG,GAAGR,QAAQ,CAACG,MAAxC,EAAgDI,CAAC,GAAGC,GAApD,EAAyD,EAAED,CAA3D,EAA8D;AAC5D,YAAIP,QAAQ,CAACO,CAAD,CAAR,CAAYT,KAAZ,GAAoBA,KAAxB,EAA+B;AAC7BI,UAAAA,KAAK,GAAGK,CAAR;AACA;AACD;AACF;AACF;;AAED,QAAIE,OAAO,GAAG1B,eAAe,CAACQ,QAAD,EAAWC,WAAX,CAA7B;;AAEA,QAAIC,OAAO,CAACU,MAAR,GAAiB,CAArB,EAAwB;AACtB,UAAIO,cAAc,GAAG1B,sBAAsB,CAACS,OAAD,EAAUgB,OAAV,CAA3C;AACAnB,MAAAA,IAAI,CAACW,KAAL,CAAWd,UAAX,CAAsBuB,cAAtB,EAAsCR,KAAtC;AACD,KAHD,MAGO;AACLZ,MAAAA,IAAI,CAACW,KAAL,CAAWd,UAAX,CAAsBsB,OAAtB,EAA+BP,KAA/B;AACD;;AAED,QAAIJ,KAAK,KAAK,CAAd,EAAiB;AACfT,MAAAA,QAAQ,CAACe,UAAT,CAAoBR,aAApB,IAAqCM,KAArC;AACD;;AAEDF,IAAAA,QAAQ,CAACE,KAAD,CAAR,CAAgBJ,KAAhB,GAAwBA,KAAxB;AACD,GA1CD,CA0CE,OAAOa,CAAP,EAAU,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF","sourcesContent":["import { generateCSSRule, generateCSSSupportRule, getRuleScore } from 'fela-utils';\n\nimport insertRuleInDevMode from './insertRuleInDevMode';\n\nexport default function insertRule(_ref, renderer, node) {\n  var selector = _ref.selector,\n      declaration = _ref.declaration,\n      support = _ref.support,\n      media = _ref.media,\n      pseudo = _ref.pseudo;\n\n  var nodeReference = media + support;\n  // only use insertRule in production as browser devtools might have\n  // weird behavior if used together with insertRule at runtime\n  if (renderer.devMode) {\n    insertRuleInDevMode(renderer, node);\n    return;\n  }\n\n  try {\n    var score = getRuleScore(renderer.ruleOrder, pseudo);\n    var cssRules = node.sheet.cssRules;\n\n\n    var index = cssRules.length;\n\n    // This heavily optimises the amount of rule iterations we need\n    // due to most rules having a score=0 anyways\n    if (score === 0) {\n      if (renderer.scoreIndex[nodeReference] === undefined) {\n        index = 0;\n      } else {\n        index = renderer.scoreIndex[nodeReference] + 1;\n      }\n    } else {\n      // we start iterating from the last score=0 entry\n      // to correctly inject pseudo classes etc.\n      var startIndex = renderer.scoreIndex[nodeReference] || 0;\n\n      for (var i = startIndex, len = cssRules.length; i < len; ++i) {\n        if (cssRules[i].score > score) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    var cssRule = generateCSSRule(selector, declaration);\n\n    if (support.length > 0) {\n      var cssSupportRule = generateCSSSupportRule(support, cssRule);\n      node.sheet.insertRule(cssSupportRule, index);\n    } else {\n      node.sheet.insertRule(cssRule, index);\n    }\n\n    if (score === 0) {\n      renderer.scoreIndex[nodeReference] = index;\n    }\n\n    cssRules[index].score = score;\n  } catch (e) {\n    // We're disabled these warnings due to false-positive errors with browser prefixes\n    // See https://github.com/rofrischmann/fela/issues/634\n    // console.warn(\n    //   `An error occurred while inserting the rules into DOM.\\n`,\n    //   declaration.replace(/;/g, ';\\n'),\n    //   e\n    // )\n  }\n}"]},"metadata":{},"sourceType":"module"}