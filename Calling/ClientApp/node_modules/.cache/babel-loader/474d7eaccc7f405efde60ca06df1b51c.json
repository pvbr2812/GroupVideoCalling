{"ast":null,"code":"import _get from \"lodash/get\";\nimport _set from \"lodash/set\";\nimport _replace from \"lodash/replace\";\nimport _uniq from \"lodash/uniq\";\nimport _concat from \"lodash/concat\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isNil from \"lodash/isNil\";\nimport * as React from 'react';\nimport { DebugPanelItem } from './DebugPanelItem';\nimport { getValues, removeNulls } from './utils';\nimport { DebugComponentViewer } from './DebugComponentViewer';\nexport var DebugPanel = function DebugPanel(props) {\n  var cssStyles = props.cssStyles,\n      inputDebugData = props.debugData,\n      fiberNav = props.fiberNav,\n      onActivateDebugSelectorClick = props.onActivateDebugSelectorClick,\n      onClose = props.onClose,\n      position = props.position,\n      onPositionLeft = props.onPositionLeft,\n      onPositionRight = props.onPositionRight,\n      onFiberChanged = props.onFiberChanged,\n      onFiberSelected = props.onFiberSelected;\n\n  var _React$useState = React.useState('root'),\n      slot = _React$useState[0],\n      setSlot = _React$useState[1];\n\n  var left = position === 'left';\n  var debugData = _isNil(inputDebugData) || _isEmpty(inputDebugData) ? {\n    componentStyles: {},\n    componentVariables: [],\n    siteVariables: []\n  } : inputDebugData;\n  debugData.componentStyles = debugData.componentStyles || {};\n  debugData.componentVariables = debugData.componentVariables || [];\n  debugData.siteVariables = debugData.siteVariables || [];\n  var styleSlots = Object.keys(debugData.componentStyles);\n  var siteVariablesUsedInComponentVariables = [];\n  debugData.componentVariables.map(function (val) {\n    return val.input;\n  }).forEach(function (val) {\n    return siteVariablesUsedInComponentVariables = _concat(siteVariablesUsedInComponentVariables, getValues(val, function (val) {\n      return val.indexOf('siteVariables.') > -1;\n    }));\n  });\n\n  var uniqUsedSiteVariables = _uniq(siteVariablesUsedInComponentVariables);\n\n  var siteVariablesDataWithNulls = debugData.siteVariables.map(function (val) {\n    return Object.assign({}, val, {\n      resolved: uniqUsedSiteVariables.reduce(function (acc, next) {\n        var key = _replace(next, 'siteVariables.', '');\n\n        _set(acc, key, _get(val['resolved'], key));\n\n        return acc;\n      }, {})\n    });\n  });\n  var siteVariablesData = siteVariablesDataWithNulls.map(function (val) {\n    return Object.assign({}, val, {\n      resolved: removeNulls(val.resolved)\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanelRoot(left)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanelHeader\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    onClick: onActivateDebugSelectorClick,\n    style: debugPanelArrowIcon\n  }, \"\\u21F1\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    style: debugPanelIcon(true, left),\n    onClick: onPositionLeft\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    style: debugPanelIcon(false, left),\n    onClick: onPositionRight\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    onClick: onClose,\n    style: debugPanelCloseIcon\n  }, \"\\u2715\"))), /*#__PURE__*/React.createElement(DebugComponentViewer, {\n    fiberNav: fiberNav,\n    onFiberChanged: onFiberChanged,\n    onFiberSelected: onFiberSelected\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanelBody\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugHeaderContainer()\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugHeader()\n  }, \"Styles\"), !_isEmpty(debugData.componentStyles) && /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanelSelectContainer()\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: slot,\n    onChange: function onChange(e) {\n      return setSlot(e.target.value);\n    }\n  }, styleSlots.map(function (val) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: val,\n      key: val\n    }, \"Slot: \", val);\n  })))), !_isEmpty(debugData.componentStyles) ? /*#__PURE__*/React.createElement(DebugPanelItem, {\n    data: debugData.componentStyles[slot],\n    valueKey: \"styles\",\n    idKey: \"debugId\"\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: debugNoData()\n  }, \"None in use\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugHeaderContainer()\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugHeader()\n  }, \"Variables\")), !_isEmpty(debugData.componentVariables) ? /*#__PURE__*/React.createElement(DebugPanelItem, {\n    data: debugData.componentVariables,\n    valueKey: \"resolved\",\n    idKey: \"debugId\",\n    commentKey: \"input\",\n    commentKeyPredicate: function commentKeyPredicate(val) {\n      return typeof val === 'string' && val.indexOf('siteVariables.') > -1;\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: debugNoData()\n  }, \"None in use\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugHeaderContainer()\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugHeader()\n  }, \"Site variables\")), !_isEmpty(siteVariablesData) && !_isEmpty(uniqUsedSiteVariables) ? /*#__PURE__*/React.createElement(DebugPanelItem, {\n    data: siteVariablesData,\n    valueKey: \"resolved\",\n    idKey: \"debugId\"\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: debugNoData()\n  }, \"None in use\"))), !_isEmpty(cssStyles) && /*#__PURE__*/React.createElement(\"div\", {\n    style: debugPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: debugHeader()\n  }, \"HTML Styles\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      clear: 'both'\n    }\n  }, cssStyles.map(function (l) {\n    return /*#__PURE__*/React.createElement(\"pre\", {\n      key: l\n    }, l);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '50px 0'\n    }\n  })));\n};\nvar debugPanelHeader = {\n  position: 'sticky',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: '2px 2px 4px',\n  top: '0',\n  background: '#f3f3f3',\n  zIndex: 1\n};\nvar commonIconStyle = {\n  display: 'inline-block',\n  cursor: 'pointer',\n  color: '#555',\n  lineHeight: 1,\n  margin: '0 4px'\n};\nvar debugPanelCloseIcon = Object.assign({}, commonIconStyle, {\n  fontSize: '20px',\n  outline: '0',\n  cursor: 'pointer'\n});\nvar debugPanelArrowIcon = Object.assign({}, commonIconStyle, {\n  fontSize: '24px',\n  marginTop: '-4px',\n  outline: '0'\n});\n\nvar debugPanelIcon = function debugPanelIcon(left, isLeftActive) {\n  var _Object$assign;\n\n  return Object.assign({}, commonIconStyle, (_Object$assign = {\n    borderWidth: '2px',\n    borderStyle: 'solid ',\n    borderColor: '#555'\n  }, _Object$assign[left ? 'borderLeftWidth' : 'borderRightWidth'] = '6px', _Object$assign.width = '16px', _Object$assign.height = '14px', _Object$assign), left === isLeftActive && {\n    borderColor: '#6495ed'\n  });\n};\n\nvar debugPanelRoot = function debugPanelRoot(left) {\n  var _ref;\n\n  return _ref = {\n    position: 'fixed'\n  }, _ref[left ? 'left' : 'right'] = 0, _ref.top = 0, _ref.zIndex = 999999999, _ref.width = '350px', _ref.height = '100vh', _ref.color = '#313941', _ref.background = '#fff', _ref.lineHeight = 1.1, _ref.fontSize = '12px', _ref.overflowY = 'scroll', _ref[left ? 'borderRight' : 'borderLeft'] = '1px solid rgba(0, 0, 0, 0.2)', _ref.boxShadow = '0 0 8px rgba(0, 0, 0, .1)', _ref;\n};\n\nvar debugHeaderContainer = function debugHeaderContainer() {\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '8px',\n    margin: '0 -4px 4px',\n    overflow: 'hidden',\n    background: '#f3f3f3',\n    borderTop: '1px solid #d0d0d0',\n    borderBottom: '1px solid #d0d0d0'\n  };\n};\n\nvar debugHeader = function debugHeader() {\n  return {\n    fontSize: '14px',\n    fontWeight: 'bold'\n  };\n};\n\nvar debugNoData = function debugNoData() {\n  return {\n    padding: '8px',\n    color: 'rgba(0, 0, 0, 0.75)',\n    textAlign: 'center',\n    background: 'rgba(0, 0, 0, 0.05)',\n    marginBottom: '4px'\n  };\n};\n\nvar debugPanelSelectContainer = function debugPanelSelectContainer() {\n  return {\n    width: 'auto'\n  };\n};\n\nvar debugPanelBody = {\n  overflowWrap: 'break-word',\n  wordWrap: 'break-word',\n  wordBreak: 'break-all',\n  hyphens: 'auto'\n};\nvar debugPanel = {\n  padding: '0 4px'\n};","map":{"version":3,"sources":["components/Debug/DebugPanel.tsx"],"names":["DebugPanel","cssStyles","inputDebugData","fiberNav","onActivateDebugSelectorClick","onClose","position","onPositionLeft","onPositionRight","onFiberChanged","onFiberSelected","props","slot","setSlot","React","left","debugData","componentStyles","componentVariables","siteVariables","styleSlots","Object","siteVariablesUsedInComponentVariables","val","getValues","uniqUsedSiteVariables","siteVariablesDataWithNulls","resolved","key","siteVariablesData","removeNulls","debugPanelRoot","debugPanelHeader","debugPanelArrowIcon","float","debugPanelIcon","debugPanelCloseIcon","debugPanelBody","debugPanel","debugHeaderContainer","debugHeader","debugPanelSelectContainer","e","debugNoData","clear","l","padding","display","justifyContent","alignItems","top","background","zIndex","commonIconStyle","cursor","color","lineHeight","margin","fontSize","outline","marginTop","borderWidth","borderStyle","borderColor","overflow","borderTop","borderBottom","fontWeight","textAlign","marginBottom","width","overflowWrap","wordWrap","wordBreak","hyphens"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DebugPanelItem } from './DebugPanelItem';\nimport { FiberNavigator } from './FiberNavigator';\nimport { getValues, removeNulls } from './utils';\nimport { DebugComponentViewer } from './DebugComponentViewer';\n\nexport type DebugPanelProps = {\n  cssStyles?: string[];\n  fiberNav: FiberNavigator;\n  debugData: {\n    componentStyles: { [key: string]: { styles: any; debugId: string } };\n    componentVariables: {\n      input: { [key: string]: any };\n      resolved: { [key: string]: any };\n    }[];\n    siteVariables: object[];\n  };\n  onActivateDebugSelectorClick: (e) => void;\n  onClose: (e) => void;\n  onPositionLeft: (e) => void;\n  onPositionRight: (e) => void;\n  position: 'left' | 'right';\n  onFiberChanged: (fiberNav: FiberNavigator) => void;\n  onFiberSelected: (fiberNav: FiberNavigator) => void;\n};\n\nexport const DebugPanel: React.FC<DebugPanelProps> = props => {\n  const {\n    cssStyles,\n    debugData: inputDebugData,\n    fiberNav,\n    onActivateDebugSelectorClick,\n    onClose,\n    position,\n    onPositionLeft,\n    onPositionRight,\n    onFiberChanged,\n    onFiberSelected,\n  } = props;\n\n  const [slot, setSlot] = React.useState('root');\n\n  const left = position === 'left';\n\n  const debugData =\n    _.isNil(inputDebugData) || _.isEmpty(inputDebugData)\n      ? {\n          componentStyles: {},\n          componentVariables: [],\n          siteVariables: [],\n        }\n      : inputDebugData;\n\n  debugData.componentStyles = debugData.componentStyles || {};\n  debugData.componentVariables = debugData.componentVariables || [];\n  debugData.siteVariables = debugData.siteVariables || [];\n\n  const styleSlots = Object.keys(debugData.componentStyles);\n  let siteVariablesUsedInComponentVariables = [];\n\n  debugData.componentVariables\n    .map(val => val.input)\n    .forEach(\n      val =>\n        (siteVariablesUsedInComponentVariables = _.concat(\n          siteVariablesUsedInComponentVariables,\n          getValues(val, val => val.indexOf('siteVariables.') > -1),\n        )),\n    );\n\n  const uniqUsedSiteVariables = _.uniq(siteVariablesUsedInComponentVariables);\n  const siteVariablesDataWithNulls = debugData.siteVariables.map(val => ({\n    ...val,\n    resolved: uniqUsedSiteVariables.reduce((acc, next) => {\n      const key = _.replace(next, 'siteVariables.', '');\n      _.set(acc, key, _.get(val['resolved'], key));\n      return acc;\n    }, {}),\n  }));\n\n  const siteVariablesData = siteVariablesDataWithNulls.map(val => ({\n    ...val,\n    resolved: removeNulls(val.resolved),\n  }));\n\n  return (\n    <div>\n      <div style={debugPanelRoot(left)}>\n        <div style={debugPanelHeader}>\n          <div tabIndex={0} onClick={onActivateDebugSelectorClick} style={debugPanelArrowIcon}>\n            ⇱\n          </div>\n          <div style={{ float: 'right' }}>\n            <div tabIndex={0} style={debugPanelIcon(true, left)} onClick={onPositionLeft} />\n            <div tabIndex={0} style={debugPanelIcon(false, left)} onClick={onPositionRight} />\n            <div tabIndex={0} onClick={onClose} style={debugPanelCloseIcon}>\n              ✕\n            </div>\n          </div>\n        </div>\n\n        <DebugComponentViewer fiberNav={fiberNav} onFiberChanged={onFiberChanged} onFiberSelected={onFiberSelected} />\n\n        <div style={debugPanelBody}>\n          {/* Styles */}\n\n          <div style={debugPanel}>\n            <div style={debugHeaderContainer()}>\n              <div style={debugHeader()}>Styles</div>\n              {!_.isEmpty(debugData.componentStyles) && (\n                <div style={debugPanelSelectContainer()}>\n                  <select value={slot} onChange={e => setSlot(e.target.value)}>\n                    {styleSlots.map(val => (\n                      <option value={val} key={val}>\n                        Slot: {val}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n            {!_.isEmpty(debugData.componentStyles) ? (\n              <DebugPanelItem data={debugData.componentStyles[slot]} valueKey=\"styles\" idKey=\"debugId\" />\n            ) : (\n              <div style={debugNoData()}>None in use</div>\n            )}\n          </div>\n\n          {/* Component Variables */}\n\n          <div style={debugPanel}>\n            <div style={debugHeaderContainer()}>\n              <div style={debugHeader()}>Variables</div>\n            </div>\n            {!_.isEmpty(debugData.componentVariables) ? (\n              <DebugPanelItem\n                data={debugData.componentVariables}\n                valueKey=\"resolved\"\n                idKey=\"debugId\"\n                commentKey=\"input\"\n                commentKeyPredicate={val => typeof val === 'string' && val.indexOf('siteVariables.') > -1}\n              />\n            ) : (\n              <div style={debugNoData()}>None in use</div>\n            )}\n          </div>\n\n          {/* Site Variables */}\n\n          <div style={debugPanel}>\n            <div style={debugHeaderContainer()}>\n              <div style={debugHeader()}>Site variables</div>\n            </div>\n            {!_.isEmpty(siteVariablesData) && !_.isEmpty(uniqUsedSiteVariables) ? (\n              <DebugPanelItem data={siteVariablesData} valueKey=\"resolved\" idKey=\"debugId\" />\n            ) : (\n              <div style={debugNoData()}>None in use</div>\n            )}\n          </div>\n        </div>\n\n        {!_.isEmpty(cssStyles) && (\n          <div style={debugPanel}>\n            <div style={debugHeader()}>HTML Styles</div>\n            <div style={{ clear: 'both' }}>\n              {cssStyles.map(l => (\n                <pre key={l}>{l}</pre>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div style={{ padding: '50px 0' }} />\n      </div>\n    </div>\n  );\n};\n\nconst debugPanelHeader: React.CSSProperties = {\n  position: 'sticky',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: '2px 2px 4px',\n  top: '0',\n  background: '#f3f3f3',\n  zIndex: 1,\n};\n\nconst commonIconStyle: React.CSSProperties = {\n  display: 'inline-block',\n  cursor: 'pointer',\n  color: '#555',\n  lineHeight: 1,\n  margin: '0 4px',\n};\n\nconst debugPanelCloseIcon: React.CSSProperties = {\n  ...commonIconStyle,\n  fontSize: '20px',\n  outline: '0',\n  cursor: 'pointer',\n};\n\nconst debugPanelArrowIcon: React.CSSProperties = {\n  ...commonIconStyle,\n  fontSize: '24px',\n  marginTop: '-4px',\n  outline: '0',\n};\n\nconst debugPanelIcon = (left, isLeftActive): React.CSSProperties => ({\n  ...commonIconStyle,\n  borderWidth: '2px',\n  borderStyle: 'solid ',\n  borderColor: '#555',\n  [left ? 'borderLeftWidth' : 'borderRightWidth']: '6px',\n  width: '16px',\n  height: '14px',\n  ...(left === isLeftActive && {\n    borderColor: '#6495ed',\n  }),\n});\n\nconst debugPanelRoot = (left): React.CSSProperties => ({\n  position: 'fixed',\n  [left ? 'left' : 'right']: 0,\n  top: 0,\n  zIndex: 999999999,\n  width: '350px',\n  height: '100vh',\n  color: '#313941',\n  background: '#fff',\n  lineHeight: 1.1,\n  fontSize: '12px',\n  overflowY: 'scroll',\n  [left ? 'borderRight' : 'borderLeft']: '1px solid rgba(0, 0, 0, 0.2)',\n  boxShadow: '0 0 8px rgba(0, 0, 0, .1)',\n});\n\nconst debugHeaderContainer = (): React.CSSProperties => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: '8px',\n  margin: '0 -4px 4px',\n  overflow: 'hidden',\n  background: '#f3f3f3',\n  borderTop: '1px solid #d0d0d0',\n  borderBottom: '1px solid #d0d0d0',\n});\n\nconst debugHeader = (): React.CSSProperties => ({\n  fontSize: '14px',\n  fontWeight: 'bold',\n});\n\nconst debugNoData = (): React.CSSProperties => ({\n  padding: '8px',\n  color: 'rgba(0, 0, 0, 0.75)',\n  textAlign: 'center',\n  background: 'rgba(0, 0, 0, 0.05)',\n  marginBottom: '4px',\n});\n\nconst debugPanelSelectContainer = (): React.CSSProperties => ({\n  width: 'auto',\n});\n\nconst debugPanelBody: React.CSSProperties = {\n  overflowWrap: 'break-word',\n  wordWrap: 'break-word',\n  wordBreak: 'break-all',\n  hyphens: 'auto',\n};\n\nconst debugPanel: React.CSSProperties = {\n  padding: '0 4px',\n};\n"]},"metadata":{},"sourceType":"module"}