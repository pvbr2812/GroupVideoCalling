{"ast":null,"code":"import { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Box } from '../Box/Box';\nexport var attachmentIconClassName = 'ui-attachment__icon';\n/**\n * An AttachmentIcon provides a slot for a glyph that describes content in the Attachment.\n */\n\nexport var AttachmentIcon = /*#__PURE__*/function () {\n  var AttachmentIcon = compose(Box, {\n    className: attachmentIconClassName,\n    displayName: 'AttachmentIcon',\n    overrideStyles: true,\n    shorthandConfig: {\n      mappedProp: 'content'\n    }\n  });\n  AttachmentIcon.defaultProps = {\n    as: 'span'\n  };\n  AttachmentIcon.propTypes = commonPropTypes.createCommon();\n  return AttachmentIcon;\n}();","map":{"version":3,"sources":["components/Attachment/AttachmentIcon.tsx"],"names":["attachmentIconClassName","AttachmentIcon","compose","className","displayName","overrideStyles","shorthandConfig","mappedProp","as","commonPropTypes"],"mappings":"AAAA,SAAA,OAAA,QAAA,0BAAA;AACA,SAAA,eAAA,QAAA,aAAA;AACA,SAAA,GAAA,QAAA,YAAA;AAMA,OAAO,IAAMA,uBAAuB,GAA7B,qBAAA;AAEP;;;;AAGA,OAAO,IAAMC,cAAN,GAAA,aAAA,YAAA;AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAA,GAAA,EAM9B;AACLC,IAAAA,SAAS,EADJ,uBAAA;AAELC,IAAAA,WAAW,EAFN,gBAAA;AAILC,IAAAA,cAAc,EAJT,IAAA;AAKLC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG;AALZ,GAN8B,CAA9B;AAgBPN,EAAAA,cAAc,CAAdA,YAAAA,GAA8B;AAC5BO,IAAAA,EAAE,EAAE;AADwB,GAA9BP;AAGAA,EAAAA,cAAc,CAAdA,SAAAA,GAA2BQ,eAAe,CAA1CR,YAA2BQ,EAA3BR;AAnBO,SAAA,cAAA;AAAA,CAAA,EAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps, BoxStylesProps } from '../Box/Box';\n\nexport interface AttachmentIconOwnProps {}\nexport interface AttachmentIconProps extends AttachmentIconOwnProps, BoxProps {}\n\nexport type AttachmentIconStylesProps = never;\nexport const attachmentIconClassName = 'ui-attachment__icon';\n\n/**\n * An AttachmentIcon provides a slot for a glyph that describes content in the Attachment.\n */\nexport const AttachmentIcon = compose<\n  'span',\n  AttachmentIconOwnProps,\n  AttachmentIconStylesProps,\n  BoxProps,\n  BoxStylesProps\n>(Box, {\n  className: attachmentIconClassName,\n  displayName: 'AttachmentIcon',\n\n  overrideStyles: true,\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nAttachmentIcon.defaultProps = {\n  as: 'span',\n};\nAttachmentIcon.propTypes = commonPropTypes.createCommon();\n"]},"metadata":{},"sourceType":"module"}