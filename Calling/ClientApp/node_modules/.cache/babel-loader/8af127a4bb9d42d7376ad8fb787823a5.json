{"ast":null,"code":"import _noop from \"lodash/noop\";\nimport _isBoolean from \"lodash/isBoolean\";\nimport _isFunction from \"lodash/isFunction\";\nimport _forEach from \"lodash/forEach\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport { getElementType, useUnhandledProps, RendererContext, Telemetry, useFluentContext, unstable_getStyles, useIsomorphicLayoutEffect, Unstable_FluentContextProvider } from '@fluentui/react-bindings';\nimport { mergeSiteVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { setUpWhatInput, tryCleanupWhatInput } from '../../utils';\nimport { mergeProviderContexts } from '../../utils/mergeProviderContexts';\nimport { ProviderConsumer } from './ProviderConsumer';\nimport { usePortalBox, PortalBoxContext } from './usePortalBox';\n\nvar renderFontFaces = function renderFontFaces(renderer, theme) {\n  if (!theme.fontFaces) {\n    return;\n  }\n\n  var renderFontObject = function renderFontObject(font) {\n    if (!_isPlainObject(font)) {\n      throw new Error(\"fontFaces must be objects, got: \" + typeof font);\n    }\n\n    renderer.renderFont(font);\n  };\n\n  theme.fontFaces.forEach(function (font) {\n    renderFontObject(font);\n  });\n};\n\nvar renderStaticStyles = function renderStaticStyles(renderer, theme, siteVariables) {\n  if (!theme.staticStyles) {\n    return;\n  }\n\n  var renderObject = function renderObject(object) {\n    _forEach(object, function (style, selector) {\n      renderer.renderGlobal(style, selector);\n    });\n  };\n\n  theme.staticStyles.forEach(function (staticStyle) {\n    if (typeof staticStyle === 'string') {\n      renderer.renderGlobal(staticStyle);\n    } else if (_isPlainObject(staticStyle)) {\n      renderObject(staticStyle);\n    } else if (_isFunction(staticStyle)) {\n      var preparedSiteVariables = mergeSiteVariables(siteVariables);\n      renderObject(staticStyle(preparedSiteVariables));\n    } else {\n      throw new Error(\"staticStyles array must contain CSS strings, style objects, or style functions, got: \" + typeof staticStyle);\n    }\n  });\n};\n\nexport var providerClassName = 'ui-provider';\n/**\n * The Provider passes the CSS-in-JS renderer, theme styles and other settings to Fluent UI components.\n */\n\nexport var Provider = /*#__PURE__*/function () {\n  var Provider = function Provider(props) {\n    var children = props.children,\n        className = props.className,\n        design = props.design,\n        overwrite = props.overwrite,\n        styles = props.styles,\n        variables = props.variables,\n        telemetryRef = props.telemetryRef;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(Provider.handledProps, props);\n    var telemetry = React.useMemo(function () {\n      if (!telemetryRef) {\n        return undefined;\n      }\n\n      if (!telemetryRef.current) {\n        telemetryRef.current = new Telemetry();\n      }\n\n      return telemetryRef.current;\n    }, [telemetryRef]);\n    var inputContext = {\n      disableAnimations: props.disableAnimations,\n      performance: props.performance,\n      rtl: props.rtl,\n      target: props.target,\n      telemetry: telemetry,\n      theme: props.theme\n    };\n    var consumedContext = useFluentContext();\n    var incomingContext = overwrite ? {} : consumedContext;\n    var createRenderer = React.useContext(RendererContext);\n    var outgoingContext = mergeProviderContexts(createRenderer, incomingContext, inputContext);\n    var rtlProps = {}; // only add dir attribute for top level provider or when direction changes from parent to child\n\n    if (consumedContext.rtl !== outgoingContext.rtl && _isBoolean(outgoingContext.rtl)) {\n      rtlProps.dir = outgoingContext.rtl ? 'rtl' : 'ltr';\n    }\n\n    var _unstable_getStyles = unstable_getStyles({\n      allDisplayNames: [Provider.displayName],\n      className: providerClassName,\n      primaryDisplayName: Provider.displayName,\n      componentProps: {},\n      inlineStylesProps: {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      },\n      disableAnimations: outgoingContext.disableAnimations,\n      performance: outgoingContext.performance,\n      renderer: outgoingContext.renderer,\n      rtl: outgoingContext.rtl,\n      theme: outgoingContext.theme,\n      saveDebug: _noop,\n      telemetry: undefined\n    }),\n        classes = _unstable_getStyles.classes;\n\n    var element = usePortalBox({\n      className: classes.root,\n      target: outgoingContext.target,\n      rtl: outgoingContext.rtl\n    });\n    useIsomorphicLayoutEffect(function () {\n      renderFontFaces(outgoingContext.renderer, props.theme);\n      renderStaticStyles(outgoingContext.renderer, props.theme, outgoingContext.theme.siteVariables);\n\n      if (props.target) {\n        setUpWhatInput(props.target);\n      }\n\n      outgoingContext.renderer.registerUsage();\n      return function () {\n        if (props.target) {\n          tryCleanupWhatInput(props.target);\n        }\n\n        outgoingContext.renderer.unregisterUsage();\n      };\n    }, []); // do not spread anything - React.Fragment can only have `key` and `children` props\n\n    var elementProps = ElementType === React.Fragment ? {} : Object.assign({\n      className: classes.root\n    }, rtlProps, unhandledProps);\n    var RenderProvider = outgoingContext.renderer.Provider;\n    return /*#__PURE__*/React.createElement(RenderProvider, null, /*#__PURE__*/React.createElement(Unstable_FluentContextProvider, {\n      value: outgoingContext\n    }, /*#__PURE__*/React.createElement(PortalBoxContext.Provider, {\n      value: element\n    }, /*#__PURE__*/React.createElement(ElementType, elementProps, children))));\n  };\n\n  Provider.displayName = 'Provider';\n  Provider.defaultProps = {\n    theme: {}\n  };\n  Provider.propTypes = {\n    as: PropTypes.elementType,\n    design: PropTypes.object,\n    variables: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    theme: PropTypes.shape({\n      siteVariables: PropTypes.object,\n      componentVariables: PropTypes.object,\n      componentStyles: PropTypes.object,\n      fontFaces: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        paths: PropTypes.arrayOf(PropTypes.string),\n        style: PropTypes.shape({\n          fontStretch: PropTypes.string,\n          fontStyle: PropTypes.string,\n          fontVariant: PropTypes.string,\n          fontWeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n          localAlias: PropTypes.string,\n          unicodeRange: PropTypes.string\n        })\n      })),\n      staticStyles: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])),\n      animations: PropTypes.object\n    }),\n    rtl: PropTypes.bool,\n    disableAnimations: PropTypes.bool,\n    // Heads Up!\n    // Keep in sync with packages/react-bindings/src/styles/types.ts\n    performance: PropTypes.shape({\n      enableSanitizeCssPlugin: PropTypes.bool,\n      enableStylesCaching: PropTypes.bool,\n      enableVariablesCaching: PropTypes.bool\n    }),\n    children: PropTypes.node.isRequired,\n    overwrite: PropTypes.bool,\n    target: PropTypes.object,\n    telemetryRef: PropTypes.object\n  };\n  Provider.handledProps = Object.keys(Provider.propTypes);\n  Provider.Consumer = ProviderConsumer;\n  return Provider;\n}();","map":{"version":3,"sources":["components/Provider/Provider.tsx"],"names":["renderFontFaces","theme","renderFontObject","renderer","renderStaticStyles","renderObject","preparedSiteVariables","mergeSiteVariables","staticStyle","providerClassName","Provider","children","className","design","overwrite","styles","variables","telemetryRef","props","ElementType","getElementType","unhandledProps","useUnhandledProps","telemetry","inputContext","disableAnimations","performance","rtl","target","consumedContext","useFluentContext","incomingContext","createRenderer","React","outgoingContext","mergeProviderContexts","rtlProps","classes","unstable_getStyles","allDisplayNames","primaryDisplayName","componentProps","inlineStylesProps","saveDebug","undefined","element","usePortalBox","useIsomorphicLayoutEffect","setUpWhatInput","tryCleanupWhatInput","elementProps","root","RenderProvider","as","PropTypes","siteVariables","componentVariables","componentStyles","fontFaces","name","paths","style","fontStretch","fontStyle","fontVariant","fontWeight","localAlias","unicodeRange","string","staticStyles","animations","object","enableSanitizeCssPlugin","enableStylesCaching","enableVariablesCaching","bool","Object"],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  StylesContextPerformanceInput,\n  RendererContext,\n  ProviderContextInput,\n  ProviderContextPrepared,\n  Telemetry,\n  useFluentContext,\n  unstable_getStyles,\n  useIsomorphicLayoutEffect,\n  Unstable_FluentContextProvider,\n} from '@fluentui/react-bindings';\nimport { Renderer } from '@fluentui/react-northstar-styles-renderer';\nimport {\n  mergeSiteVariables,\n  StaticStyleObject,\n  StaticStyle,\n  StaticStyleFunction,\n  FontFace,\n  ThemeInput,\n  SiteVariablesPrepared,\n} from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ChildrenComponentProps, setUpWhatInput, tryCleanupWhatInput, UIComponentProps } from '../../utils';\n\nimport { mergeProviderContexts } from '../../utils/mergeProviderContexts';\nimport { ProviderConsumer } from './ProviderConsumer';\nimport { usePortalBox, PortalBoxContext } from './usePortalBox';\n\nexport interface ProviderProps extends ChildrenComponentProps, UIComponentProps {\n  rtl?: boolean;\n  disableAnimations?: boolean;\n  performance?: StylesContextPerformanceInput;\n  overwrite?: boolean;\n  target?: Document;\n  theme?: ThemeInput;\n  telemetryRef?: React.MutableRefObject<Telemetry>;\n}\n\nconst renderFontFaces = (renderer: Renderer, theme: ThemeInput) => {\n  if (!theme.fontFaces) {\n    return;\n  }\n\n  const renderFontObject = (font: FontFace) => {\n    if (!_.isPlainObject(font)) {\n      throw new Error(`fontFaces must be objects, got: ${typeof font}`);\n    }\n\n    renderer.renderFont(font);\n  };\n\n  theme.fontFaces.forEach((font: FontFace) => {\n    renderFontObject(font);\n  });\n};\n\nconst renderStaticStyles = (renderer: Renderer, theme: ThemeInput, siteVariables: SiteVariablesPrepared) => {\n  if (!theme.staticStyles) {\n    return;\n  }\n\n  const renderObject = (object: StaticStyleObject) => {\n    _.forEach(object, (style, selector) => {\n      renderer.renderGlobal(style, selector);\n    });\n  };\n\n  theme.staticStyles.forEach((staticStyle: StaticStyle) => {\n    if (typeof staticStyle === 'string') {\n      renderer.renderGlobal(staticStyle);\n    } else if (_.isPlainObject(staticStyle)) {\n      renderObject(staticStyle as StaticStyleObject);\n    } else if (_.isFunction(staticStyle)) {\n      const preparedSiteVariables = mergeSiteVariables(siteVariables);\n      renderObject((staticStyle as StaticStyleFunction)(preparedSiteVariables));\n    } else {\n      throw new Error(\n        `staticStyles array must contain CSS strings, style objects, or style functions, got: ${typeof staticStyle}`,\n      );\n    }\n  });\n};\n\nexport const providerClassName = 'ui-provider';\n\n/**\n * The Provider passes the CSS-in-JS renderer, theme styles and other settings to Fluent UI components.\n */\nexport const Provider: ComponentWithAs<'div', ProviderProps> & {\n  Consumer: typeof ProviderConsumer;\n  handledProps: (keyof ProviderProps)[];\n} = props => {\n  const { children, className, design, overwrite, styles, variables, telemetryRef } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Provider.handledProps, props);\n\n  const telemetry = React.useMemo<Telemetry | undefined>(() => {\n    if (!telemetryRef) {\n      return undefined;\n    }\n\n    if (!telemetryRef.current) {\n      telemetryRef.current = new Telemetry();\n    }\n\n    return telemetryRef.current;\n  }, [telemetryRef]);\n  const inputContext: ProviderContextInput = {\n    disableAnimations: props.disableAnimations,\n    performance: props.performance,\n    rtl: props.rtl,\n    target: props.target,\n    telemetry,\n    theme: props.theme,\n  };\n\n  const consumedContext = useFluentContext();\n  const incomingContext: ProviderContextInput | ProviderContextPrepared = overwrite ? {} : consumedContext;\n  const createRenderer = React.useContext(RendererContext);\n\n  const outgoingContext = mergeProviderContexts(createRenderer, incomingContext, inputContext);\n\n  const rtlProps: { dir?: 'rtl' | 'ltr' } = {};\n  // only add dir attribute for top level provider or when direction changes from parent to child\n  if (consumedContext.rtl !== outgoingContext.rtl && _.isBoolean(outgoingContext.rtl)) {\n    rtlProps.dir = outgoingContext.rtl ? 'rtl' : 'ltr';\n  }\n\n  const { classes } = unstable_getStyles({\n    allDisplayNames: [Provider.displayName],\n    className: providerClassName,\n    primaryDisplayName: Provider.displayName,\n    componentProps: {},\n    inlineStylesProps: {\n      className,\n      design,\n      styles,\n      variables,\n    },\n\n    disableAnimations: outgoingContext.disableAnimations,\n    performance: outgoingContext.performance,\n    renderer: outgoingContext.renderer,\n    rtl: outgoingContext.rtl,\n    theme: outgoingContext.theme,\n    saveDebug: _.noop,\n    telemetry: undefined,\n  });\n\n  const element = usePortalBox({\n    className: classes.root,\n    target: outgoingContext.target,\n    rtl: outgoingContext.rtl,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    renderFontFaces(outgoingContext.renderer, props.theme);\n    renderStaticStyles(outgoingContext.renderer, props.theme, outgoingContext.theme.siteVariables);\n\n    if (props.target) {\n      setUpWhatInput(props.target);\n    }\n\n    outgoingContext.renderer.registerUsage();\n\n    return () => {\n      if (props.target) {\n        tryCleanupWhatInput(props.target);\n      }\n\n      outgoingContext.renderer.unregisterUsage();\n    };\n  }, []);\n\n  // do not spread anything - React.Fragment can only have `key` and `children` props\n  const elementProps =\n    ElementType === React.Fragment\n      ? {}\n      : {\n          className: classes.root,\n          ...rtlProps,\n          ...unhandledProps,\n        };\n  const RenderProvider = outgoingContext.renderer.Provider;\n\n  return (\n    <RenderProvider>\n      <Unstable_FluentContextProvider value={outgoingContext}>\n        <PortalBoxContext.Provider value={element}>\n          <ElementType {...elementProps}>{children}</ElementType>\n        </PortalBoxContext.Provider>\n      </Unstable_FluentContextProvider>\n    </RenderProvider>\n  );\n};\n\nProvider.displayName = 'Provider';\n\nProvider.defaultProps = {\n  theme: {},\n};\nProvider.propTypes = {\n  as: PropTypes.elementType,\n  design: PropTypes.object,\n  variables: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  theme: PropTypes.shape({\n    siteVariables: PropTypes.object,\n    componentVariables: PropTypes.object,\n    componentStyles: PropTypes.object,\n    fontFaces: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        paths: PropTypes.arrayOf(PropTypes.string),\n        style: PropTypes.shape({\n          fontStretch: PropTypes.string,\n          fontStyle: PropTypes.string,\n          fontVariant: PropTypes.string,\n          fontWeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n          localAlias: PropTypes.string,\n          unicodeRange: PropTypes.string,\n        }),\n      }),\n    ),\n    staticStyles: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])),\n    animations: PropTypes.object,\n  }),\n  rtl: PropTypes.bool,\n  disableAnimations: PropTypes.bool,\n  // Heads Up!\n  // Keep in sync with packages/react-bindings/src/styles/types.ts\n  performance: PropTypes.shape({\n    enableSanitizeCssPlugin: PropTypes.bool,\n    enableStylesCaching: PropTypes.bool,\n    enableVariablesCaching: PropTypes.bool,\n  }),\n  children: PropTypes.node.isRequired,\n  overwrite: PropTypes.bool,\n  target: PropTypes.object as PropTypes.Validator<Document>,\n  telemetryRef: PropTypes.object as PropTypes.Validator<React.MutableRefObject<Telemetry>>,\n};\nProvider.handledProps = Object.keys(Provider.propTypes) as any;\n\nProvider.Consumer = ProviderConsumer;\n"]},"metadata":{},"sourceType":"module"}