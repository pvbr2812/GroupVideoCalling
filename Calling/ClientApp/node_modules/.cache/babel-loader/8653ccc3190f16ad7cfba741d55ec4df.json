{"ast":null,"code":"import { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { getIconFillOrOutlineStyles } from '../../getIconFillOrOutlineStyles';\nimport { toggleIndicatorUrl } from './toggleIndicatorUrl';\n\nvar getIndicatorStyles = function getIndicatorStyles(color, outline, size) {\n  return {\n    content: '\"\"',\n    width: size,\n    height: size,\n    backgroundImage: toggleIndicatorUrl(color, outline),\n    backgroundRepeat: 'no-repeat'\n  };\n};\n\nexport var splitButtonToggleStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables,\n        theme = _ref.theme;\n    var siteVariables = theme.siteVariables;\n    var borderWidth = siteVariables.borderWidth;\n    var borderFocusStyles = getBorderFocusStyles({\n      variables: {\n        borderRadius: v.focusBorderRadius,\n        borderWidth: v.focusBorderWidth,\n        focusInnerBorderColor: v.focusInnerBorderColor,\n        focusOuterBorderColor: v.focusOuterBorderColor,\n        zIndexes: {\n          foreground: v.focusBorderZIndex\n        }\n      },\n      borderPadding: borderWidth\n    });\n    return Object.assign({\n      height: v.toggleButtonHeight,\n      minWidth: v.toggleButtonHeight,\n      color: v.toggleButtonColor,\n      backgroundColor: v.toggleButtonBackgroundColor,\n      borderRadius: v.toggleButtonBorderRadius,\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'relative',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      outline: 0,\n      padding: 0,\n      borderWidth: borderWidth,\n      borderStyle: 'solid',\n      borderColor: v.toggleButtonBorderColor,\n      boxShadow: v.toggleButtonBoxShadow,\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    }, getIconFillOrOutlineStyles({\n      outline: true\n    }), {\n      ':before': Object.assign({}, getIndicatorStyles(p.disabled ? v.toggleButtonColorDisabled : p.primary ? v.toggleButtonPrimaryColor : v.toggleButtonColor, true, v.toggleButtonIndicatorSize)),\n      ':hover': Object.assign({}, getIconFillOrOutlineStyles({\n        outline: false\n      }), {\n        ':before': Object.assign({}, getIndicatorStyles(v.toggleButtonColorHover, false, v.toggleButtonIndicatorSize)),\n        color: v.toggleButtonColorHover,\n        background: v.toggleButtonBackgroundColorHover\n      }),\n      ':active': {\n        color: v.toggleButtonColorActive,\n        backgroundColor: v.toggleButtonBackgroundColorActive,\n        borderColor: v.toggleButtonBorderColorActive,\n        boxShadow: 'none'\n      },\n      ':focus': borderFocusStyles[':focus'],\n      ':focus-visible': {\n        backgroundColor: v.toggleButtonBackgroundColorFocus,\n        borderColor: v.toggleButtonBorderColorFocus,\n        color: v.toggleButtonColorFocus,\n        borderWidth: borderWidth,\n        ':hover': {\n          borderColor: v.toggleButtonBorderColorHover\n        }\n      }\n    }, p.primary && {\n      color: v.toggleButtonPrimaryColor,\n      backgroundColor: v.toggleButtonPrimaryBackgroundColor,\n      borderColor: v.toggleButtonPrimaryBorderColor,\n      boxShadow: v.toggleButtonPrimaryBoxShadow,\n      borderWidth: \"0 0 0 \" + siteVariables.borderWidth,\n      ':active': {\n        backgroundColor: v.toggleButtonPrimaryBackgroundColorActive,\n        boxShadow: 'none'\n      },\n      ':focus': borderFocusStyles[':focus'],\n      ':focus-visible': {\n        backgroundColor: v.toggleButtonPrimaryBackgroundColorFocus\n      },\n      ':hover': {\n        color: v.toggleButtonPrimaryHoverColor,\n        backgroundColor: v.toggleButtonPrimaryHoverBackgroundColor\n      }\n    }, p.disabled && {\n      cursor: 'default',\n      color: v.toggleButtonColorDisabled,\n      boxShadow: 'none',\n      pointerEvents: 'none',\n      ':hover': {\n        color: v.toggleButtonColorDisabled\n      },\n      backgroundColor: v.toggleButtonBackgroundColorDisabled,\n      borderWidth: \"0 0 0 \" + siteVariables.borderWidth,\n      borderColor: v.borderColorDisabled\n    }, p.size === 'small' && {\n      height: v.smallDimension,\n      width: v.smallDimension,\n      minWidth: v.smallMinWidth,\n      boxShadow: v.smallBoxShadow\n    });\n  }\n};","map":{"version":3,"sources":["themes/teams/components/SplitButton/splitButtonToggleStyles.ts"],"names":["getIndicatorStyles","content","width","height","backgroundImage","toggleIndicatorUrl","backgroundRepeat","splitButtonToggleStyles","root","props","p","variables","v","theme","siteVariables","borderWidth","borderFocusStyles","getBorderFocusStyles","borderRadius","focusInnerBorderColor","focusOuterBorderColor","zIndexes","foreground","focusBorderZIndex","borderPadding","minWidth","color","backgroundColor","display","justifyContent","alignItems","position","verticalAlign","cursor","outline","padding","borderStyle","borderColor","boxShadow","borderTopLeftRadius","borderBottomLeftRadius","getIconFillOrOutlineStyles","background","toggleButtonBackgroundColorHover","toggleButtonBorderColorHover","toggleButtonPrimaryBackgroundColorFocus","toggleButtonPrimaryHoverBackgroundColor","pointerEvents","toggleButtonColorDisabled","borderColorDisabled","smallBoxShadow"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { SplitButtonToggleStylesProps } from '../../../../components/SplitButton/SplitButtonToggle';\nimport { SplitButtonVariables } from './splitButtonVariables';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { getIconFillOrOutlineStyles } from '../../getIconFillOrOutlineStyles';\nimport { toggleIndicatorUrl } from './toggleIndicatorUrl';\n\nconst getIndicatorStyles = (color: string, outline: boolean, size: string): ICSSInJSStyle => {\n  return {\n    content: '\"\"',\n    width: size,\n    height: size,\n    backgroundImage: toggleIndicatorUrl(color, outline),\n    backgroundRepeat: 'no-repeat',\n  };\n};\n\nexport const splitButtonToggleStyles: ComponentSlotStylesPrepared<\n  SplitButtonToggleStylesProps,\n  SplitButtonVariables\n> = {\n  root: ({ props: p, variables: v, theme }): ICSSInJSStyle => {\n    const { siteVariables } = theme;\n    const { borderWidth } = siteVariables;\n\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: {\n        borderRadius: v.focusBorderRadius,\n        borderWidth: v.focusBorderWidth,\n        focusInnerBorderColor: v.focusInnerBorderColor,\n        focusOuterBorderColor: v.focusOuterBorderColor,\n        zIndexes: { foreground: v.focusBorderZIndex },\n      },\n      borderPadding: borderWidth,\n    });\n\n    return {\n      height: v.toggleButtonHeight,\n      minWidth: v.toggleButtonHeight,\n      color: v.toggleButtonColor,\n      backgroundColor: v.toggleButtonBackgroundColor,\n      borderRadius: v.toggleButtonBorderRadius,\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'relative',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n\n      outline: 0,\n      padding: 0,\n      borderWidth,\n      borderStyle: 'solid',\n      borderColor: v.toggleButtonBorderColor,\n      boxShadow: v.toggleButtonBoxShadow,\n\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n\n      ...getIconFillOrOutlineStyles({ outline: true }),\n\n      ':before': {\n        ...getIndicatorStyles(\n          p.disabled ? v.toggleButtonColorDisabled : p.primary ? v.toggleButtonPrimaryColor : v.toggleButtonColor,\n          true,\n          v.toggleButtonIndicatorSize,\n        ),\n      },\n\n      ':hover': {\n        ...getIconFillOrOutlineStyles({ outline: false }),\n        ':before': {\n          ...getIndicatorStyles(v.toggleButtonColorHover, false, v.toggleButtonIndicatorSize),\n        },\n        color: v.toggleButtonColorHover,\n        background: v.toggleButtonBackgroundColorHover,\n      },\n\n      ':active': {\n        color: v.toggleButtonColorActive,\n        backgroundColor: v.toggleButtonBackgroundColorActive,\n        borderColor: v.toggleButtonBorderColorActive,\n        boxShadow: 'none',\n      },\n\n      ':focus': borderFocusStyles[':focus'],\n      ':focus-visible': {\n        backgroundColor: v.toggleButtonBackgroundColorFocus,\n        borderColor: v.toggleButtonBorderColorFocus,\n        color: v.toggleButtonColorFocus,\n        borderWidth,\n\n        ':hover': {\n          borderColor: v.toggleButtonBorderColorHover,\n        },\n      },\n\n      // Overrides for \"primary\" split button\n      ...(p.primary && {\n        color: v.toggleButtonPrimaryColor,\n        backgroundColor: v.toggleButtonPrimaryBackgroundColor,\n        borderColor: v.toggleButtonPrimaryBorderColor,\n        boxShadow: v.toggleButtonPrimaryBoxShadow,\n        borderWidth: `0 0 0 ${siteVariables.borderWidth}`,\n\n        ':active': {\n          backgroundColor: v.toggleButtonPrimaryBackgroundColorActive,\n          boxShadow: 'none',\n        },\n\n        ':focus': borderFocusStyles[':focus'],\n        ':focus-visible': {\n          backgroundColor: v.toggleButtonPrimaryBackgroundColorFocus,\n        },\n\n        ':hover': {\n          color: v.toggleButtonPrimaryHoverColor,\n          backgroundColor: v.toggleButtonPrimaryHoverBackgroundColor,\n        },\n      }),\n\n      // Overrides for \"disabled\" split button\n      ...(p.disabled && {\n        cursor: 'default',\n        color: v.toggleButtonColorDisabled,\n        boxShadow: 'none',\n        pointerEvents: 'none',\n        ':hover': {\n          color: v.toggleButtonColorDisabled,\n        },\n\n        backgroundColor: v.toggleButtonBackgroundColorDisabled,\n\n        borderWidth: `0 0 0 ${siteVariables.borderWidth}`,\n        borderColor: v.borderColorDisabled,\n      }),\n\n      ...(p.size === 'small' && {\n        height: v.smallDimension,\n        width: v.smallDimension,\n        minWidth: v.smallMinWidth,\n        boxShadow: v.smallBoxShadow,\n      }),\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"module"}