{"ast":null,"code":"export var getContainerStyles = function getContainerStyles(options) {\n  var padding = options.padding,\n      placement = options.placement;\n  return Object.assign({}, placement === 'bottom' && {\n    paddingTop: padding\n  }, placement === 'top' && {\n    paddingBottom: padding\n  }, placement === 'left' && {\n    paddingRight: padding\n  }, placement === 'right' && {\n    paddingLeft: padding\n  });\n};\nexport var getPointerStyles = function getPointerStyles(options) {\n  var backgroundColor = options.backgroundColor,\n      borderColor = options.borderColor,\n      borderSize = options.borderSize,\n      gap = options.gap,\n      height = options.height,\n      padding = options.padding,\n      placement = options.placement,\n      rtl = options.rtl,\n      svg = options.svg,\n      width = options.width;\n  return Object.assign({\n    display: 'block',\n    position: 'absolute',\n    zIndex: 1\n  }, (placement === 'bottom' || placement === 'top') && {\n    paddingLeft: gap,\n    paddingRight: gap,\n    height: height,\n    width: \"calc(\" + width + \" + (\" + gap + \" * 2))\"\n  }, (placement === 'left' || placement === 'right') && {\n    paddingBottom: gap,\n    paddingTop: gap,\n    height: \"calc(\" + width + \" + (\" + gap + \" * 2))\",\n    width: height\n  }, placement === 'bottom' && {\n    top: \"calc(\" + padding + \" - \" + height + \" + (\" + borderSize + \" * 2))\"\n  }, placement === 'top' && {\n    bottom: \"calc(\" + padding + \" - \" + height + \" + \" + borderSize + \")\"\n  }, placement === 'left' && {\n    right: \"calc(\" + padding + \" - \" + height + \" + \" + borderSize + \")\"\n  }, placement === 'right' && {\n    left: \"calc(\" + padding + \" - \" + height + \" + \" + borderSize + \")\"\n  }, {\n    '::before': Object.assign({\n      content: '\" \"',\n      display: 'block',\n      height: height,\n      position: 'relative',\n      transformOrigin: 'center top',\n      borderBottomColor: 'transparent',\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      borderTopColor: 'transparent',\n      borderStyle: 'solid',\n      left: 0,\n      top: 0\n    }, placement === 'bottom' && {\n      borderBottomColor: backgroundColor,\n      borderWidth: \"0 \" + height + \" \" + height\n    }, placement === 'top' && {\n      borderTopColor: backgroundColor,\n      borderWidth: height + \" \" + height + \" 0\",\n      top: \"calc(\" + borderSize + \" * -1)\"\n    }, placement === 'left' && {\n      borderLeftColor: backgroundColor,\n      borderWidth: height + \" 0 \" + height + \" \" + height\n    }, placement === 'right' && {\n      borderRightColor: backgroundColor,\n      borderWidth: height + \" \" + height + \" \" + height + \" 0\"\n    }),\n    '::after': Object.assign({\n      content: '\" \"',\n      display: 'block',\n      height: height,\n      position: 'relative',\n      transformOrigin: 'center top',\n      zIndex: -1,\n      borderBottomColor: 'transparent',\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      borderTopColor: 'transparent',\n      borderStyle: 'solid'\n    }, placement === 'bottom' && {\n      borderBottomColor: borderColor,\n      borderWidth: \"0 \" + height + \" \" + height,\n      left: 0,\n      bottom: \"calc(\" + height + \" + 1px)\"\n    }, placement === 'top' && {\n      borderTopColor: borderColor,\n      borderWidth: height + \" \" + height + \" 0\",\n      left: 0,\n      bottom: height\n    }, placement === 'left' && {\n      borderLeftColor: borderColor,\n      borderWidth: height + \" 0 \" + height + \" \" + height,\n      left: borderSize,\n      bottom: width\n    }, placement === 'right' && {\n      borderRightColor: borderColor,\n      borderWidth: height + \" \" + height + \" \" + height + \" 0\",\n      right: borderSize,\n      bottom: width\n    })\n  }, svg && {\n    // :before & :after are used to draw CSS triangles, not valid for SVG\n    '::before': Object.assign({\n      content: '\" \"',\n      backgroundImage: svg,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      display: 'block',\n      position: 'relative'\n    }, placement === 'bottom' && {\n      height: \"calc(\" + width + \" + (\" + gap + \" * 2))\",\n      width: height,\n      left: gap,\n      bottom: \"calc(\" + width + \" - \" + height + \" + \" + borderSize + \")\",\n      transform: \"rotate(\" + (rtl ? -90 : 90) + \"deg)\"\n    }, placement === 'top' && {\n      height: \"calc(\" + width + \" + (\" + gap + \" * 2))\",\n      width: height,\n      left: gap,\n      bottom: \"calc(\" + gap + \" + \" + height + \" - \" + borderSize + \")\",\n      transform: \"rotate(\" + (rtl ? 90 : -90) + \"deg)\"\n    }, placement === 'left' && {\n      height: width,\n      width: height,\n      left: 0,\n      transform: \"rotate(\" + (rtl ? 0 : 180) + \"deg)\"\n    }, placement === 'right' && {\n      height: width,\n      width: height,\n      right: 0,\n      transform: \"rotate(\" + (rtl ? 180 : 0) + \"deg)\"\n    }),\n    '::after': undefined\n  });\n};","map":{"version":3,"sources":["themes/teams/getPointerStyles.ts"],"names":["getContainerStyles","padding","placement","options","paddingTop","paddingBottom","paddingRight","paddingLeft","getPointerStyles","backgroundColor","borderColor","borderSize","gap","height","rtl","svg","width","display","position","zIndex","top","bottom","right","left","content","transformOrigin","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderStyle","borderWidth","backgroundImage","backgroundRepeat","backgroundPosition","transform","undefined"],"mappings":"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","sourcesContent":["import { ICSSInJSStyle } from '@fluentui/styles';\nimport * as PopperJs from '@popperjs/core';\n\ntype GetContainerStylesOptions = {\n  padding: string;\n  placement: PopperJs.BasePlacement;\n};\n\ntype GetPointerStylesOptions = {\n  backgroundColor: string;\n  borderColor: string;\n  borderSize: string;\n\n  gap: string;\n  padding: string;\n  height: string;\n  width: string;\n\n  placement: PopperJs.BasePlacement;\n  rtl: boolean;\n  svg?: string;\n};\n\nexport const getContainerStyles = (options: GetContainerStylesOptions): ICSSInJSStyle => {\n  const { padding, placement } = options;\n\n  return {\n    ...(placement === 'bottom' && {\n      paddingTop: padding,\n    }),\n    ...(placement === 'top' && {\n      paddingBottom: padding,\n    }),\n    ...(placement === 'left' && {\n      paddingRight: padding,\n    }),\n    ...(placement === 'right' && {\n      paddingLeft: padding,\n    }),\n  };\n};\n\nexport const getPointerStyles = (options: GetPointerStylesOptions): ICSSInJSStyle => {\n  const { backgroundColor, borderColor, borderSize, gap, height, padding, placement, rtl, svg, width } = options;\n\n  return {\n    display: 'block',\n    position: 'absolute',\n    zIndex: 1,\n\n    ...((placement === 'bottom' || placement === 'top') && {\n      paddingLeft: gap,\n      paddingRight: gap,\n\n      height,\n      width: `calc(${width} + (${gap} * 2))`,\n    }),\n    ...((placement === 'left' || placement === 'right') && {\n      paddingBottom: gap,\n      paddingTop: gap,\n\n      height: `calc(${width} + (${gap} * 2))`,\n      width: height,\n    }),\n\n    ...(placement === 'bottom' && {\n      top: `calc(${padding} - ${height} + (${borderSize} * 2))`,\n    }),\n    ...(placement === 'top' && {\n      bottom: `calc(${padding} - ${height} + ${borderSize})`,\n    }),\n\n    ...(placement === 'left' && {\n      right: `calc(${padding} - ${height} + ${borderSize})`,\n    }),\n    ...(placement === 'right' && {\n      left: `calc(${padding} - ${height} + ${borderSize})`,\n    }),\n\n    '::before': {\n      content: '\" \"',\n      display: 'block',\n      height,\n      position: 'relative',\n      transformOrigin: 'center top',\n\n      borderBottomColor: 'transparent',\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      borderTopColor: 'transparent',\n      borderStyle: 'solid',\n\n      left: 0,\n      top: 0,\n\n      ...(placement === 'bottom' && {\n        borderBottomColor: backgroundColor,\n        borderWidth: `0 ${height} ${height}`,\n      }),\n      ...(placement === 'top' && {\n        borderTopColor: backgroundColor,\n        borderWidth: `${height} ${height} 0`,\n\n        top: `calc(${borderSize} * -1)`,\n      }),\n      ...(placement === 'left' && {\n        borderLeftColor: backgroundColor,\n        borderWidth: `${height} 0 ${height} ${height}`,\n      }),\n      ...(placement === 'right' && {\n        borderRightColor: backgroundColor,\n        borderWidth: `${height} ${height} ${height} 0`,\n      }),\n    },\n\n    '::after': {\n      content: '\" \"',\n      display: 'block',\n      height,\n      position: 'relative',\n      transformOrigin: 'center top',\n      zIndex: -1,\n\n      borderBottomColor: 'transparent',\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      borderTopColor: 'transparent',\n      borderStyle: 'solid',\n\n      ...(placement === 'bottom' && {\n        borderBottomColor: borderColor,\n        borderWidth: `0 ${height} ${height}`,\n\n        left: 0,\n        bottom: `calc(${height} + 1px)`,\n      }),\n      ...(placement === 'top' && {\n        borderTopColor: borderColor,\n        borderWidth: `${height} ${height} 0`,\n\n        left: 0,\n        bottom: height,\n      }),\n      ...(placement === 'left' && {\n        borderLeftColor: borderColor,\n        borderWidth: `${height} 0 ${height} ${height}`,\n\n        left: borderSize,\n        bottom: width,\n      }),\n      ...(placement === 'right' && {\n        borderRightColor: borderColor,\n        borderWidth: `${height} ${height} ${height} 0`,\n\n        right: borderSize,\n        bottom: width,\n      }),\n    },\n\n    ...(svg && {\n      // :before & :after are used to draw CSS triangles, not valid for SVG\n      '::before': {\n        content: '\" \"',\n        backgroundImage: svg,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        display: 'block',\n        position: 'relative',\n\n        ...(placement === 'bottom' && {\n          height: `calc(${width} + (${gap} * 2))`,\n          width: height,\n\n          left: gap,\n          bottom: `calc(${width} - ${height} + ${borderSize})`,\n          transform: `rotate(${rtl ? -90 : 90}deg)`,\n        }),\n        ...(placement === 'top' && {\n          height: `calc(${width} + (${gap} * 2))`,\n          width: height,\n\n          left: gap,\n          bottom: `calc(${gap} + ${height} - ${borderSize})`,\n          transform: `rotate(${rtl ? 90 : -90}deg)`,\n        }),\n        ...(placement === 'left' && {\n          height: width,\n          width: height,\n\n          left: 0,\n          transform: `rotate(${rtl ? 0 : 180}deg)`,\n        }),\n        ...(placement === 'right' && {\n          height: width,\n          width: height,\n\n          right: 0,\n          transform: `rotate(${rtl ? 180 : 0}deg)`,\n        }),\n      },\n      '::after': undefined,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}