{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { menuButtonBehavior } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { commonPropTypes, getOrGenerateIdFromShorthand } from '../../utils';\nimport { createShorthandFactory } from '../../utils/factories';\nimport { Popup } from '../Popup/Popup';\nimport { Menu } from '../Menu/Menu';\nimport { focusMenuItem } from './focusUtils';\nimport { ALIGNMENTS, POSITIONS } from '../../utils/positioner';\nimport { useAccessibility, useTelemetry, getElementType, useUnhandledProps, useFluentContext, useAutoControlled, useStyles } from '@fluentui/react-bindings';\nexport var menuButtonClassName = 'ui-menubutton';\nexport var menuButtonSlotClassNames = {\n  menu: menuButtonClassName + \"__menu\"\n};\n/**\n * A MenuButton displays a menu connected to trigger element.\n * @accessibility\n */\n\nexport var MenuButton = /*#__PURE__*/function () {\n  var MenuButton = function MenuButton(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(MenuButton.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var contextMenu = props.contextMenu,\n        menu = props.menu,\n        accessibility = props.accessibility,\n        align = props.align,\n        className = props.className,\n        defaultOpen = props.defaultOpen,\n        flipBoundary = props.flipBoundary,\n        mountNode = props.mountNode,\n        mouseLeaveDelay = props.mouseLeaveDelay,\n        offset = props.offset,\n        on = props.on,\n        onOpenChange = props.onOpenChange,\n        overflowBoundary = props.overflowBoundary,\n        pointing = props.pointing,\n        popperRef = props.popperRef,\n        position = props.position,\n        positionFixed = props.positionFixed,\n        tabbableTrigger = props.tabbableTrigger,\n        target = props.target,\n        trigger = props.trigger,\n        unstable_disableTether = props.unstable_disableTether,\n        unstable_pinned = props.unstable_pinned,\n        variables = props.variables;\n\n    var _useAutoControlled = useAutoControlled({\n      defaultValue: props.defaultOpen,\n      value: props.open,\n      initialValue: false\n    }),\n        open = _useAutoControlled[0],\n        setOpen = _useAutoControlled[1];\n\n    var menuId = React.useRef();\n    menuId.current = getOrGenerateIdFromShorthand('menubutton-menu-', menu, menuId.current);\n    var triggerId = React.useRef();\n    triggerId.current = getOrGenerateIdFromShorthand('menubutton-trigger-', trigger, triggerId.current);\n    var triggerRef = React.useRef();\n    var menuRef = React.useRef();\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(MenuButton.handledProps, props);\n    var getA11yProps = useAccessibility(accessibility, {\n      debugName: MenuButton.displayName,\n      actionHandlers: {\n        closeMenu: function (_closeMenu) {\n          function closeMenu(_x) {\n            return _closeMenu.apply(this, arguments);\n          }\n\n          closeMenu.toString = function () {\n            return _closeMenu.toString();\n          };\n\n          return closeMenu;\n        }(function (e) {\n          return closeMenu(e);\n        }),\n        openAndFocusFirst: function openAndFocusFirst(e) {\n          return openAndFocus(e, 'first');\n        },\n        openAndFocusLast: function openAndFocusLast(e) {\n          return openAndFocus(e, 'last');\n        }\n      },\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          menuId: menuId.current,\n          triggerId: triggerId.current,\n          open: open,\n          trigger: props.trigger,\n          contextMenu: contextMenu,\n          on: on,\n          tabbableTrigger: tabbableTrigger\n        };\n      },\n      rtl: context.rtl\n    });\n    var popupProps = {\n      accessibility: accessibility,\n      align: align,\n      className: className,\n      defaultOpen: defaultOpen,\n      mountNode: mountNode,\n      mouseLeaveDelay: mouseLeaveDelay,\n      flipBoundary: flipBoundary,\n      offset: offset,\n      on: on,\n      onOpenChange: onOpenChange,\n      open: open,\n      overflowBoundary: overflowBoundary,\n      pointing: pointing,\n      popperRef: popperRef,\n      position: position,\n      positionFixed: positionFixed,\n      tabbableTrigger: tabbableTrigger,\n      styles: props.styles,\n      target: target,\n      trigger: trigger,\n      unstable_disableTether: unstable_disableTether,\n      unstable_pinned: unstable_pinned,\n      variables: variables\n    };\n\n    var _useStyles = useStyles(MenuButton.displayName, {\n      className: menuButtonClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          styles: props.styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes,\n        resolvedStyles = _useStyles.styles;\n\n    var closeMenu = function closeMenu(e) {\n      handleOpenChange(e, false);\n    };\n\n    var openAndFocus = function openAndFocus(e, which) {\n      e.preventDefault();\n      handleOpenChange(e, true, function () {\n        return menuRef.current && focusMenuItem(menuRef.current, which);\n      });\n    };\n\n    var handleOpenChange = function handleOpenChange(e, open, callback) {\n      _invoke(props, 'onOpenChange', e, Object.assign({}, props, {\n        open: open\n      }));\n\n      setOpen(open);\n      callback && callback();\n    };\n\n    var handleMenuOverrides = function handleMenuOverrides(predefinedProps) {\n      return {\n        onItemClick: function onItemClick(e, itemProps) {\n          _invoke(predefinedProps, 'onItemClick', e, itemProps);\n\n          _invoke(props, 'onMenuItemClick', e, itemProps);\n\n          if (!itemProps || !itemProps.menu) {\n            // do not close if clicked on item with submenu\n            handleOpenChange(e, false);\n          }\n        }\n      };\n    };\n\n    var content = Menu.create(menu, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('menu', {\n          vertical: true,\n          className: menuButtonSlotClassNames.menu\n        });\n      },\n      overrideProps: handleMenuOverrides\n    });\n    var overrideProps = Object.assign({\n      accessibility: getA11yProps.unstable_behaviorDefinition,\n      open: open,\n      onOpenChange: function onOpenChange(e, _ref) {\n        var open = _ref.open;\n        handleOpenChange(e, open);\n      },\n      content: {\n        styles: resolvedStyles.popupContent,\n        content: content && /*#__PURE__*/React.createElement(Ref, {\n          innerRef: menuRef\n        }, content)\n      },\n      children: undefined\n    }, contextMenu ? {\n      on: 'context',\n      trapFocus: true,\n      tabbableTrigger: false\n    } : {\n      inline: true,\n      autoFocus: true\n    });\n    var popup = Popup.create(popupProps, {\n      overrideProps: overrideProps\n    });\n\n    if (contextMenu) {\n      setEnd();\n      return popup;\n    }\n\n    var element = getA11yProps.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: triggerRef\n    }, popup)));\n    setEnd();\n    return element;\n  };\n\n  MenuButton.displayName = 'MenuButton';\n  MenuButton.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: false\n  }), {\n    align: PropTypes.oneOf(ALIGNMENTS),\n    defaultOpen: PropTypes.bool,\n    mountNode: customPropTypes.domNode,\n    mouseLeaveDelay: PropTypes.number,\n    offset: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.number)]),\n    on: PropTypes.oneOfType([PropTypes.oneOf(['hover', 'click', 'focus', 'context']), PropTypes.arrayOf(PropTypes.oneOf(['click', 'focus', 'context'])), PropTypes.arrayOf(PropTypes.oneOf(['hover', 'focus', 'context']))]),\n    flipBoundary: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object), PropTypes.oneOf(['clippingParents', 'window', 'scrollParent'])]),\n    overflowBoundary: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object), PropTypes.oneOf(['clippingParents', 'window', 'scrollParent'])]),\n    open: PropTypes.bool,\n    onMenuItemClick: PropTypes.func,\n    onOpenChange: PropTypes.func,\n    popperRef: customPropTypes.ref,\n    position: PropTypes.oneOf(POSITIONS),\n    positionFixed: PropTypes.bool,\n    target: PropTypes.any,\n    trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.any]),\n    tabbableTrigger: PropTypes.bool,\n    unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n    unstable_pinned: PropTypes.bool,\n    menu: PropTypes.oneOfType([customPropTypes.itemShorthandWithoutJSX, PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX)]),\n    contextMenu: PropTypes.bool\n  });\n  MenuButton.defaultProps = {\n    accessibility: menuButtonBehavior,\n    align: 'start',\n    position: 'below'\n  };\n  MenuButton.handledProps = Object.keys(MenuButton.propTypes);\n  MenuButton.create = createShorthandFactory({\n    Component: MenuButton,\n    mappedProp: 'menu'\n  });\n  return MenuButton;\n}();","map":{"version":3,"sources":["components/MenuButton/MenuButton.tsx"],"names":["menuButtonClassName","menuButtonSlotClassNames","menu","MenuButton","context","useFluentContext","setStart","setEnd","useTelemetry","contextMenu","accessibility","align","className","defaultOpen","flipBoundary","mountNode","mouseLeaveDelay","offset","on","onOpenChange","overflowBoundary","pointing","popperRef","position","positionFixed","tabbableTrigger","target","trigger","unstable_disableTether","unstable_pinned","variables","props","open","setOpen","useAutoControlled","defaultValue","value","initialValue","menuId","React","getOrGenerateIdFromShorthand","triggerId","triggerRef","menuRef","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","actionHandlers","closeMenu","openAndFocusFirst","openAndFocus","openAndFocusLast","mapPropsToBehavior","rtl","popupProps","styles","classes","resolvedStyles","useStyles","mapPropsToInlineStyles","handleOpenChange","e","focusMenuItem","callback","handleMenuOverrides","onItemClick","itemProps","content","defaultProps","vertical","overrideProps","children","undefined","trapFocus","inline","autoFocus","popup","element","root","PropTypes","customPropTypes","onMenuItemClick","bool","Object","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport { Accessibility, menuButtonBehavior, MenuButtonBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { commonPropTypes, StyledComponentProps, getOrGenerateIdFromShorthand } from '../../utils';\nimport { ShorthandValue, ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\n\nimport { createShorthandFactory } from '../../utils/factories';\nimport { Popup, PopupProps, PopupEvents, PopupEventsArray } from '../Popup/Popup';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { focusMenuItem } from './focusUtils';\nimport { ALIGNMENTS, POSITIONS, PositioningProps } from '../../utils/positioner';\nimport {\n  ComponentWithAs,\n  useAccessibility,\n  useTelemetry,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAutoControlled,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface MenuButtonSlotClassNames {\n  menu: string;\n}\n\nexport interface MenuButtonProps extends StyledComponentProps<MenuButtonProps>, PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @default menuButtonBehavior\n   */\n  accessibility?: Accessibility<MenuButtonBehaviorProps>;\n\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** Existing element the popup should be bound to. */\n  mountNode?: HTMLElement;\n\n  /** Delay in ms for the mouse leave event, before the popup will be closed. */\n  mouseLeaveDelay?: number;\n\n  /** Events triggering the popup. */\n  on?: PopupEvents | PopupEventsArray;\n\n  /** Defines whether popup is displayed. */\n  open?: boolean;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<PopupProps>;\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /**\n   * DOM element that should be used as popup's target - instead of 'trigger' element that is used by default.\n   */\n  target?: HTMLElement;\n\n  /** Element to be rendered in-place where the popup is defined. */\n  trigger?: JSX.Element;\n\n  /** Whether the trigger should be tabbable */\n  tabbableTrigger?: boolean;\n\n  /** Shorthand for menu configuration */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /** Determines if the MenuButton behaves as context menu */\n  contextMenu?: boolean;\n}\n\nexport interface MenuButtonState {\n  open: boolean;\n  menuId: string;\n  triggerId: string;\n}\n\nexport const menuButtonClassName = 'ui-menubutton';\nexport const menuButtonSlotClassNames: MenuButtonSlotClassNames = {\n  menu: `${menuButtonClassName}__menu`,\n};\n\nexport type MenuButtonStylesProps = never;\n\n/**\n * A MenuButton displays a menu connected to trigger element.\n * @accessibility\n */\nexport const MenuButton: ComponentWithAs<'div', MenuButtonProps> &\n  FluentComponentStaticProps<MenuButtonProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(MenuButton.displayName, context.telemetry);\n  setStart();\n\n  const {\n    // MenuButton props:\n    contextMenu,\n    menu,\n    // Popup props:\n    accessibility,\n    align,\n    className,\n    defaultOpen,\n    flipBoundary,\n    mountNode,\n    mouseLeaveDelay,\n    offset,\n    on,\n    onOpenChange,\n    overflowBoundary,\n    pointing,\n    popperRef,\n    position,\n    positionFixed,\n    tabbableTrigger,\n    target,\n    trigger,\n    unstable_disableTether,\n    unstable_pinned,\n    variables,\n  } = props;\n\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const menuId = React.useRef<string>();\n  menuId.current = getOrGenerateIdFromShorthand('menubutton-menu-', menu, menuId.current);\n  const triggerId = React.useRef<string>();\n  triggerId.current = getOrGenerateIdFromShorthand('menubutton-trigger-', trigger, triggerId.current);\n\n  const triggerRef = React.useRef<HTMLElement>();\n  const menuRef = React.useRef<HTMLElement>();\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(MenuButton.handledProps, props);\n\n  const getA11yProps = useAccessibility<MenuButtonBehaviorProps>(accessibility, {\n    debugName: MenuButton.displayName,\n    actionHandlers: {\n      closeMenu: e => closeMenu(e),\n      openAndFocusFirst: e => openAndFocus(e, 'first'),\n      openAndFocusLast: e => openAndFocus(e, 'last'),\n    },\n    mapPropsToBehavior: () => ({\n      menuId: menuId.current,\n      triggerId: triggerId.current,\n      open,\n      trigger: props.trigger,\n      contextMenu,\n      on,\n      tabbableTrigger,\n    }),\n    rtl: context.rtl,\n  });\n\n  const popupProps: PopupProps = {\n    accessibility,\n    align,\n    className,\n    defaultOpen,\n    mountNode,\n    mouseLeaveDelay,\n    flipBoundary,\n    offset,\n    on,\n    onOpenChange,\n    open,\n    overflowBoundary,\n    pointing,\n    popperRef,\n    position,\n    positionFixed,\n    tabbableTrigger,\n    styles: props.styles,\n    target,\n    trigger,\n    unstable_disableTether,\n    unstable_pinned,\n    variables,\n  };\n\n  const { classes, styles: resolvedStyles } = useStyles<MenuButtonStylesProps>(MenuButton.displayName, {\n    className: menuButtonClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      styles: props.styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const closeMenu = (e: React.KeyboardEvent) => {\n    handleOpenChange(e, false);\n  };\n\n  const openAndFocus = (e: React.KeyboardEvent, which: 'first' | 'last') => {\n    e.preventDefault();\n    handleOpenChange(e, true, () => menuRef.current && focusMenuItem(menuRef.current, which));\n  };\n\n  const handleOpenChange = (e: React.SyntheticEvent, open: boolean, callback?: () => void) => {\n    _.invoke(props, 'onOpenChange', e, { ...props, open });\n    setOpen(open);\n    callback && callback();\n  };\n\n  const handleMenuOverrides = (predefinedProps: MenuProps) => ({\n    onItemClick: (e: React.SyntheticEvent, itemProps: MenuItemProps) => {\n      _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n      _.invoke(props, 'onMenuItemClick', e, itemProps);\n      if (!itemProps || !itemProps.menu) {\n        // do not close if clicked on item with submenu\n        handleOpenChange(e, false);\n      }\n    },\n  });\n\n  const content = Menu.create(menu, {\n    defaultProps: () =>\n      getA11yProps('menu', {\n        vertical: true,\n        className: menuButtonSlotClassNames.menu,\n      }),\n    overrideProps: handleMenuOverrides,\n  });\n\n  const overrideProps: PopupProps = {\n    accessibility: getA11yProps.unstable_behaviorDefinition,\n    open,\n    onOpenChange: (e, { open }) => {\n      handleOpenChange(e, open);\n    },\n    content: {\n      styles: resolvedStyles.popupContent,\n      content: content && <Ref innerRef={menuRef}>{content}</Ref>,\n    },\n    children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger\n    ...(contextMenu\n      ? {\n          on: 'context',\n          trapFocus: true,\n          tabbableTrigger: false,\n        }\n      : {\n          inline: true,\n          autoFocus: true,\n        }),\n  };\n\n  const popup = Popup.create(popupProps, { overrideProps });\n\n  if (contextMenu) {\n    setEnd();\n    return popup;\n  }\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      <Ref innerRef={triggerRef}>{popup}</Ref>\n    </ElementType>,\n  );\n  setEnd();\n  return element;\n};\n\nMenuButton.displayName = 'MenuButton';\n\nMenuButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  align: PropTypes.oneOf(ALIGNMENTS),\n  defaultOpen: PropTypes.bool,\n  mountNode: customPropTypes.domNode,\n  mouseLeaveDelay: PropTypes.number,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  on: PropTypes.oneOfType([\n    PropTypes.oneOf(['hover', 'click', 'focus', 'context']),\n    PropTypes.arrayOf(PropTypes.oneOf(['click', 'focus', 'context'])),\n    PropTypes.arrayOf(PropTypes.oneOf(['hover', 'focus', 'context'])),\n  ]) as any,\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  open: PropTypes.bool,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  popperRef: customPropTypes.ref,\n  position: PropTypes.oneOf(POSITIONS),\n  positionFixed: PropTypes.bool,\n  target: PropTypes.any,\n  trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.any]),\n  tabbableTrigger: PropTypes.bool,\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  menu: PropTypes.oneOfType([\n    customPropTypes.itemShorthandWithoutJSX,\n    PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n  ]),\n  contextMenu: PropTypes.bool,\n};\n\nMenuButton.defaultProps = {\n  accessibility: menuButtonBehavior,\n  align: 'start',\n  position: 'below',\n};\n\nMenuButton.handledProps = Object.keys(MenuButton.propTypes) as any;\n\nMenuButton.create = createShorthandFactory({ Component: MenuButton, mappedProp: 'menu' });\n"]},"metadata":{},"sourceType":"module"}