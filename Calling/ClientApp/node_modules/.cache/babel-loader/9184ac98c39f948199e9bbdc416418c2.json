{"ast":null,"code":"import { keyboardKey } from '@fluentui/keyboard-key';\n/**\n * @specification\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Triggers 'clear' action with 'Escape' on 'input'.\n */\n\nexport var inputBehavior = function inputBehavior(props) {\n  return {\n    attributes: {\n      root: Object.assign({\n        'aria-disabled': props.disabled\n      }, props.required && {\n        'aria-required': true\n      }, props.error && {\n        'aria-invalid': true\n      })\n    },\n    keyActions: {\n      input: {\n        clear: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Escape\n          }]\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Input/inputBehavior.ts"],"names":["inputBehavior","attributes","root","props","disabled","keyActions","input","clear","keyCombinations","keyCode","keyboardKey","Escape"],"mappings":"AACA,SAAA,WAAA,QAAA,wBAAA;AAEA;;;;;;AAKA,OAAO,IAAMA,aAAgD,GAAG,SAAnDA,aAAmD,CAAA,KAAA,EAAK;AAAA,SAAK;AACxEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA;AACF,yBAAiBC,KAAK,CAACC;AADrB,OAAA,EAEED,KAAK,CAALA,QAAAA,IAAkB;AAAE,yBAAiB;AAAnB,OAFpB,EAGEA,KAAK,CAALA,KAAAA,IAAe;AAAE,wBAAgB;AAAlB,OAHjB;AADM,KAD4D;AAQxEE,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD;AADZ;AADF;AADG;AAR4D,GAAL;AAA9D,CAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { keyboardKey } from '@fluentui/keyboard-key';\n\n/**\n * @specification\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Triggers 'clear' action with 'Escape' on 'input'.\n */\nexport const inputBehavior: Accessibility<InputBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      'aria-disabled': props.disabled,\n      ...(props.required && { 'aria-required': true }),\n      ...(props.error && { 'aria-invalid': true }),\n    },\n  },\n  keyActions: {\n    input: {\n      clear: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type InputBehaviorProps = {\n  disabled?: boolean;\n  required?: boolean;\n  error?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}