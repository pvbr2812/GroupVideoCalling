{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nvar cropMarkStyle = {\n  position: 'absolute',\n  background: '#6495ed88'\n};\nexport var DebugRect = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DebugRect, _React$Component);\n\n  function DebugRect() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.selectorRef = /*#__PURE__*/React.createRef();\n\n    _this.setDebugSelectorPosition = function () {\n      var fiberNav = _this.props.fiberNav;\n\n      if (fiberNav && fiberNav.domNode && fiberNav.domNode.getBoundingClientRect && typeof fiberNav.domNode.getBoundingClientRect === 'function' && _this.selectorRef.current) {\n        var rect = fiberNav.domNode.getBoundingClientRect();\n        _this.selectorRef.current.style.top = rect.top + \"px\";\n        _this.selectorRef.current.style.left = rect.left + \"px\";\n        _this.selectorRef.current.style.width = rect.width + \"px\";\n        _this.selectorRef.current.style.height = rect.height + \"px\";\n        requestAnimationFrame(_this.setDebugSelectorPosition);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = DebugRect.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setDebugSelectorPosition();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {\n    this.setDebugSelectorPosition();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        fiberNav = _this$props.fiberNav,\n        showBackground = _this$props.showBackground,\n        showClassName = _this$props.showClassName,\n        showCropMarks = _this$props.showCropMarks,\n        showElement = _this$props.showElement,\n        renderLabel = _this$props.renderLabel;\n\n    if (!fiberNav) {\n      return null;\n    }\n\n    var label = renderLabel(fiberNav);\n    return /*#__PURE__*/React.createElement(\"pre\", {\n      ref: this.selectorRef,\n      style: {\n        position: 'fixed',\n        padding: 0,\n        margin: 0,\n        background: showBackground ? '#6495ed11' : 'none',\n        outline: '2px solid #6495edcc',\n        outlineOffset: '-1px',\n        zIndex: 99999999,\n        pointerEvents: 'none',\n        userSelect: 'none'\n      }\n    }, label && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        padding: '2px 4px',\n        margin: '-1px 0 0 -1px',\n        bottom: '100%',\n        left: 0,\n        color: '#fff',\n        background: '#6495ed',\n        zIndex: 1 // above crop marks\n\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, renderLabel(fiberNav))), showCropMarks && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '12px',\n        height: '1px',\n        top: '0',\n        left: '-20px'\n      })\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '1px',\n        height: '12px',\n        top: '-20px',\n        left: '0'\n      })\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '12px',\n        height: '1px',\n        top: '0',\n        right: '-20px'\n      })\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '1px',\n        height: '12px',\n        top: '-20px',\n        right: '0'\n      })\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '12px',\n        height: '1px',\n        bottom: '0',\n        left: '-20px'\n      })\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '1px',\n        height: '12px',\n        bottom: '-20px',\n        left: '0'\n      })\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '12px',\n        height: '1px',\n        bottom: '0',\n        right: '-20px'\n      })\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: Object.assign({}, cropMarkStyle, {\n        width: '1px',\n        height: '12px',\n        bottom: '-20px',\n        right: '0'\n      })\n    })), fiberNav.domNode && (showElement || showClassName) && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: '0.9em',\n        position: 'absolute',\n        padding: '2px 4px',\n        margin: '0 0 1px -1px',\n        top: '100%',\n        left: 0,\n        background: '#6495ed'\n      }\n    }, showElement && /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        fontWeight: 'bold',\n        color: 'hsl(160, 100%, 80%)'\n      }\n    }, fiberNav.domNode.tagName && fiberNav.domNode.tagName.toLowerCase()), showClassName && fiberNav.domNode.hasAttribute && typeof fiberNav.domNode.hasAttribute === 'function' && fiberNav.domNode.hasAttribute('class') && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'rgba(255, 255, 255, 0.75)'\n      }\n    }, \".\", (fiberNav.domNode.getAttribute('class') || '').replace(/ +/g, '.'))));\n  };\n\n  return DebugRect;\n}(React.Component);\nDebugRect.defaultProps = {\n  showBackground: true,\n  showClassName: true,\n  showElement: true,\n  renderLabel: function renderLabel(fiberNav) {\n    return \"<\" + fiberNav.name + \" />\";\n  }\n};","map":{"version":3,"sources":["components/Debug/DebugRect.tsx"],"names":["cropMarkStyle","position","background","DebugRect","React","defaultProps","showBackground","showClassName","showElement","renderLabel","fiberNav","componentDidMount","componentDidUpdate","rect","requestAnimationFrame","render","showCropMarks","label","padding","margin","outline","outlineOffset","zIndex","pointerEvents","userSelect","bottom","left","color","fontWeight","width","height","top","right","fontSize"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAYA,IAAMA,aAAkC,GAAG;AACzCC,EAAAA,QAAQ,EADiC,UAAA;AAEzCC,EAAAA,UAAU,EAAE;AAF6B,CAA3C;AAKA,OAAA,IAAaC,SAAb,GAAA,aAAA,UAAA,gBAAA,EAAA;AAAA,EAAA,cAAA,CAAA,SAAA,EAAA,gBAAA,CAAA;;AAAA,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AAAA;;AAAA,IAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,KAAA,IAAA;AAAA,IAAA,KAAA,CAAA,WAAA,GAAA,aACgBC,KAAK,CADrB,SACgBA,EADhB;;AAAA,IAAA,KAAA,CAAA,wBAAA,GAkB6B,YAAM;AAAA,UACvBM,QADuB,GACV,KAAA,CADU,KACV,CADU,QAAA;;AAG/B,UACEA,QAAQ,IACRA,QAAQ,CADRA,OAAAA,IAEAA,QAAQ,CAARA,OAAAA,CAFAA,qBAAAA,IAGA,OAAOA,QAAQ,CAARA,OAAAA,CAAP,qBAAA,KAHAA,UAAAA,IAIA,KAAA,CAAA,WAAA,CALF,OAAA,EAME;AACA,YAAMG,IAAI,GAAGH,QAAQ,CAARA,OAAAA,CAAb,qBAAaA,EAAb;AAEA,QAAA,KAAA,CAAA,WAAA,CAAA,OAAA,CAAA,KAAA,CAAA,GAAA,GAAwCG,IAAI,CAA5C,GAAwCA,GAAxC,IAAA;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,GAAyCA,IAAI,CAA7C,IAAyCA,GAAzC,IAAA;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,GAA0CA,IAAI,CAA9C,KAA0CA,GAA1C,IAAA;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,OAAA,CAAA,KAAA,CAAA,MAAA,GAA2CA,IAAI,CAA/C,MAA2CA,GAA3C,IAAA;AAEAC,QAAAA,qBAAqB,CAAC,KAAA,CAAtBA,wBAAqB,CAArBA;AACD;AApCL,KAAA;;AAAA,WAAA,KAAA;AAAA;;AAAA,MAAA,MAAA,GAAA,SAAA,CAAA,SAAA;;AAAA,EAAA,MAAA,CAAA,iBAAA,GAUEH,SAAAA,iBAAAA,GAAoB;AAClB,SAAA,wBAAA;AAXJ,GAAA;;AAAA,EAAA,MAAA,CAAA,kBAAA,GAcEC,SAAAA,kBAAAA,CAAAA,SAAAA,EAAAA,SAAAA,EAAAA,QAAAA,EAAmD;AACjD,SAAA,wBAAA;AAfJ,GAAA;;AAAA,EAAA,MAAA,CAAA,MAAA,GAuCEG,SAAAA,MAAAA,GAAS;AAAA,QAAA,WAAA,GACsF,KADtF,KAAA;AAAA,QACCL,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,QACWJ,cADX,GAAA,WAAA,CAAA,cAAA;AAAA,QAC2BC,aAD3B,GAAA,WAAA,CAAA,aAAA;AAAA,QAC0CS,aAD1C,GAAA,WAAA,CAAA,aAAA;AAAA,QACyDR,WADzD,GAAA,WAAA,CAAA,WAAA;AAAA,QACsEC,WADtE,GAAA,WAAA,CAAA,WAAA;;AAGP,QAAI,CAAJ,QAAA,EAAe;AACb,aAAA,IAAA;AACD;;AAED,QAAMQ,KAAK,GAAGR,WAAW,CAAzB,QAAyB,CAAzB;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,GAAG,EAAE,KADP,WAAA;AAEE,MAAA,KAAK,EAAE;AACLR,QAAAA,QAAQ,EADH,OAAA;AAELiB,QAAAA,OAAO,EAFF,CAAA;AAGLC,QAAAA,MAAM,EAHD,CAAA;AAILjB,QAAAA,UAAU,EAAEI,cAAc,GAAA,WAAA,GAJrB,MAAA;AAKLc,QAAAA,OAAO,EALF,qBAAA;AAMLC,QAAAA,aAAa,EANR,MAAA;AAOLC,QAAAA,MAAM,EAPD,QAAA;AAQLC,QAAAA,aAAa,EARR,MAAA;AASLC,QAAAA,UAAU,EAAE;AATP;AAFT,KAAA,EAcGP,KAAK,IAAA,aACJ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLhB,QAAAA,QAAQ,EADH,UAAA;AAELiB,QAAAA,OAAO,EAFF,SAAA;AAGLC,QAAAA,MAAM,EAHD,eAAA;AAILM,QAAAA,MAAM,EAJD,MAAA;AAKLC,QAAAA,IAAI,EALC,CAAA;AAMLC,QAAAA,KAAK,EANA,MAAA;AAOLzB,QAAAA,UAAU,EAPL,SAAA;AAQLoB,QAAAA,MAAM,EARD,CAAA,CAQM;;AARN;AADT,KAAA,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,KAAK,EAAE;AAAEM,QAAAA,UAAU,EAAE;AAAd;AAAb,KAAA,EAAsCnB,WAAW,CA3BvD,QA2BuD,CAAjD,CAZF,CAfJ,EA8BGO,aAAa,IAAA,aACZ,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHa,QAAAA,KAAK,EAFF,MAAA;AAGHC,QAAAA,MAAM,EAHH,KAAA;AAIHC,QAAAA,GAAG,EAJA,GAAA;AAKHL,QAAAA,IAAI,EAAE;AALH,OAAA;AADP,KAAA,CAFF,EAAA,aAWE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHG,QAAAA,KAAK,EAFF,KAAA;AAGHC,QAAAA,MAAM,EAHH,MAAA;AAIHC,QAAAA,GAAG,EAJA,OAAA;AAKHL,QAAAA,IAAI,EAAE;AALH,OAAA;AADP,KAAA,CAXF,EAAA,aAsBE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHG,QAAAA,KAAK,EAFF,MAAA;AAGHC,QAAAA,MAAM,EAHH,KAAA;AAIHC,QAAAA,GAAG,EAJA,GAAA;AAKHC,QAAAA,KAAK,EAAE;AALJ,OAAA;AADP,KAAA,CAtBF,EAAA,aA+BE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHH,QAAAA,KAAK,EAFF,KAAA;AAGHC,QAAAA,MAAM,EAHH,MAAA;AAIHC,QAAAA,GAAG,EAJA,OAAA;AAKHC,QAAAA,KAAK,EAAE;AALJ,OAAA;AADP,KAAA,CA/BF,EAAA,aA0CE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHH,QAAAA,KAAK,EAFF,MAAA;AAGHC,QAAAA,MAAM,EAHH,KAAA;AAIHL,QAAAA,MAAM,EAJH,GAAA;AAKHC,QAAAA,IAAI,EAAE;AALH,OAAA;AADP,KAAA,CA1CF,EAAA,aAmDE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHG,QAAAA,KAAK,EAFF,KAAA;AAGHC,QAAAA,MAAM,EAHH,MAAA;AAIHL,QAAAA,MAAM,EAJH,OAAA;AAKHC,QAAAA,IAAI,EAAE;AALH,OAAA;AADP,KAAA,CAnDF,EAAA,aA8DE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHG,QAAAA,KAAK,EAFF,MAAA;AAGHC,QAAAA,MAAM,EAHH,KAAA;AAIHL,QAAAA,MAAM,EAJH,GAAA;AAKHO,QAAAA,KAAK,EAAE;AALJ,OAAA;AADP,KAAA,CA9DF,EAAA,aAuEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHH,QAAAA,KAAK,EAFF,KAAA;AAGHC,QAAAA,MAAM,EAHH,MAAA;AAIHL,QAAAA,MAAM,EAJH,OAAA;AAKHO,QAAAA,KAAK,EAAE;AALJ,OAAA;AADP,KAAA,CAvEF,CA/BJ,EAiHGtB,QAAQ,CAARA,OAAAA,KAAqBF,WAAW,IAAhCE,aAAAA,KAAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLuB,QAAAA,QAAQ,EADH,OAAA;AAELhC,QAAAA,QAAQ,EAFH,UAAA;AAGLiB,QAAAA,OAAO,EAHF,SAAA;AAILC,QAAAA,MAAM,EAJD,cAAA;AAKLY,QAAAA,GAAG,EALE,MAAA;AAMLL,QAAAA,IAAI,EANC,CAAA;AAOLxB,QAAAA,UAAU,EAAE;AAPP;AADT,KAAA,EAWGM,WAAW,IAAA,aACV,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,MAAA,KAAK,EAAE;AAAEoB,QAAAA,UAAU,EAAZ,MAAA;AAAsBD,QAAAA,KAAK,EAAE;AAA7B;AAAf,KAAA,EACGjB,QAAQ,CAARA,OAAAA,CAAAA,OAAAA,IAA4BA,QAAQ,CAARA,OAAAA,CAAAA,OAAAA,CAbnC,WAamCA,EAD/B,CAZJ,EAgBGH,aAAa,IACZG,QAAQ,CAARA,OAAAA,CADDH,YAAAA,IAEC,OAAOG,QAAQ,CAARA,OAAAA,CAAP,YAAA,KAFDH,UAAAA,IAGCG,QAAQ,CAARA,OAAAA,CAAAA,YAAAA,CAHDH,OAGCG,CAHDH,IAAAA,aAIG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,KAAK,EAAE;AAAEoB,QAAAA,KAAK,EAAE;AAAT;AAAb,KAAA,EAAA,GAAA,EACI,CAACjB,QAAQ,CAARA,OAAAA,CAAAA,YAAAA,CAAAA,OAAAA,KAAD,EAAA,EAAA,OAAA,CAAA,KAAA,EAxIhB,GAwIgB,CADJ,CApBN,CAlHJ,CADF;AAhDJ,GAAA;;AAAA,SAAA,SAAA;AAAA,CAAA,CAA+BN,KAAK,CAApC,SAAA,CAAA;AAAaD,S,CAGJE,YAHIF,GAGW;AACpBG,EAAAA,cAAc,EADM,IAAA;AAEpBC,EAAAA,aAAa,EAFO,IAAA;AAGpBC,EAAAA,WAAW,EAHS,IAAA;AAIpBC,EAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,QAAA,EAAQ;AAAA,WAAA,MAAQC,QAAQ,CAAhB,IAAA,GAAA,KAAA;AAAA;AAJD,CAHXP","sourcesContent":["import * as React from 'react';\nimport { FiberNavigator } from './FiberNavigator';\n\ninterface DebugRectProps {\n  showBackground?: boolean;\n  showClassName?: boolean;\n  showCropMarks?: boolean;\n  showElement?: boolean;\n  fiberNav: FiberNavigator;\n  renderLabel?: (fiberNav: FiberNavigator) => string;\n}\n\nconst cropMarkStyle: React.CSSProperties = {\n  position: 'absolute',\n  background: '#6495ed88',\n};\n\nexport class DebugRect extends React.Component<DebugRectProps> {\n  selectorRef = React.createRef<HTMLPreElement>();\n\n  static defaultProps = {\n    showBackground: true,\n    showClassName: true,\n    showElement: true,\n    renderLabel: fiberNav => `<${fiberNav.name} />`,\n  };\n\n  componentDidMount() {\n    this.setDebugSelectorPosition();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.setDebugSelectorPosition();\n  }\n\n  setDebugSelectorPosition = () => {\n    const { fiberNav } = this.props;\n\n    if (\n      fiberNav &&\n      fiberNav.domNode &&\n      fiberNav.domNode.getBoundingClientRect &&\n      typeof fiberNav.domNode.getBoundingClientRect === 'function' &&\n      this.selectorRef.current\n    ) {\n      const rect = fiberNav.domNode.getBoundingClientRect();\n\n      this.selectorRef.current.style.top = `${rect.top}px`;\n      this.selectorRef.current.style.left = `${rect.left}px`;\n      this.selectorRef.current.style.width = `${rect.width}px`;\n      this.selectorRef.current.style.height = `${rect.height}px`;\n\n      requestAnimationFrame(this.setDebugSelectorPosition);\n    }\n  };\n\n  render() {\n    const { fiberNav, showBackground, showClassName, showCropMarks, showElement, renderLabel } = this.props;\n\n    if (!fiberNav) {\n      return null;\n    }\n\n    const label = renderLabel(fiberNav);\n\n    return (\n      <pre\n        ref={this.selectorRef}\n        style={{\n          position: 'fixed',\n          padding: 0,\n          margin: 0,\n          background: showBackground ? '#6495ed11' : 'none',\n          outline: '2px solid #6495edcc',\n          outlineOffset: '-1px',\n          zIndex: 99999999,\n          pointerEvents: 'none',\n          userSelect: 'none',\n        }}\n      >\n        {label && (\n          <div\n            style={{\n              position: 'absolute',\n              padding: '2px 4px',\n              margin: '-1px 0 0 -1px',\n              bottom: '100%',\n              left: 0,\n              color: '#fff',\n              background: '#6495ed',\n              zIndex: 1, // above crop marks\n            }}\n          >\n            <span style={{ fontWeight: 'bold' }}>{renderLabel(fiberNav)}</span>\n          </div>\n        )}\n        {showCropMarks && (\n          <>\n            {/* Top Left */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                top: '0',\n                left: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                top: '-20px',\n                left: '0',\n              }}\n            />\n\n            {/* Top Right */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                top: '0',\n                right: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                top: '-20px',\n                right: '0',\n              }}\n            />\n\n            {/* Bottom Left */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                bottom: '0',\n                left: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                bottom: '-20px',\n                left: '0',\n              }}\n            />\n\n            {/* Bottom Right */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                bottom: '0',\n                right: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                bottom: '-20px',\n                right: '0',\n              }}\n            />\n          </>\n        )}\n        {fiberNav.domNode && (showElement || showClassName) && (\n          <div\n            style={{\n              fontSize: '0.9em',\n              position: 'absolute',\n              padding: '2px 4px',\n              margin: '0 0 1px -1px',\n              top: '100%',\n              left: 0,\n              background: '#6495ed',\n            }}\n          >\n            {showElement && (\n              <strong style={{ fontWeight: 'bold', color: 'hsl(160, 100%, 80%)' }}>\n                {fiberNav.domNode.tagName && fiberNav.domNode.tagName.toLowerCase()}\n              </strong>\n            )}\n            {showClassName &&\n              fiberNav.domNode.hasAttribute &&\n              typeof fiberNav.domNode.hasAttribute === 'function' &&\n              fiberNav.domNode.hasAttribute('class') && (\n                <span style={{ color: 'rgba(255, 255, 255, 0.75)' }}>\n                  .{(fiberNav.domNode.getAttribute('class') || '').replace(/ +/g, '.')}\n                </span>\n              )}\n          </div>\n        )}\n      </pre>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}