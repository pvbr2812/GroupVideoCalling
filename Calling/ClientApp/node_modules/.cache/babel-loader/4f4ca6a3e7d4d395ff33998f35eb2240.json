{"ast":null,"code":"import { isValidHTMLElement } from 'fela-utils';\nimport renderToString from './renderToString';\nexport default function renderToElement(renderer, mountNode) {\n  // mountNode must be a valid HTML element to be able\n  // to set mountNode.textContent later on\n  if (!isValidHTMLElement(mountNode)) {\n    throw new Error('You need to specify a valid element node (mountNode.nodeType = 1) to render into.');\n  }\n\n  var css = renderToString(renderer);\n\n  if (mountNode.textContent !== css) {\n    // render currently rendered styles to the DOM once\n    mountNode.textContent = css;\n  }\n\n  return renderer.subscribe(function () {\n    mountNode.textContent = renderToString(renderer);\n  });\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/Git Uploads/GroupVideoCalling/Calling/ClientApp/node_modules/fela-tools/es/renderToElement.js"],"names":["isValidHTMLElement","renderToString","renderToElement","renderer","mountNode","Error","css","textContent","subscribe"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,YAAnC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,SAAnC,EAA8C;AAC3D;AACA;AACA,MAAI,CAACJ,kBAAkB,CAACI,SAAD,CAAvB,EAAoC;AAClC,UAAM,IAAIC,KAAJ,CAAU,mFAAV,CAAN;AACD;;AAED,MAAIC,GAAG,GAAGL,cAAc,CAACE,QAAD,CAAxB;;AAEA,MAAIC,SAAS,CAACG,WAAV,KAA0BD,GAA9B,EAAmC;AACjC;AACAF,IAAAA,SAAS,CAACG,WAAV,GAAwBD,GAAxB;AACD;;AAED,SAAOH,QAAQ,CAACK,SAAT,CAAmB,YAAY;AACpCJ,IAAAA,SAAS,CAACG,WAAV,GAAwBN,cAAc,CAACE,QAAD,CAAtC;AACD,GAFM,CAAP;AAGD","sourcesContent":["import { isValidHTMLElement } from 'fela-utils';\n\nimport renderToString from './renderToString';\n\nexport default function renderToElement(renderer, mountNode) {\n  // mountNode must be a valid HTML element to be able\n  // to set mountNode.textContent later on\n  if (!isValidHTMLElement(mountNode)) {\n    throw new Error('You need to specify a valid element node (mountNode.nodeType = 1) to render into.');\n  }\n\n  var css = renderToString(renderer);\n\n  if (mountNode.textContent !== css) {\n    // render currently rendered styles to the DOM once\n    mountNode.textContent = css;\n  }\n\n  return renderer.subscribe(function () {\n    mountNode.textContent = renderToString(renderer);\n  });\n}"]},"metadata":{},"sourceType":"module"}