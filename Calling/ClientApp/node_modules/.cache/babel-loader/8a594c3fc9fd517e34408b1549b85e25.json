{"ast":null,"code":"import * as React from 'react';\n\nvar isUndefined = function isUndefined(value) {\n  return typeof value === 'undefined';\n};\n/**\n * Returns a stateful value, and a function to update it. Mimics the `useState()` React Hook\n * signature.\n */\n\n\nexport var useAutoControlled = function useAutoControlled(options) {\n  var defaultValue = options.defaultValue,\n      _options$initialValue = options.initialValue,\n      initialValue = _options$initialValue === void 0 ? undefined : _options$initialValue,\n      value = options.value;\n\n  var _React$useState = React.useState(isUndefined(defaultValue) ? initialValue : defaultValue),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  return [isUndefined(value) ? state : value, setState];\n};","map":{"version":3,"sources":["hooks/useAutoControlled.ts"],"names":["isUndefined","useAutoControlled","defaultValue","initialValue","value","options","state","setState","React"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AASA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAA;AAAA,SAAgB,OAAA,KAAA,KAAhB,WAAA;AAApB,CAAA;AAEA;;;;;;AAIA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,OAAA,EAE0B;AAAA,MACjDC,YADiD,GACCG,OADD,CAAA,YAAA;AAAA,MAAA,qBAAA,GACCA,OADD,CAAA,YAAA;AAAA,MACnCF,YADmC,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,SAAA,GAAA,qBAAA;AAAA,MACTC,KADS,GACCC,OADD,CAAA,KAAA;;AAAA,MAAA,eAAA,GAE/BG,KAAK,CAALA,QAAAA,CAAsBR,WAAW,CAAXA,YAAW,CAAXA,GAAAA,YAAAA,GAFS,YAE/BQ,CAF+B;AAAA,MAElDF,KAFkD,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MAE3CC,QAF2C,GAAA,eAAA,CAAA,CAAA,CAAA;;AAIzD,SAAO,CAACP,WAAW,CAAXA,KAAW,CAAXA,GAAAA,KAAAA,GAAD,KAAA,EAAP,QAAO,CAAP;AANK,CAAA","sourcesContent":["import * as React from 'react';\n\ntype UseAutoControlledOptions<Value> = {\n  defaultValue: Value;\n  value: Value;\n\n  initialValue?: Value;\n};\n\nconst isUndefined = (value: any) => typeof value === 'undefined';\n\n/**\n * Returns a stateful value, and a function to update it. Mimics the `useState()` React Hook\n * signature.\n */\nexport const useAutoControlled = <Value>(\n  options: UseAutoControlledOptions<Value>,\n): [Value, React.Dispatch<React.SetStateAction<Value>>] => {\n  const { defaultValue, initialValue = undefined, value } = options;\n  const [state, setState] = React.useState<Value>(isUndefined(defaultValue) ? (initialValue as Value) : defaultValue);\n\n  return [isUndefined(value) ? state : value, setState];\n};\n"]},"metadata":{},"sourceType":"module"}