{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nvar AzureSASCredential =\n/** @class */\nfunction () {\n  /**\n   * Create an instance of an AzureSASCredential for use\n   * with a service client.\n   *\n   * @param signature - The initial value of the shared access signature to use in authentication\n   */\n  function AzureSASCredential(signature) {\n    if (!signature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = signature;\n  }\n\n  Object.defineProperty(AzureSASCredential.prototype, \"signature\", {\n    /**\n     * The value of the shared access signature to be used in authentication\n     */\n    get: function () {\n      return this._signature;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Change the value of the signature.\n   *\n   * Updates will take effect upon the next request after\n   * updating the signature value.\n   *\n   * @param newSignature - The new shared access signature value to be used\n   */\n\n  AzureSASCredential.prototype.update = function (newSignature) {\n    if (!newSignature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = newSignature;\n  };\n\n  return AzureSASCredential;\n}();\n\nexport { AzureSASCredential };","map":{"version":3,"sources":["../../src/azureSASCredential.ts"],"names":[],"mappings":"AAAA;AACA;;AAYA;;;AAGG;AACH,IAAA,kBAAA;AAAA;AAAA,YAAA;AAUE;;;;;AAKG;AACH,WAAA,kBAAA,CAAY,SAAZ,EAA6B;AAC3B,QAAI,CAAC,SAAL,EAAgB;AACd,YAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,SAAK,UAAL,GAAkB,SAAlB;AACD;;AAhBD,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,WAAX,EAAoB;AAHpB;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,UAAZ;AACD,KAFmB;qBAAA;;AAAA,GAApB;AAkBA;;;;;;;AAOG;;AACI,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,YAAd,EAAkC;AAChC,QAAI,CAAC,YAAL,EAAmB;AACjB,YAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,SAAK,UAAL,GAAkB,YAAlB;AACD,GANM;;AAOT,SAAA,kBAAA;AAAC,CAvCD,EAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Represents a credential defined by a static shared access signature.\n */\nexport interface SASCredential {\n  /**\n   * The value of the shared access signature represented as a string\n   */\n  readonly signature: string;\n}\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nexport class AzureSASCredential implements SASCredential {\n  private _signature: string;\n\n  /**\n   * The value of the shared access signature to be used in authentication\n   */\n  public get signature(): string {\n    return this._signature;\n  }\n\n  /**\n   * Create an instance of an AzureSASCredential for use\n   * with a service client.\n   *\n   * @param signature - The initial value of the shared access signature to use in authentication\n   */\n  constructor(signature: string) {\n    if (!signature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = signature;\n  }\n\n  /**\n   * Change the value of the signature.\n   *\n   * Updates will take effect upon the next request after\n   * updating the signature value.\n   *\n   * @param newSignature - The new shared access signature value to be used\n   */\n  public update(newSignature: string): void {\n    if (!newSignature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = newSignature;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}