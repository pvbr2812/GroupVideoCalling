{"ast":null,"code":"import { SpacebarKey } from '@fluentui/keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n/**\n * @description\n * Provides navigation inside the inner focus zone using Tab key\n * @specification\n *  Adds role='radio'. This allows screen readers to handle the component as a radio button.\n *  Adds attribute 'aria-checked=true' based on the property 'checked'.\n *  Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n *  Adds attribute 'data-is-focusable=true' based on the property 'checked'.\n *  Triggers 'performClick' action with 'Spacebar' on 'root'.\n *  Implements roving tabIndex.\n */\n\nexport var radioGroupItemBehavior = function radioGroupItemBehavior(props) {\n  var _ref;\n\n  return {\n    attributes: {\n      root: Object.assign({\n        role: 'radio',\n        tabIndex: props.checked ? 0 : -1\n      }, props.checked && (_ref = {}, _ref[IS_FOCUSABLE_ATTRIBUTE] = true, _ref), {\n        'aria-checked': props.checked,\n        'aria-disabled': props.disabled\n      })\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: SpacebarKey\n          }]\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Radio/radioGroupItemBehavior.ts"],"names":["radioGroupItemBehavior","attributes","root","role","tabIndex","props","disabled","keyActions","performClick","keyCombinations","keyCode","SpacebarKey"],"mappings":"AACA,SAAA,WAAA,QAAA,wBAAA;AACA,SAAA,sBAAA,QAAA,kBAAA;AAEA;;;;;;;;;;;;AAWA,OAAO,IAAMA,sBAAkE,GAAG,SAArEA,sBAAqE,CAAA,KAAA,EAAK;AAAA,MAAA,IAAA;;AAAA,SAAK;AAC1FC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA;AACFC,QAAAA,IAAI,EADF,OAAA;AAEFC,QAAAA,QAAQ,EAAEC,KAAK,CAALA,OAAAA,GAAAA,CAAAA,GAAoB,CAAC;AAF7B,OAAA,EAGEA,KAAK,CAALA,OAAAA,KAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,CAAAA,sBAAAA,CAAAA,GAAAA,IAAAA,EAHF,IAGEA,CAHF,EAAA;AAIF,wBAAgBA,KAAK,CAJnB,OAAA;AAKF,yBAAiBA,KAAK,CAACC;AALrB,OAAA;AADM,KAD8E;AAW1FC,IAAAA,UAAU,EAAE;AACVL,MAAAA,IAAI,EAAE;AACJM,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC;AAAX,WAAD;AADL;AADV;AADI;AAX8E,GAAL;AAAhF,CAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { SpacebarKey } from '@fluentui/keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n\n/**\n * @description\n * Provides navigation inside the inner focus zone using Tab key\n * @specification\n *  Adds role='radio'. This allows screen readers to handle the component as a radio button.\n *  Adds attribute 'aria-checked=true' based on the property 'checked'.\n *  Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n *  Adds attribute 'data-is-focusable=true' based on the property 'checked'.\n *  Triggers 'performClick' action with 'Spacebar' on 'root'.\n *  Implements roving tabIndex.\n */\nexport const radioGroupItemBehavior: Accessibility<RadioGroupItemBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'radio',\n      tabIndex: props.checked ? 0 : -1,\n      ...(props.checked && { [IS_FOCUSABLE_ATTRIBUTE]: true }),\n      'aria-checked': props.checked,\n      'aria-disabled': props.disabled,\n    },\n  },\n\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n\nexport type RadioGroupItemBehaviorProps = {\n  /** Indicates if radio item is selected. */\n  checked?: boolean;\n  /** Indicates if radio item is disabled. */\n  disabled?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}