{"ast":null,"code":"import { getColorScheme } from '../../colors';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { submenuIndicatorUrl } from './submenuIndicatorUrl';\nimport { activeIndicatorUrl } from './activeIndicatorUrl';\nimport { toolbarMenuItemSubmenuIndicatorClassName } from '../../../../components/Toolbar/ToolbarMenuItemSubmenuIndicator';\nimport { toolbarMenuItemActiveIndicatorClassName } from '../../../../components/Toolbar/ToolbarMenuItemActiveIndicator';\nexport var toolbarMenuItemStyles = {\n  root: function root(_ref) {\n    var _hover, _ref2;\n\n    var p = _ref.props,\n        v = _ref.variables,\n        siteVariables = _ref.theme.siteVariables;\n    var colors = getColorScheme(v.colorScheme);\n    var borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: 0\n    });\n    return Object.assign({\n      position: 'relative',\n      color: v.menuItemForeground || colors.foreground1,\n      borderWidth: v.menuBorderWidth,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      display: 'flex',\n      alignItems: 'center',\n      textAlign: 'left',\n      width: '100%',\n      maxWidth: '100%',\n      padding: v.menuItemPadding,\n      cursor: 'pointer',\n      ':focus': {\n        outline: 0\n      },\n      ':hover': (_hover = {\n        color: v.menuItemForegroundHover || colors.menuItemForegroundHover,\n        backgroundColor: v.menuItemBackgroundHover || colors.menuItemBackgroundHover\n      }, _hover[\"& .\" + toolbarMenuItemSubmenuIndicatorClassName] = {\n        backgroundImage: submenuIndicatorUrl(v.menuItemForegroundHover || colors.menuItemForegroundHover)\n      }, _hover[\"& .\" + toolbarMenuItemActiveIndicatorClassName] = {\n        backgroundImage: activeIndicatorUrl(v.menuItemForegroundHover || colors.menuItemForegroundHover)\n      }, _hover),\n      ':focus-visible': borderFocusStyles[':focus-visible']\n    }, p.disabled && (_ref2 = {\n      cursor: 'default',\n      color: v.menuItemForegroundDisabled || colors.foregroundDisabled1,\n      backgroundColor: v.menuItemBackgroundDisabled\n    }, _ref2[\"& .\" + toolbarMenuItemSubmenuIndicatorClassName] = {\n      backgroundImage: submenuIndicatorUrl(v.menuItemForegroundDisabled || colors.foregroundDisabled1)\n    }, _ref2[\"& .\" + toolbarMenuItemActiveIndicatorClassName] = {\n      backgroundImage: activeIndicatorUrl(v.menuItemForegroundDisabled || colors.foregroundDisabled1)\n    }, _ref2[':hover'] = {// empty to overwrite all existing hover styles\n    }, _ref2));\n  },\n  wrapper: function wrapper() {\n    return {\n      display: 'block'\n    };\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Toolbar/toolbarMenuItemStyles.ts"],"names":["toolbarMenuItemStyles","root","props","p","variables","v","theme","siteVariables","colors","getColorScheme","borderFocusStyles","getBorderFocusStyles","borderRadius","position","color","borderWidth","backgroundColor","borderColor","display","alignItems","textAlign","width","maxWidth","padding","cursor","outline","menuItemBackgroundHover","backgroundImage","submenuIndicatorUrl","activeIndicatorUrl","menuItemBackgroundDisabled","wrapper"],"mappings":"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","sourcesContent":["import { ICSSInJSStyle, ComponentSlotStylesPrepared } from '@fluentui/styles';\nimport { getColorScheme } from '../../colors';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { ToolbarMenuItemStylesProps } from '../../../../components/Toolbar/ToolbarMenuItem';\nimport { ToolbarVariables } from './toolbarVariables';\nimport { submenuIndicatorUrl } from './submenuIndicatorUrl';\nimport { activeIndicatorUrl } from './activeIndicatorUrl';\nimport { toolbarMenuItemSubmenuIndicatorClassName } from '../../../../components/Toolbar/ToolbarMenuItemSubmenuIndicator';\nimport { toolbarMenuItemActiveIndicatorClassName } from '../../../../components/Toolbar/ToolbarMenuItemActiveIndicator';\n\nexport const toolbarMenuItemStyles: ComponentSlotStylesPrepared<ToolbarMenuItemStylesProps, ToolbarVariables> = {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const colors = getColorScheme(v.colorScheme);\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: 0,\n    });\n\n    return {\n      position: 'relative',\n      color: v.menuItemForeground || colors.foreground1,\n      borderWidth: v.menuBorderWidth,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      display: 'flex',\n      alignItems: 'center',\n      textAlign: 'left',\n      width: '100%',\n      maxWidth: '100%',\n      padding: v.menuItemPadding,\n      cursor: 'pointer',\n\n      ':focus': {\n        outline: 0,\n      },\n\n      ':hover': {\n        color: v.menuItemForegroundHover || colors.menuItemForegroundHover,\n        backgroundColor: v.menuItemBackgroundHover || colors.menuItemBackgroundHover,\n        [`& .${toolbarMenuItemSubmenuIndicatorClassName}`]: {\n          backgroundImage: submenuIndicatorUrl(v.menuItemForegroundHover || colors.menuItemForegroundHover),\n        },\n        [`& .${toolbarMenuItemActiveIndicatorClassName}`]: {\n          backgroundImage: activeIndicatorUrl(v.menuItemForegroundHover || colors.menuItemForegroundHover),\n        },\n      },\n\n      ':focus-visible': borderFocusStyles[':focus-visible'],\n\n      ...(p.disabled && {\n        cursor: 'default',\n        color: v.menuItemForegroundDisabled || colors.foregroundDisabled1,\n        backgroundColor: v.menuItemBackgroundDisabled,\n        [`& .${toolbarMenuItemSubmenuIndicatorClassName}`]: {\n          backgroundImage: submenuIndicatorUrl(v.menuItemForegroundDisabled || colors.foregroundDisabled1),\n        },\n        [`& .${toolbarMenuItemActiveIndicatorClassName}`]: {\n          backgroundImage: activeIndicatorUrl(v.menuItemForegroundDisabled || colors.foregroundDisabled1),\n        },\n        ':hover': {\n          // empty to overwrite all existing hover styles\n        },\n      }),\n    };\n  },\n\n  wrapper: () => ({\n    display: 'block',\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}