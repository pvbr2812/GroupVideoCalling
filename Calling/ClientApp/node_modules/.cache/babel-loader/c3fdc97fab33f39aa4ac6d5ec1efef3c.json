{"ast":null,"code":"import { keyboardKey } from '@fluentui/keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneTabbableElements, FocusZoneDirection } from '../../focusZone/types';\n/**\n * @description\n * Sets the message to be a focusable element.\n * Adds a vertical circular focus zone navigation where a user navigates using a Tab key.\n * Adds a key action which prevents up and down arrow keys from navigating in FocusZone, we only want a Tab key to navigate.\n * Adds an escape key action which focuses the chat message, i.e., moves key handling from inside a message back to the chat list.\n *\n * @specification\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Focus is moved within the focusable children of the component using TAB key.\n * Does not handle PageDown and PageUp.\n */\n\nexport var chatMessageBehavior = function chatMessageBehavior() {\n  var _root;\n\n  return {\n    attributes: {\n      root: (_root = {}, _root[IS_FOCUSABLE_ATTRIBUTE] = true, _root.tabIndex = -1, _root)\n    },\n    focusZone: {\n      props: {\n        handleTabKey: FocusZoneTabbableElements.all,\n        isCircularNavigation: true,\n        direction: FocusZoneDirection.vertical,\n        pagingSupportDisabled: true\n      }\n    },\n    keyActions: {\n      root: {\n        // prevents default FocusZone behavior, in this case, prevents using arrow keys as navigation (we only want a Tab key to navigate)\n        preventDefault: {\n          keyCombinations: [{\n            keyCode: keyboardKey.ArrowUp\n          }, {\n            keyCode: keyboardKey.ArrowDown\n          }]\n        },\n        focus: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Escape\n          }]\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Chat/chatMessageBehavior.ts"],"names":["chatMessageBehavior","attributes","root","focusZone","props","handleTabKey","FocusZoneTabbableElements","isCircularNavigation","direction","FocusZoneDirection","pagingSupportDisabled","keyActions","preventDefault","keyCombinations","keyCode","keyboardKey","ArrowUp","ArrowDown","focus","Escape"],"mappings":"AAAA,SAAA,WAAA,QAAA,wBAAA;AAEA,SAAA,sBAAA,QAAA,kBAAA;AAEA,SAAA,yBAAA,EAAA,kBAAA,QAAA,uBAAA;AAEA;;;;;;;;;;;;;;AAaA,OAAO,IAAMA,mBAA4D,GAAG,SAA/DA,mBAA+D,GAAA;AAAA,MAAA,KAAA;;AAAA,SAAO;AACjFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,GAAA,KAAA,GAAA,EAAA,EAAA,KAAA,CAAA,sBAAA,CAAA,GAAA,IAAA,EAAA,KAAA,CAAA,QAAA,GAEQ,CAFR,CAAA,EAAA,KAAA;AADM,KADqE;AAOjFC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,YAAY,EAAEC,yBAAyB,CADlC,GAAA;AAELC,QAAAA,oBAAoB,EAFf,IAAA;AAGLC,QAAAA,SAAS,EAAEC,kBAAkB,CAHxB,QAAA;AAILC,QAAAA,qBAAqB,EAAE;AAJlB;AADE,KAPsE;AAejFC,IAAAA,UAAU,EAAE;AACVT,MAAAA,IAAI,EAAE;AACJ;AACAU,QAAAA,cAAc,EAAE;AACdC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAmC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAnC;AADH,SAFZ;AAKJC,QAAAA,KAAK,EAAE;AACLL,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACI;AAAvB,WAAD;AADZ;AALH;AADI;AAfqE,GAAP;AAArE,CAAA","sourcesContent":["import { keyboardKey } from '@fluentui/keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { FocusZoneTabbableElements, FocusZoneDirection } from '../../focusZone/types';\n\n/**\n * @description\n * Sets the message to be a focusable element.\n * Adds a vertical circular focus zone navigation where a user navigates using a Tab key.\n * Adds a key action which prevents up and down arrow keys from navigating in FocusZone, we only want a Tab key to navigate.\n * Adds an escape key action which focuses the chat message, i.e., moves key handling from inside a message back to the chat list.\n *\n * @specification\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Focus is moved within the focusable children of the component using TAB key.\n * Does not handle PageDown and PageUp.\n */\nexport const chatMessageBehavior: Accessibility<ChatMessageBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      tabIndex: -1,\n    },\n  },\n  focusZone: {\n    props: {\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      direction: FocusZoneDirection.vertical,\n      pagingSupportDisabled: true,\n    },\n  },\n  keyActions: {\n    root: {\n      // prevents default FocusZone behavior, in this case, prevents using arrow keys as navigation (we only want a Tab key to navigate)\n      preventDefault: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }, { keyCode: keyboardKey.ArrowDown }],\n      },\n      focus: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type ChatMessageBehaviorProps = never;\n"]},"metadata":{},"sourceType":"module"}