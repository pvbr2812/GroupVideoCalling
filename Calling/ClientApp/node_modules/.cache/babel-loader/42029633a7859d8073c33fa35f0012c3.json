{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport expandProperty from './expandProperty';\n\nfunction mergeBase(longhands, base) {\n  for (var property in longhands) {\n    if (base.hasOwnProperty(property)) {\n      longhands[property] = base[property];\n    }\n  }\n\n  return longhands;\n}\n\nvar priority = ['borderLeft', 'borderRight', 'borderBottom', 'borderTop', 'borderWidth', 'borderStyle', 'borderColor'];\nexport default function expandWithMerge(style) {\n  // we reverse the key order to make sure more specific properties\n  // will always overwrite the unspecific shorthands\n  var sortedKeys = Object.keys(style).sort(function (a, b) {\n    return priority.indexOf(a) && priority.indexOf(b) ? priority.indexOf(a) > priority.indexOf(b) : a > b || -1;\n  }).reverse();\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = sortedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var property = _step.value;\n      var value = style[property];\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        var expansion = expandProperty(property, value);\n\n        if (expansion) {\n          Object.assign(style, mergeBase(expansion, style));\n          delete style[property];\n        }\n      } else if (value === null) {// should skip\n      } else if (Array.isArray(value)) {\n        if (property === 'extend') {\n          value.map(expandWithMerge);\n        } else {\n          var _expansion = expandProperty(property, value);\n\n          if (_expansion) {\n            Object.assign(style, mergeBase(_expansion, style));\n            delete style[property];\n          }\n        }\n      } else if (_typeof(value) === 'object') {\n        expandWithMerge(value);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return style;\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/VSCODE2/communication-services-web-calling-hero/Calling/ClientApp/node_modules/inline-style-expand-shorthand/es/expandWithMerge.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","expandProperty","mergeBase","longhands","base","property","hasOwnProperty","priority","expandWithMerge","style","sortedKeys","Object","keys","sort","a","b","indexOf","reverse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","_step","next","done","value","expansion","assign","Array","isArray","map","_expansion","err"],"mappings":"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","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport expandProperty from './expandProperty';\n\nfunction mergeBase(longhands, base) {\n  for (var property in longhands) {\n    if (base.hasOwnProperty(property)) {\n      longhands[property] = base[property];\n    }\n  }\n\n  return longhands;\n}\n\nvar priority = ['borderLeft', 'borderRight', 'borderBottom', 'borderTop', 'borderWidth', 'borderStyle', 'borderColor'];\nexport default function expandWithMerge(style) {\n  // we reverse the key order to make sure more specific properties\n  // will always overwrite the unspecific shorthands\n  var sortedKeys = Object.keys(style).sort(function (a, b) {\n    return priority.indexOf(a) && priority.indexOf(b) ? priority.indexOf(a) > priority.indexOf(b) : a > b || -1;\n  }).reverse();\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = sortedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var property = _step.value;\n      var value = style[property];\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        var expansion = expandProperty(property, value);\n\n        if (expansion) {\n          Object.assign(style, mergeBase(expansion, style));\n          delete style[property];\n        }\n      } else if (value === null) {// should skip\n      } else if (Array.isArray(value)) {\n        if (property === 'extend') {\n          value.map(expandWithMerge);\n        } else {\n          var _expansion = expandProperty(property, value);\n\n          if (_expansion) {\n            Object.assign(style, mergeBase(_expansion, style));\n            delete style[property];\n          }\n        }\n      } else if (_typeof(value) === 'object') {\n        expandWithMerge(value);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return style;\n}"]},"metadata":{},"sourceType":"module"}