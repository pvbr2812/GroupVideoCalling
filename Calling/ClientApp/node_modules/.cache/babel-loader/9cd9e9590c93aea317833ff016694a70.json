{"ast":null,"code":"export var Telemetry = /*#__PURE__*/function () {\n  function Telemetry() {\n    this.performance = void 0;\n    this.enabled = void 0;\n    this.performance = {};\n    this.enabled = true;\n  }\n\n  var _proto = Telemetry.prototype;\n\n  _proto.reset = function reset() {\n    this.performance = {};\n  };\n\n  return Telemetry;\n}();","map":{"version":3,"sources":["telemetry/types.ts"],"names":["Telemetry","performance","enabled","reset"],"mappings":"AAqBA,OAAA,IAAaA,SAAb,GAAA,aAAA,YAAA;AAIE,WAAA,SAAA,GAAc;AAAA,SAHdC,WAGc,GAAA,KAAA,CAAA;AAAA,SAFdC,OAEc,GAAA,KAAA,CAAA;AACZ,SAAA,WAAA,GAAA,EAAA;AACA,SAAA,OAAA,GAAA,IAAA;AACD;;AAPH,MAAA,MAAA,GAAA,SAAA,CAAA,SAAA;;AAAA,EAAA,MAAA,CAAA,KAAA,GASEC,SAAAA,KAAAA,GAAQ;AACN,SAAA,WAAA,GAAA,EAAA;AAVJ,GAAA;;AAAA,SAAA,SAAA;AAAA,CAAA,EAAA","sourcesContent":["export type ComponentPerfStats = {\n  instances: number;\n  renders: number;\n\n  msTotal: number;\n  msMin: number;\n  msMax: number;\n\n  msResolveVariablesTotal: number;\n  msResolveStylesTotal: number;\n  msRenderStylesTotal: number;\n\n  stylesRootCacheHits: number;\n  stylesSlotsCacheHits: number;\n};\n\nexport type UseTelemetryResult = {\n  setStart: () => void;\n  setEnd: () => void;\n};\n\nexport class Telemetry {\n  performance: Record<string, ComponentPerfStats>;\n  enabled: boolean;\n\n  constructor() {\n    this.performance = {};\n    this.enabled = true;\n  }\n\n  reset() {\n    this.performance = {};\n  }\n}\n"]},"metadata":{},"sourceType":"module"}