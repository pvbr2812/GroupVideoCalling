{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DebugLine } from './DebugLine';\nimport { ScrollToBottom } from './ScrollToBottom';\nvar style = {\n  padding: '8px',\n  whiteSpace: 'pre',\n  lineHeight: 1.4,\n  background: '#222',\n  overflowY: 'auto',\n  color: '#CCC',\n  fontFamily: 'monospace',\n  fontWeight: 'bold'\n};\nexport var DebugComponentViewer = function DebugComponentViewer(props) {\n  var fiberNav = props.fiberNav,\n      onFiberChanged = props.onFiberChanged,\n      onFiberSelected = props.onFiberSelected;\n  var ownerNav = fiberNav.owner || {\n    jsxString: 'unknown'\n  };\n  var parentNavs = [];\n\n  if (fiberNav.owner) {\n    var parentNav = fiberNav.parent;\n\n    while (parentNav && !parentNav.isEqual(ownerNav)) {\n      if (parentNav.fluentUIDebug) parentNavs.unshift(parentNav);\n      parentNav = parentNav.parent;\n    }\n  }\n\n  var component = fiberNav.name && /*#__PURE__*/React.createElement(DebugLine, null, fiberNav.jsxString);\n  return /*#__PURE__*/React.createElement(ScrollToBottom, {\n    style: style\n  }, /*#__PURE__*/React.createElement(DebugLine, _extends({\n    indent: 0\n  }, ownerNav.fluentUIDebug && {\n    actionable: true,\n    tabIndex: 0,\n    onClick: function onClick(e) {\n      e.preventDefault();\n      onFiberChanged(ownerNav);\n    },\n    onMouseEnter: function onMouseEnter(e) {\n      return onFiberSelected(ownerNav);\n    },\n    onMouseLeave: function onMouseLeave(e) {\n      return onFiberSelected(null);\n    }\n  }), ownerNav.jsxString), /*#__PURE__*/React.createElement(DebugLine, {\n    indent: 1,\n    style: {\n      color: '#ba645e'\n    }\n  }, \"render()\"), parentNavs.map(function (parent, i) {\n    return /*#__PURE__*/React.createElement(DebugLine, {\n      key: i,\n      indent: 2 + i,\n      actionable: true,\n      tabIndex: \"0\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        onFiberChanged(parent);\n      },\n      onMouseEnter: function onMouseEnter(e) {\n        return onFiberSelected(parent);\n      },\n      onMouseLeave: function onMouseLeave(e) {\n        return onFiberSelected(null);\n      }\n    }, parent.jsxString);\n  }), /*#__PURE__*/React.createElement(DebugLine, {\n    indent: 3 + (parentNavs.length - 1),\n    active: true,\n    badge: \"selected\",\n    actionable: true,\n    tabIndex: \"0\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      onFiberChanged(fiberNav);\n    },\n    onMouseEnter: function onMouseEnter(e) {\n      return onFiberSelected(fiberNav);\n    },\n    onMouseLeave: function onMouseLeave(e) {\n      return onFiberSelected(null);\n    }\n  }, component));\n};","map":{"version":3,"sources":["components/Debug/DebugComponentViewer.tsx"],"names":["style","padding","whiteSpace","lineHeight","background","overflowY","color","fontFamily","fontWeight","DebugComponentViewer","fiberNav","onFiberChanged","onFiberSelected","props","ownerNav","jsxString","parentNavs","parentNav","component","actionable","tabIndex","onClick","e","onMouseEnter","onMouseLeave","parent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FiberNavigator } from './FiberNavigator';\nimport { DebugLine } from './DebugLine';\nimport { ScrollToBottom } from './ScrollToBottom';\n\nexport type DebugComponentViewerProps = {\n  fiberNav: FiberNavigator;\n  onFiberChanged: (fiberNav: FiberNavigator) => void;\n  onFiberSelected: (fiberNav: FiberNavigator) => void;\n};\n\nconst style: React.CSSProperties = {\n  padding: '8px',\n  whiteSpace: 'pre',\n  lineHeight: 1.4,\n  background: '#222',\n  overflowY: 'auto',\n  color: '#CCC',\n  fontFamily: 'monospace',\n  fontWeight: 'bold',\n};\n\nexport const DebugComponentViewer: React.FC<DebugComponentViewerProps> = props => {\n  const { fiberNav, onFiberChanged, onFiberSelected } = props;\n\n  const ownerNav = fiberNav.owner || ({ jsxString: 'unknown' } as FiberNavigator);\n\n  const parentNavs = [];\n  if (fiberNav.owner) {\n    let parentNav = fiberNav.parent;\n\n    while (parentNav && !parentNav.isEqual(ownerNav)) {\n      if (parentNav.fluentUIDebug) parentNavs.unshift(parentNav);\n      parentNav = parentNav.parent;\n    }\n  }\n\n  const component = fiberNav.name && <DebugLine>{fiberNav.jsxString}</DebugLine>;\n\n  return (\n    <ScrollToBottom style={style}>\n      <DebugLine\n        indent={0}\n        {...(ownerNav.fluentUIDebug && {\n          actionable: true,\n          tabIndex: 0,\n          onClick: e => {\n            e.preventDefault();\n            onFiberChanged(ownerNav);\n          },\n          onMouseEnter: e => onFiberSelected(ownerNav),\n          onMouseLeave: e => onFiberSelected(null),\n        })}\n      >\n        {ownerNav.jsxString}\n      </DebugLine>\n      <DebugLine indent={1} style={{ color: '#ba645e' }}>\n        render()\n      </DebugLine>\n      {parentNavs.map((parent, i) => (\n        <DebugLine\n          key={i}\n          indent={2 + i}\n          actionable\n          tabIndex=\"0\"\n          onClick={e => {\n            e.preventDefault();\n            onFiberChanged(parent);\n          }}\n          onMouseEnter={e => onFiberSelected(parent)}\n          onMouseLeave={e => onFiberSelected(null)}\n        >\n          {parent.jsxString}\n        </DebugLine>\n      ))}\n      <DebugLine\n        indent={3 + (parentNavs.length - 1)}\n        active\n        badge=\"selected\"\n        actionable\n        tabIndex=\"0\"\n        onClick={e => {\n          e.preventDefault();\n          onFiberChanged(fiberNav);\n        }}\n        onMouseEnter={e => onFiberSelected(fiberNav)}\n        onMouseLeave={e => onFiberSelected(null)}\n      >\n        {component}\n      </DebugLine>\n    </ScrollToBottom>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}