{"ast":null,"code":"import { createManager } from '../createManager';\nexport var createDialogManager = function createDialogManager(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  return createManager(Object.assign({}, config, {\n    state: Object.assign({\n      open: false\n    }, config.state),\n    actions: Object.assign({\n      close: function close() {\n        return function () {\n          return {\n            open: false\n          };\n        };\n      },\n      open: function open() {\n        return function () {\n          return {\n            open: true\n          };\n        };\n      }\n    }, config.actions)\n  }));\n};","map":{"version":3,"sources":["managers/dialogManager.ts"],"names":["createDialogManager","config","createManager","state","open","actions","close"],"mappings":"AAAA,SAAA,aAAA,QAAA,kBAAA;AAcA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,MAAA,EAAA;AAAA,MAACC,MAAD,KAAA,KAAA,CAAA,EAAA;AAACA,IAAAA,MAAD,GAAA,EAACA;AAAD;;AAAA,SACjCC,aAAa,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAEXC,IAAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA;AACHC,MAAAA,IAAI,EAAE;AADH,KAAA,EAEAH,MAAM,CAJA,KAEN,CAFM;AAMXI,IAAAA,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA;AACLC,MAAAA,KAAK,EAAE,SAAA,KAAA,GAAA;AAAA,eAAM,YAAA;AAAA,iBAAO;AAAEF,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAN,SAAA;AADF,OAAA;AAELA,MAAAA,IAAI,EAAE,SAAA,IAAA,GAAA;AAAA,eAAM,YAAA;AAAA,iBAAO;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAN,SAAA;AAAA;AAFD,KAAA,EAGFH,MAAM,CAHJ,OAAA;AANI,GAAA,CAAA,CADoB;AAA5B,CAAA","sourcesContent":["import { createManager } from '../createManager';\nimport { Manager, ManagerConfig } from '../types';\n\nexport type DialogActions = {\n  close: () => void;\n  open: () => void;\n};\n\nexport type DialogState = {\n  open: boolean;\n};\n\nexport type DialogManager = Manager<DialogState, DialogActions>;\n\nexport const createDialogManager = (config: Partial<ManagerConfig<DialogState, DialogActions>> = {}): DialogManager =>\n  createManager<DialogState, DialogActions>({\n    ...config,\n    state: {\n      open: false,\n      ...config.state,\n    },\n    actions: {\n      close: () => () => ({ open: false }),\n      open: () => () => ({ open: true }),\n      ...config.actions,\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}