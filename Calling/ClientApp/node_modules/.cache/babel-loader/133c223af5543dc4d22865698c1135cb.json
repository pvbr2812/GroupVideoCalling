{"ast":null,"code":"// $FlowFixMe\nimport { useContext } from 'react';\nimport { combineRules } from 'fela';\nimport { RendererContext, ThemeContext } from './context';\nexport default function useFela() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var renderer = useContext(RendererContext);\n  var theme = useContext(ThemeContext) || {};\n\n  if (!renderer) {\n    throw new Error('The \"useFela\" hook can only be used  inside a \"RendererProvider\"');\n  }\n\n  var propsWithTheme = {\n    theme: theme\n  };\n  if (props) Object.assign(propsWithTheme, props);\n\n  function css() {\n    return renderer.renderRule(combineRules.apply(undefined, arguments), propsWithTheme);\n  }\n\n  return {\n    renderer: renderer,\n    theme: theme,\n    css: css\n  };\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/VSCODE2/communication-services-web-calling-hero/Calling/ClientApp/node_modules/react-fela/es/useFela.js"],"names":["useContext","combineRules","RendererContext","ThemeContext","useFela","props","arguments","length","undefined","renderer","theme","Error","propsWithTheme","Object","assign","css","renderRule","apply"],"mappings":"AACA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,WAA9C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,MAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AAEA,MAAIG,QAAQ,GAAGT,UAAU,CAACE,eAAD,CAAzB;AACA,MAAIQ,KAAK,GAAGV,UAAU,CAACG,YAAD,CAAV,IAA4B,EAAxC;;AAEA,MAAI,CAACM,QAAL,EAAe;AACb,UAAM,IAAIE,KAAJ,CAAU,kEAAV,CAAN;AACD;;AAED,MAAIC,cAAc,GAAG;AAAEF,IAAAA,KAAK,EAAEA;AAAT,GAArB;AACA,MAAIL,KAAJ,EAAWQ,MAAM,CAACC,MAAP,CAAcF,cAAd,EAA8BP,KAA9B;;AAEX,WAASU,GAAT,GAAe;AACb,WAAON,QAAQ,CAACO,UAAT,CAAoBf,YAAY,CAACgB,KAAb,CAAmBT,SAAnB,EAA8BF,SAA9B,CAApB,EAA8DM,cAA9D,CAAP;AACD;;AAED,SAAO;AACLH,IAAAA,QAAQ,EAAEA,QADL;AAELC,IAAAA,KAAK,EAAEA,KAFF;AAGLK,IAAAA,GAAG,EAAEA;AAHA,GAAP;AAKD","sourcesContent":["\n// $FlowFixMe\nimport { useContext } from 'react';\nimport { combineRules } from 'fela';\n\nimport { RendererContext, ThemeContext } from './context';\n\nexport default function useFela() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var renderer = useContext(RendererContext);\n  var theme = useContext(ThemeContext) || {};\n\n  if (!renderer) {\n    throw new Error('The \"useFela\" hook can only be used  inside a \"RendererProvider\"');\n  }\n\n  var propsWithTheme = { theme: theme };\n  if (props) Object.assign(propsWithTheme, props);\n\n  function css() {\n    return renderer.renderRule(combineRules.apply(undefined, arguments), propsWithTheme);\n  }\n\n  return {\n    renderer: renderer,\n    theme: theme,\n    css: css\n  };\n}"]},"metadata":{},"sourceType":"module"}