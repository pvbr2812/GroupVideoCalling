{"ast":null,"code":"// Copy of sindre's leven, wrapped in dead code elimination for production\n// https://github.com/sindresorhus/leven/blob/master/index.js\n\n/* eslint-disable */\nvar leven = function leven(a, b) {\n  return 0;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var arr = [];\n  var charCodeCache = [];\n\n  leven = function leven(a, b) {\n    if (a === b) return 0;\n    var aLen = a.length;\n    var bLen = b.length;\n    if (aLen === 0) return bLen;\n    if (bLen === 0) return aLen;\n    var bCharCode;\n    var ret;\n    var tmp;\n    var tmp2;\n    var i = 0;\n    var j = 0;\n\n    while (i < aLen) {\n      charCodeCache[i] = a.charCodeAt(i);\n      arr[i] = ++i;\n    }\n\n    while (j < bLen) {\n      bCharCode = b.charCodeAt(j);\n      tmp = j++;\n      ret = j;\n\n      for (i = 0; i < aLen; i++) {\n        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;\n        tmp = arr[i];\n        ret = arr[i] = tmp > ret ? tmp2 > ret ? ret + 1 : tmp2 : tmp2 > tmp ? tmp + 1 : tmp2;\n      }\n    }\n\n    return ret;\n  };\n}\n\nexport default leven;","map":{"version":3,"sources":["leven.ts"],"names":["leven","process","arr","charCodeCache","a","aLen","bLen","b","i","j","bCharCode","tmp","ret","tmp2"],"mappings":"AAAA;AACA;;AACA;AAEA,IAAIA,KAAK,GAAG,SAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,SAAA,CAAA;AAAZ,CAAA;;AAEA,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AACzC,MAAMC,GAAa,GAAnB,EAAA;AACA,MAAMC,aAAuB,GAA7B,EAAA;;AAEAH,EAAAA,KAAK,GAAG,SAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAU;AAChB,QAAII,CAAC,KAAL,CAAA,EAAa,OAAA,CAAA;AAEb,QAAMC,IAAI,GAAGD,CAAC,CAAd,MAAA;AACA,QAAME,IAAI,GAAGC,CAAC,CAAd,MAAA;AAEA,QAAIF,IAAI,KAAR,CAAA,EAAgB,OAAA,IAAA;AAChB,QAAIC,IAAI,KAAR,CAAA,EAAgB,OAAA,IAAA;AAEhB,QAAA,SAAA;AACA,QAAA,GAAA;AACA,QAAA,GAAA;AACA,QAAA,IAAA;AACA,QAAIE,CAAC,GAAL,CAAA;AACA,QAAIC,CAAC,GAAL,CAAA;;AAEA,WAAOD,CAAC,GAAR,IAAA,EAAiB;AACfL,MAAAA,aAAa,CAAbA,CAAa,CAAbA,GAAmBC,CAAC,CAADA,UAAAA,CAAnBD,CAAmBC,CAAnBD;AACAD,MAAAA,GAAG,CAAHA,CAAG,CAAHA,GAAS,EAATA,CAAAA;AACD;;AAED,WAAOO,CAAC,GAAR,IAAA,EAAiB;AACfC,MAAAA,SAAS,GAAGH,CAAC,CAADA,UAAAA,CAAZG,CAAYH,CAAZG;AACAC,MAAAA,GAAG,GAAGF,CAANE,EAAAA;AACAC,MAAAA,GAAG,GAAHA,CAAAA;;AAEA,WAAKJ,CAAC,GAAN,CAAA,EAAYA,CAAC,GAAb,IAAA,EAAsBA,CAAtB,EAAA,EAA2B;AACzBK,QAAAA,IAAI,GAAGH,SAAS,KAAKP,aAAa,CAA3BO,CAA2B,CAA3BA,GAAAA,GAAAA,GAAuCC,GAAG,GAAjDE,CAAAA;AACAF,QAAAA,GAAG,GAAGT,GAAG,CAATS,CAAS,CAATA;AACAC,QAAAA,GAAG,GAAGV,GAAG,CAAHA,CAAG,CAAHA,GAASS,GAAG,GAAHA,GAAAA,GAAaE,IAAI,GAAJA,GAAAA,GAAaD,GAAG,GAAhBC,CAAAA,GAAbF,IAAAA,GAA4CE,IAAI,GAAJA,GAAAA,GAAaF,GAAG,GAAhBE,CAAAA,GAA3DD,IAAAA;AACD;AACF;;AAED,WAAA,GAAA;AAjCFZ,GAAAA;AAmCD;;AAED,eAAA,KAAA","sourcesContent":["// Copy of sindre's leven, wrapped in dead code elimination for production\n// https://github.com/sindresorhus/leven/blob/master/index.js\n/* eslint-disable */\n\nlet leven = (a, b) => 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const arr: number[] = [];\n  const charCodeCache: number[] = [];\n\n  leven = (a, b) => {\n    if (a === b) return 0;\n\n    const aLen = a.length;\n    const bLen = b.length;\n\n    if (aLen === 0) return bLen;\n    if (bLen === 0) return aLen;\n\n    let bCharCode;\n    let ret;\n    let tmp;\n    let tmp2;\n    let i = 0;\n    let j = 0;\n\n    while (i < aLen) {\n      charCodeCache[i] = a.charCodeAt(i);\n      arr[i] = ++i;\n    }\n\n    while (j < bLen) {\n      bCharCode = b.charCodeAt(j);\n      tmp = j++;\n      ret = j;\n\n      for (i = 0; i < aLen; i++) {\n        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;\n        tmp = arr[i];\n        ret = arr[i] = tmp > ret ? (tmp2 > ret ? ret + 1 : tmp2) : tmp2 > tmp ? tmp + 1 : tmp2;\n      }\n    }\n\n    return ret;\n  };\n}\n\nexport default leven;\n"]},"metadata":{},"sourceType":"module"}