{"ast":null,"code":"/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n *\n * @param handledProps - An array with names of props\n * @param props - A ReactElement props object\n * @returns A shallow copy of the prop object\n */\nexport function getUnhandledProps(handledProps, props) {\n  return Object.keys(props).reduce(function (acc, prop) {\n    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];\n    return acc;\n  }, {});\n}","map":{"version":3,"sources":["utils/getUnhandledProps.ts"],"names":["handledProps","acc","props"],"mappings":"AAAA;;;;;;;;AAQA,OAAO,SAAA,iBAAA,CAAA,YAAA,EAAA,KAAA,EAA2G;AAChH,SAAO,MAAM,CAAN,IAAA,CAAA,KAAA,EAAA,MAAA,CAAsC,UAAA,GAAA,EAAA,IAAA,EAAe;AAC1D,QAAIA,YAAY,CAAZA,OAAAA,CAAAA,IAAAA,MAA+B,CAAnC,CAAA,EAAwCC,GAAD,CAAA,IAAA,CAACA,GAAoBC,KAAK,CAA1B,IAA0B,CAAzBD;AAExC,WAAA,GAAA;AAHK,GAAA,EAAP,EAAO,CAAP;AAKD","sourcesContent":["/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n *\n * @param handledProps - An array with names of props\n * @param props - A ReactElement props object\n * @returns A shallow copy of the prop object\n */\nexport function getUnhandledProps<P extends Record<string, any>>(handledProps: (keyof P)[], props: P): Partial<P> {\n  return Object.keys(props).reduce<Partial<P>>((acc, prop) => {\n    if (handledProps.indexOf(prop) === -1) (acc as any)[prop] = props[prop];\n\n    return acc;\n  }, {});\n}\n"]},"metadata":{},"sourceType":"module"}