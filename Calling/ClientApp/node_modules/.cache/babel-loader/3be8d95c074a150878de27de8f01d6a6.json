{"ast":null,"code":"import { pxToRem } from '../../../../utils';\nimport { getColorScheme } from '../../colors';\nexport var carouselNavigationStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    var iconOnly = p.iconOnly,\n        primary = p.primary,\n        vertical = p.vertical,\n        thumbnails = p.thumbnails;\n    var colors = getColorScheme(v.colorScheme, null, primary);\n    return Object.assign({\n      display: 'flex',\n      minHeight: pxToRem(24),\n      margin: 0,\n      padding: 0,\n      color: v.color,\n      backgroundColor: v.backgroundColor || 'inherit',\n      listStyleType: 'none',\n      justifyContent: 'center'\n    }, !vertical && thumbnails && {\n      justifyContent: 'start',\n      transform: \"translateX(\" + pxToRem(v.width / 2 - v.thumbnailWidth / 2 - +p.activeIndex * v.thumbnailWidth) + \")\",\n      transition: 'transform .5s ease'\n    }, iconOnly && {\n      alignItems: 'center'\n    }, vertical && Object.assign({\n      flexDirection: 'column',\n      backgroundColor: v.verticalBackgroundColor,\n      width: 'fit-content',\n      padding: pxToRem(8) + \" 0\"\n    }, iconOnly && {\n      display: 'inline-block',\n      width: 'auto'\n    }), !iconOnly && !vertical && {\n      // primary has hardcoded grey border color\n      border: v.borderWidth + \" solid \" + (primary ? v.primaryBorderColor : v.borderColor || colors.border),\n      borderRadius: pxToRem(4)\n    });\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Carousel/carouselNavigationStyles.ts"],"names":["carouselNavigationStyles","root","props","p","variables","v","iconOnly","primary","vertical","thumbnails","colors","getColorScheme","display","minHeight","pxToRem","margin","padding","color","backgroundColor","listStyleType","justifyContent","transform","transition","alignItems","flexDirection","width","border","borderRadius"],"mappings":"AAGA,SAAA,OAAA,QAAA,mBAAA;AACA,SAAA,cAAA,QAAA,cAAA;AAEA,OAAO,IAAMA,wBAGZ,GAAG;AACFC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAA+C;AAAA,QAArCE,CAAqC,GAAA,IAAA,CAA5CD,KAA4C;AAAA,QAAvBG,CAAuB,GAAA,IAAA,CAAlCD,SAAkC;AAAA,QAC3CE,QAD2C,GACCH,CADD,CAAA,QAAA;AAAA,QACjCI,OADiC,GACCJ,CADD,CAAA,OAAA;AAAA,QACxBK,QADwB,GACCL,CADD,CAAA,QAAA;AAAA,QACdM,UADc,GACCN,CADD,CAAA,UAAA;AAEnD,QAAMO,MAAM,GAAGC,cAAc,CAACN,CAAC,CAAF,WAAA,EAAA,IAAA,EAA7B,OAA6B,CAA7B;AAEA,WAAA,MAAA,CAAA,MAAA,CAAA;AACEO,MAAAA,OAAO,EADT,MAAA;AAEEC,MAAAA,SAAS,EAAEC,OAAO,CAFpB,EAEoB,CAFpB;AAGEC,MAAAA,MAAM,EAHR,CAAA;AAIEC,MAAAA,OAAO,EAJT,CAAA;AAKEC,MAAAA,KAAK,EAAEZ,CAAC,CALV,KAAA;AAMEa,MAAAA,eAAe,EAAEb,CAAC,CAADA,eAAAA,IANnB,SAAA;AAOEc,MAAAA,aAAa,EAPf,MAAA;AAQEC,MAAAA,cAAc,EAAE;AARlB,KAAA,EASM,CAAA,QAAA,IAAA,UAAA,IACY;AACZA,MAAAA,cAAc,EADF,OAAA;AAEZC,MAAAA,SAAS,EAAA,gBAAgBP,OAAO,CAACT,CAAC,CAADA,KAAAA,GAAAA,CAAAA,GAAcA,CAAC,CAADA,cAAAA,GAAdA,CAAAA,GAAqC,CAACF,CAAC,CAAF,WAAA,GAAiBE,CAAC,CAA/E,cAAuB,CAAvB,GAFG,GAAA;AAGZiB,MAAAA,UAAU,EAAE;AAHA,KAVlB,EAeMhB,QAAQ,IAAI;AAAEiB,MAAAA,UAAU,EAAE;AAAd,KAflB,EAiBMf,QAAQ,IAAA,MAAA,CAAA,MAAA,CAAA;AACVgB,MAAAA,aAAa,EADH,QAAA;AAEVN,MAAAA,eAAe,EAAEb,CAAC,CAFR,uBAAA;AAGVoB,MAAAA,KAAK,EAHK,aAAA;AAIVT,MAAAA,OAAO,EAAKF,OAAO,CAAZ,CAAY,CAAPA,GAAL;AAJG,KAAA,EAKNR,QAAQ,IAAI;AACdM,MAAAA,OAAO,EADO,cAAA;AAEda,MAAAA,KAAK,EAAE;AAFO,KALN,CAjBd,EA4BM,CAAA,QAAA,IACF,CADE,QAAA,IACW;AACX;AACAC,MAAAA,MAAM,EAAKrB,CAAC,CAAN,WAAKA,GAAL,SAAKA,IAAuBE,OAAO,GAAGF,CAAC,CAAJ,kBAAA,GAA0BA,CAAC,CAADA,WAAAA,IAAiBK,MAAM,CAF/E,MAEAL,CAFA;AAGXsB,MAAAA,YAAY,EAAEb,OAAO,CAAA,CAAA;AAHV,KA7BjB,CAAA;AAmCD;AAxCC,CAHG","sourcesContent":["import { CarouselNavigationStylesProps } from '../../../../components/Carousel/CarouselNavigation';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CarouselNavigationVariables } from './carouselNavigationVariables';\nimport { pxToRem } from '../../../../utils';\nimport { getColorScheme } from '../../colors';\n\nexport const carouselNavigationStyles: ComponentSlotStylesPrepared<\n  CarouselNavigationStylesProps,\n  CarouselNavigationVariables\n> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const { iconOnly, primary, vertical, thumbnails } = p;\n    const colors = getColorScheme(v.colorScheme, null, primary);\n\n    return {\n      display: 'flex',\n      minHeight: pxToRem(24),\n      margin: 0,\n      padding: 0,\n      color: v.color,\n      backgroundColor: v.backgroundColor || 'inherit',\n      listStyleType: 'none',\n      justifyContent: 'center',\n      ...(!vertical &&\n        thumbnails && {\n          justifyContent: 'start',\n          transform: `translateX(${pxToRem(v.width / 2 - v.thumbnailWidth / 2 - +p.activeIndex * v.thumbnailWidth)})`,\n          transition: 'transform .5s ease',\n        }),\n      ...(iconOnly && { alignItems: 'center' }),\n\n      ...(vertical && {\n        flexDirection: 'column',\n        backgroundColor: v.verticalBackgroundColor,\n        width: 'fit-content',\n        padding: `${pxToRem(8)} 0`,\n        ...(iconOnly && {\n          display: 'inline-block',\n          width: 'auto',\n        }),\n      }),\n\n      ...(!iconOnly &&\n        !vertical && {\n          // primary has hardcoded grey border color\n          border: `${v.borderWidth} solid ${primary ? v.primaryBorderColor : v.borderColor || colors.border}`,\n          borderRadius: pxToRem(4),\n        }),\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"module"}