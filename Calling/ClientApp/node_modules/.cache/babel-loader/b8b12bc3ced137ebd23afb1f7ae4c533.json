{"ast":null,"code":"import arrayEach from 'fast-loops/lib/arrayEach';\nimport { RULE_TYPE, getRuleScore } from 'fela-utils';\nimport rehydrateSupportRules from './rehydration/rehydrateSupportRules';\nimport rehydrateRules from './rehydration/rehydrateRules';\nimport calculateNodeScore from './connection/calculateNodeScore';\nimport render from './render';\nvar CLASSNAME_REGEX = /[.][a-z0-9_-]*/gi; // rehydration (WIP)\n// TODO: static, keyframe, font\n\nexport default function rehydrate(renderer) {\n  var targetDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  render(renderer, targetDocument);\n  arrayEach(targetDocument.querySelectorAll('[data-fela-type]'), function (node) {\n    var rehydrationAttribute = node.getAttribute('data-fela-rehydration') || -1;\n    var rehydrationIndex = renderer.uniqueRuleIdentifier || parseInt(rehydrationAttribute, 10); // skip rehydration if no rehydration index is set\n    // this index is set to -1 if something blocks rehydration\n\n    if (rehydrationIndex !== -1) {\n      var type = node.getAttribute('data-fela-type') || '';\n      var media = node.getAttribute('media') || '';\n      var support = node.getAttribute('data-fela-support') || '';\n      var css = node.textContent;\n      renderer.uniqueRuleIdentifier = rehydrationIndex;\n      var reference = type + media + support;\n      renderer.nodes[reference] = {\n        score: calculateNodeScore({\n          type: type,\n          media: media,\n          support: support\n        }, renderer.mediaQueryOrder),\n        node: node\n      };\n\n      if (type === RULE_TYPE) {\n        if (support) {\n          rehydrateSupportRules(css, media, renderer.cache);\n        } else {\n          rehydrateRules(css, media, '', renderer.cache);\n        } // On Safari, style sheets with IE-specific media queries\n        // can yield null for node.sheet\n        // https://github.com/rofrischmann/fela/issues/431#issuecomment-423239591\n\n\n        if (node.sheet && node.sheet.cssRules) {\n          var nodeReference = media + support;\n          arrayEach(node.sheet.cssRules, function (rule, index) {\n            var selectorText = rule.conditionText ? rule.cssRules[0].selectorText : rule.selectorText;\n            var score = getRuleScore(renderer.ruleOrder, selectorText.split(CLASSNAME_REGEX)[1]);\n\n            if (score === 0) {\n              renderer.scoreIndex[nodeReference] = index;\n            }\n\n            rule.score = score;\n          });\n        }\n      }\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/Teams_Clone/Group_Call/Calling/ClientApp/node_modules/fela-dom/es/dom/rehydrate.js"],"names":["arrayEach","RULE_TYPE","getRuleScore","rehydrateSupportRules","rehydrateRules","calculateNodeScore","render","CLASSNAME_REGEX","rehydrate","renderer","targetDocument","arguments","length","undefined","document","querySelectorAll","node","rehydrationAttribute","getAttribute","rehydrationIndex","uniqueRuleIdentifier","parseInt","type","media","support","css","textContent","reference","nodes","score","mediaQueryOrder","cache","sheet","cssRules","nodeReference","rule","index","selectorText","conditionText","ruleOrder","split","scoreIndex"],"mappings":"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","sourcesContent":["import arrayEach from 'fast-loops/lib/arrayEach';\nimport { RULE_TYPE, getRuleScore } from 'fela-utils';\n\nimport rehydrateSupportRules from './rehydration/rehydrateSupportRules';\nimport rehydrateRules from './rehydration/rehydrateRules';\nimport calculateNodeScore from './connection/calculateNodeScore';\n\nimport render from './render';\n\nvar CLASSNAME_REGEX = /[.][a-z0-9_-]*/gi;\n\n// rehydration (WIP)\n// TODO: static, keyframe, font\nexport default function rehydrate(renderer) {\n  var targetDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n\n  render(renderer, targetDocument);\n\n  arrayEach(targetDocument.querySelectorAll('[data-fela-type]'), function (node) {\n    var rehydrationAttribute = node.getAttribute('data-fela-rehydration') || -1;\n    var rehydrationIndex = renderer.uniqueRuleIdentifier || parseInt(rehydrationAttribute, 10);\n\n    // skip rehydration if no rehydration index is set\n    // this index is set to -1 if something blocks rehydration\n    if (rehydrationIndex !== -1) {\n      var type = node.getAttribute('data-fela-type') || '';\n      var media = node.getAttribute('media') || '';\n      var support = node.getAttribute('data-fela-support') || '';\n      var css = node.textContent;\n\n      renderer.uniqueRuleIdentifier = rehydrationIndex;\n\n      var reference = type + media + support;\n      renderer.nodes[reference] = {\n        score: calculateNodeScore({ type: type, media: media, support: support }, renderer.mediaQueryOrder),\n        node: node\n      };\n\n      if (type === RULE_TYPE) {\n        if (support) {\n          rehydrateSupportRules(css, media, renderer.cache);\n        } else {\n          rehydrateRules(css, media, '', renderer.cache);\n        }\n\n        // On Safari, style sheets with IE-specific media queries\n        // can yield null for node.sheet\n        // https://github.com/rofrischmann/fela/issues/431#issuecomment-423239591\n        if (node.sheet && node.sheet.cssRules) {\n          var nodeReference = media + support;\n\n          arrayEach(node.sheet.cssRules, function (rule, index) {\n            var selectorText = rule.conditionText ? rule.cssRules[0].selectorText : rule.selectorText;\n\n            var score = getRuleScore(renderer.ruleOrder, selectorText.split(CLASSNAME_REGEX)[1]);\n\n            if (score === 0) {\n              renderer.scoreIndex[nodeReference] = index;\n            }\n\n            rule.score = score;\n          });\n        }\n      }\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}