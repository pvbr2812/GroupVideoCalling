{"ast":null,"code":"import _map from \"lodash/map\";\nimport _filter from \"lodash/filter\";\nimport _invoke from \"lodash/invoke\";\nimport _values from \"lodash/values\";\nimport { menuBehavior } from '@fluentui/accessibility';\nimport { compose, getElementType, mergeVariablesOverrides, useAccessibility, useFluentContext, useAutoControlled, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { childrenExist, createShorthand, createShorthandFactory, commonPropTypes, getKindProp, rtlTextContainer } from '../../utils';\nimport { MenuItem } from './MenuItem';\nimport { MenuDivider } from './MenuDivider';\nimport { MenuItemIcon } from './MenuItemIcon';\nimport { MenuItemContent } from './MenuItemContent';\nimport { MenuItemIndicator } from './MenuItemIndicator';\nimport { MenuItemWrapper } from './MenuItemWrapper';\nimport { MenuContextProvider } from './menuContext';\nexport var menuClassName = 'ui-menu';\n\nfunction useActualProps(props) {\n  var actualProps = React.useRef(props);\n  React.useEffect(function () {\n    actualProps.current = props;\n  });\n  return actualProps;\n}\n\nfunction useSlotProps(slotName, slotsProps) {\n  var slotProps = slotsProps[slotName];\n  return React.useMemo(function () {\n    return slotProps;\n  }, // `slotProps` has a stable order of keys so an amount of dependencies will not change between renders\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  _values(slotProps));\n}\n/**\n * A Menu is a component that offers a grouped list of choices to the user.\n *\n * @accessibility\n * Implements ARIA [Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu), [Toolbar](https://www.w3.org/TR/wai-aria-practices-1.1/#toolbar) or [Tabs](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) design pattern, depending on the behavior used.\n * @accessibilityIssues\n * [JAWS - navigation instruction for menubar](https://github.com/FreedomScientific/VFO-standards-support/issues/203)\n * [JAWS - navigation instruction for menu with aria-orientation=\"horizontal\"](https://github.com/FreedomScientific/VFO-standards-support/issues/204)\n * [JAWS [VC] doesn't narrate menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/324)\n * [JAWS [app mode] focus moves to second menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/325)\n * [Enter into a tablist JAWS narrates: To switch pages, press Control+PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/337)\n * 51114083 VoiceOver+Web narrate wrong position in menu / total count of menu items, when pseudo element ::after or ::before is used\n */\n\n\nexport var Menu = /*#__PURE__*/function () {\n  var Menu = compose(function (props, ref, composeOptions) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(composeOptions.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var iconOnly = props.iconOnly,\n        items = props.items,\n        pills = props.pills,\n        pointing = props.pointing,\n        primary = props.primary,\n        underlined = props.underlined,\n        vertical = props.vertical,\n        submenu = props.submenu,\n        children = props.children,\n        variables = props.variables,\n        styles = props.styles,\n        fluid = props.fluid,\n        className = props.className,\n        design = props.design,\n        secondary = props.secondary,\n        accessibility = props.accessibility;\n    var ElementType = getElementType(props);\n    var slotProps = composeOptions.resolveSlotProps(props);\n    var itemProps = useSlotProps('item', slotProps);\n    var dividerProps = useSlotProps('divider', slotProps);\n    var unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          vertical: vertical\n        };\n      },\n      rtl: context.rtl\n    });\n    var actualProps = useActualProps(props);\n\n    var _useStyles = useStyles(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions: composeOptions,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          iconOnly: iconOnly,\n          fluid: fluid,\n          pointing: pointing,\n          pills: pills,\n          primary: primary,\n          underlined: underlined,\n          vertical: vertical,\n          secondary: secondary,\n          submenu: submenu\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl,\n      unstable_props: props\n    }),\n        classes = _useStyles.classes;\n\n    var _useAutoControlled = useAutoControlled({\n      defaultValue: props.defaultActiveIndex,\n      value: props.activeIndex,\n      initialValue: undefined\n    }),\n        activeIndex = _useAutoControlled[0],\n        setIndex = _useAutoControlled[1];\n\n    var setActiveIndex = React.useCallback(function (e, activeIndex) {\n      _invoke(actualProps.current, 'onActiveIndexChange', e, Object.assign({}, actualProps.current, {\n        activeIndex: activeIndex\n      }));\n\n      setIndex(activeIndex);\n    }, [actualProps, setIndex]);\n    var handleClick = React.useCallback(function (e, itemProps) {\n      var index = itemProps.index;\n      setActiveIndex(e, index);\n\n      _invoke(actualProps.current, 'onItemClick', e, itemProps);\n    }, [actualProps, setActiveIndex]);\n\n    var handleItemOverrides = function handleItemOverrides(predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          handleClick(e, itemProps);\n\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n        },\n        onActiveChanged: function onActiveChanged(e, props) {\n          var index = props.index,\n              active = props.active;\n\n          if (active) {\n            setActiveIndex(e, index);\n          } else if (activeIndex === index) {\n            setActiveIndex(e, null);\n          }\n\n          _invoke(predefinedProps, 'onActiveChanged', e, props);\n        },\n        variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n      };\n    };\n\n    var handleDividerOverrides = function handleDividerOverrides(predefinedProps) {\n      return {\n        variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n      };\n    };\n\n    var renderItems = function renderItems() {\n      var itemsCount = _filter(items, function (item) {\n        return getKindProp(item, 'item') !== 'divider';\n      }).length;\n\n      var itemPosition = 0;\n      return _map(items, function (item, index) {\n        var kind = getKindProp(item, 'item');\n\n        if (kind === 'divider') {\n          return createShorthand(composeOptions.slots.divider, item, {\n            defaultProps: function defaultProps() {\n              return getA11yProps('divider', {});\n            },\n            overrideProps: handleDividerOverrides\n          });\n        }\n\n        itemPosition++;\n        return createShorthand(composeOptions.slots.item, item, {\n          defaultProps: function defaultProps() {\n            return getA11yProps('item', {\n              index: index,\n              itemPosition: itemPosition,\n              itemsCount: itemsCount\n            });\n          },\n          overrideProps: handleItemOverrides\n        });\n      });\n    };\n\n    var childBehaviors = accessibility && accessibility(props).childBehaviors;\n    var childProps = {\n      activeIndex: +activeIndex,\n      onItemClick: handleClick,\n      variables: variables,\n      slotProps: {\n        item: itemProps,\n        divider: dividerProps\n      },\n      behaviors: {\n        item: childBehaviors == null ? void 0 : childBehaviors.item,\n        divider: childBehaviors == null ? void 0 : childBehaviors.divider\n      },\n      slots: {\n        menu: composeOptions.slots.__self\n      }\n    };\n    var element = getA11yProps.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, rtlTextContainer.getAttributes({\n      forElements: [children]\n    }), unhandledProps)), /*#__PURE__*/React.createElement(MenuContextProvider, {\n      value: childProps\n    }, childrenExist(children) ? children : renderItems())));\n    var wrappedElement = ref ? /*#__PURE__*/React.createElement(Ref, {\n      innerRef: ref\n    }, element) : element;\n    setEnd();\n    return wrappedElement;\n  }, {\n    className: menuClassName,\n    displayName: 'Menu',\n    slots: {\n      divider: MenuDivider,\n      item: MenuItem\n    },\n    slotProps: function slotProps(props) {\n      return {\n        divider: {\n          inSubmenu: props.submenu,\n          pills: props.pills,\n          pointing: props.pointing,\n          primary: props.primary,\n          secondary: props.secondary,\n          vertical: props.vertical\n        },\n        item: {\n          iconOnly: props.iconOnly,\n          indicator: props.indicator,\n          inSubmenu: props.submenu,\n          pills: props.pills,\n          pointing: props.pointing,\n          primary: props.primary,\n          secondary: props.secondary,\n          vertical: props.vertical,\n          underlined: props.underlined\n        }\n      };\n    },\n    handledProps: ['accessibility', 'as', 'className', 'children', 'design', 'styles', 'variables', 'activeIndex', 'defaultActiveIndex', 'fluid', 'iconOnly', 'items', 'onItemClick', 'onActiveIndexChange', 'pills', 'pointing', 'primary', 'secondary', 'underlined', 'vertical', 'submenu', 'indicator'],\n    shorthandConfig: {\n      mappedArrayProp: 'items'\n    }\n  });\n  Menu.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: false\n  }), {\n    activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    fluid: PropTypes.bool,\n    iconOnly: PropTypes.bool,\n    items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n    onItemClick: PropTypes.func,\n    onActiveIndexChange: PropTypes.func,\n    pills: PropTypes.bool,\n    pointing: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['start', 'end'])]),\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    underlined: PropTypes.bool,\n    vertical: PropTypes.bool,\n    submenu: PropTypes.bool,\n    indicator: customPropTypes.shorthandAllowingChildren\n  });\n  Menu.defaultProps = {\n    as: 'ul',\n    accessibility: menuBehavior\n  };\n  Menu.Item = MenuItem;\n  Menu.ItemIcon = MenuItemIcon;\n  Menu.ItemContent = MenuItemContent;\n  Menu.ItemWrapper = MenuItemWrapper;\n  Menu.ItemIndicator = MenuItemIndicator;\n  Menu.Divider = MenuDivider;\n  Menu.create = createShorthandFactory({\n    Component: Menu,\n    mappedArrayProp: 'items'\n  });\n  return Menu;\n}();","map":{"version":3,"sources":["components/Menu/Menu.tsx"],"names":["menuClassName","actualProps","React","slotProps","slotsProps","Menu","compose","context","useFluentContext","setStart","setEnd","useTelemetry","composeOptions","iconOnly","items","pills","pointing","primary","underlined","vertical","submenu","children","variables","styles","fluid","className","design","secondary","accessibility","props","ElementType","getElementType","itemProps","useSlotProps","dividerProps","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","mapPropsToBehavior","rtl","useActualProps","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","activeIndex","setIndex","useAutoControlled","defaultValue","value","initialValue","undefined","setActiveIndex","handleClick","index","handleItemOverrides","onClick","onActiveChanged","active","mergeVariablesOverrides","predefinedProps","handleDividerOverrides","renderItems","itemsCount","getKindProp","itemPosition","kind","createShorthand","defaultProps","overrideProps","childBehaviors","childProps","onItemClick","item","divider","behaviors","slots","menu","__self","element","root","forElements","childrenExist","wrappedElement","ref","displayName","MenuItem","inSubmenu","indicator","handledProps","shorthandConfig","mappedArrayProp","content","PropTypes","defaultActiveIndex","customPropTypes","onActiveIndexChange","shorthandAllowingChildren","as","menuBehavior","createShorthandFactory","Component"],"mappings":"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","sourcesContent":["import { Accessibility, menuBehavior, MenuBehaviorProps } from '@fluentui/accessibility';\nimport {\n  compose,\n  ComponentWithAs,\n  getElementType,\n  mergeVariablesOverrides,\n  useAccessibility,\n  useFluentContext,\n  useAutoControlled,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  ShorthandConfig,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ShorthandCollection, ShorthandValue, ComponentEventHandler } from '../../types';\nimport {\n  childrenExist,\n  createShorthand,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  getKindProp,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { MenuItem, MenuItemProps } from './MenuItem';\nimport { MenuDivider, MenuDividerProps } from './MenuDivider';\nimport { MenuItemIcon } from './MenuItemIcon';\nimport { MenuItemContent } from './MenuItemContent';\nimport { MenuItemIndicator, MenuItemIndicatorProps } from './MenuItemIndicator';\nimport { MenuItemWrapper } from './MenuItemWrapper';\nimport { MenuContextProvider, MenuContextValue } from './menuContext';\n\nexport type MenuShorthandKinds = {\n  divider: MenuDividerProps;\n  item: MenuItemProps;\n};\n\nexport interface MenuProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuAsToolbarBehavior, tabListBehavior, tabBehavior\n   */\n  accessibility?: Accessibility<MenuBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number | string;\n\n  /** A vertical menu may take the size of its container. */\n  fluid?: boolean;\n\n  /** A menu may have just icons. */\n  iconOnly?: boolean;\n\n  /** Shorthand array of props for Menu. */\n  items?: ShorthandCollection<MenuItemProps, MenuShorthandKinds>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Called when the active index of the Menu changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeIndex` reflecting the new state.\n   */\n  onActiveIndexChange?: ComponentEventHandler<MenuProps>;\n\n  /** A menu can adjust its appearance to de-emphasize its contents. */\n  pills?: boolean;\n\n  /**\n   * A menu can point to show its relationship to nearby content.\n   * For vertical menu, it can point to the start of the item or to the end.\n   */\n  pointing?: boolean | 'start' | 'end';\n\n  /** The menu can have primary type. */\n  primary?: boolean;\n\n  /** The menu can have secondary type. */\n  secondary?: boolean;\n\n  /** Menu items can by highlighted using underline. */\n  underlined?: boolean;\n\n  /** A vertical menu displays elements vertically. */\n  vertical?: boolean;\n\n  /** Indicates whether the menu is submenu. */\n  submenu?: boolean;\n\n  /** Shorthand for the submenu indicator. */\n  indicator?: ShorthandValue<MenuItemIndicatorProps>;\n}\n\nexport const menuClassName = 'ui-menu';\n\nexport type MenuStylesProps = Pick<\n  MenuProps,\n  'iconOnly' | 'fluid' | 'pointing' | 'pills' | 'primary' | 'underlined' | 'vertical' | 'submenu' | 'secondary'\n>;\n\nfunction useActualProps<P>(props: P) {\n  const actualProps = React.useRef<P>(props);\n\n  React.useEffect(() => {\n    actualProps.current = props;\n  });\n\n  return actualProps;\n}\n\nfunction useSlotProps<SlotProps, SlotName extends keyof SlotProps>(\n  slotName: SlotName,\n  slotsProps: SlotProps,\n): SlotProps[SlotName] {\n  const slotProps = slotsProps[slotName];\n\n  return React.useMemo(\n    () => slotProps,\n    // `slotProps` has a stable order of keys so an amount of dependencies will not change between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    _.values(slotProps),\n  );\n}\n\n/**\n * A Menu is a component that offers a grouped list of choices to the user.\n *\n * @accessibility\n * Implements ARIA [Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu), [Toolbar](https://www.w3.org/TR/wai-aria-practices-1.1/#toolbar) or [Tabs](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) design pattern, depending on the behavior used.\n * @accessibilityIssues\n * [JAWS - navigation instruction for menubar](https://github.com/FreedomScientific/VFO-standards-support/issues/203)\n * [JAWS - navigation instruction for menu with aria-orientation=\"horizontal\"](https://github.com/FreedomScientific/VFO-standards-support/issues/204)\n * [JAWS [VC] doesn't narrate menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/324)\n * [JAWS [app mode] focus moves to second menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/325)\n * [Enter into a tablist JAWS narrates: To switch pages, press Control+PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/337)\n * 51114083 VoiceOver+Web narrate wrong position in menu / total count of menu items, when pseudo element ::after or ::before is used\n */\nexport const Menu = compose<'ul', MenuProps, MenuStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const {\n      iconOnly,\n      items,\n      pills,\n      pointing,\n      primary,\n      underlined,\n      vertical,\n      submenu,\n      children,\n      variables,\n      styles,\n      fluid,\n      className,\n      design,\n      secondary,\n      accessibility,\n    } = props;\n\n    const ElementType = getElementType(props);\n\n    const slotProps = composeOptions.resolveSlotProps(props);\n\n    const itemProps = useSlotProps('item', slotProps);\n    const dividerProps = useSlotProps('divider', slotProps);\n\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const getA11yProps = useAccessibility<MenuBehaviorProps>(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        vertical,\n      }),\n      rtl: context.rtl,\n    });\n\n    const actualProps = useActualProps(props);\n\n    const { classes } = useStyles<MenuStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        iconOnly,\n        fluid,\n        pointing,\n        pills,\n        primary,\n        underlined,\n        vertical,\n        secondary,\n        submenu,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const [activeIndex, setIndex] = useAutoControlled({\n      defaultValue: props.defaultActiveIndex,\n      value: props.activeIndex,\n      initialValue: undefined,\n    });\n\n    const setActiveIndex = React.useCallback(\n      (e: React.SyntheticEvent, activeIndex: number) => {\n        _.invoke(actualProps.current, 'onActiveIndexChange', e, { ...actualProps.current, activeIndex });\n        setIndex(activeIndex);\n      },\n      [actualProps, setIndex],\n    );\n\n    const handleClick = React.useCallback(\n      (e, itemProps) => {\n        const { index } = itemProps;\n        setActiveIndex(e, index);\n        _.invoke(actualProps.current, 'onItemClick', e, itemProps);\n      },\n      [actualProps, setActiveIndex],\n    );\n\n    const handleItemOverrides = (predefinedProps: MenuItemProps): MenuItemProps => ({\n      onClick: (e, itemProps) => {\n        handleClick(e, itemProps);\n        _.invoke(predefinedProps, 'onClick', e, itemProps);\n      },\n      onActiveChanged: (e, props) => {\n        const { index, active } = props;\n        if (active) {\n          setActiveIndex(e, index);\n        } else if (activeIndex === index) {\n          setActiveIndex(e, null);\n        }\n        _.invoke(predefinedProps, 'onActiveChanged', e, props);\n      },\n      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n    });\n\n    const handleDividerOverrides = predefinedProps => ({\n      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n    });\n\n    const renderItems = () => {\n      const itemsCount = _.filter(items, item => getKindProp(item, 'item') !== 'divider').length;\n      let itemPosition = 0;\n\n      return _.map(items, (item, index) => {\n        const kind = getKindProp(item, 'item');\n\n        if (kind === 'divider') {\n          return createShorthand(composeOptions.slots.divider, item, {\n            defaultProps: () => getA11yProps('divider', {}),\n            overrideProps: handleDividerOverrides,\n          });\n        }\n\n        itemPosition++;\n\n        return createShorthand(composeOptions.slots.item, item, {\n          defaultProps: () =>\n            getA11yProps('item', {\n              index,\n              itemPosition,\n              itemsCount,\n            }),\n          overrideProps: handleItemOverrides,\n        });\n      });\n    };\n\n    const childBehaviors = accessibility && accessibility(props).childBehaviors;\n\n    const childProps: MenuContextValue = {\n      activeIndex: +activeIndex,\n      onItemClick: handleClick,\n      variables,\n\n      slotProps: {\n        item: itemProps,\n        divider: dividerProps,\n      },\n\n      behaviors: {\n        item: childBehaviors?.item,\n        divider: childBehaviors?.divider,\n      },\n\n      slots: {\n        menu: composeOptions.slots.__self,\n      },\n    };\n\n    const element = getA11yProps.unstable_wrapWithFocusZone(\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...rtlTextContainer.getAttributes({ forElements: [children] }),\n          ...unhandledProps,\n        })}\n      >\n        <MenuContextProvider value={childProps}>\n          {childrenExist(children) ? children : renderItems()}\n        </MenuContextProvider>\n      </ElementType>,\n    );\n    const wrappedElement = ref ? <Ref innerRef={ref}>{element}</Ref> : element;\n\n    setEnd();\n\n    return wrappedElement;\n  },\n  {\n    className: menuClassName,\n    displayName: 'Menu',\n\n    slots: {\n      divider: MenuDivider,\n      item: MenuItem,\n    },\n    slotProps: props => ({\n      divider: {\n        inSubmenu: props.submenu,\n        pills: props.pills,\n        pointing: props.pointing,\n        primary: props.primary,\n        secondary: props.secondary,\n        vertical: props.vertical,\n      },\n      item: {\n        iconOnly: props.iconOnly,\n        indicator: props.indicator,\n        inSubmenu: props.submenu,\n        pills: props.pills,\n        pointing: props.pointing,\n        primary: props.primary,\n        secondary: props.secondary,\n        vertical: props.vertical,\n        underlined: props.underlined,\n      },\n    }),\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'className',\n      'children',\n      'design',\n      'styles',\n      'variables',\n      'activeIndex',\n      'defaultActiveIndex',\n      'fluid',\n      'iconOnly',\n      'items',\n      'onItemClick',\n      'onActiveIndexChange',\n      'pills',\n      'pointing',\n      'primary',\n      'secondary',\n      'underlined',\n      'vertical',\n      'submenu',\n      'indicator',\n    ],\n    shorthandConfig: {\n      mappedArrayProp: 'items',\n    },\n  },\n) as ComponentWithAs<'ul', MenuProps> & {\n  create: ShorthandFactory<MenuProps>;\n  shorthandConfig: ShorthandConfig<MenuProps>;\n\n  Item: typeof MenuItem;\n  ItemContent: typeof MenuItemContent;\n  ItemIcon: typeof MenuItemIcon;\n  ItemIndicator: typeof MenuItemIndicator;\n  ItemWrapper: typeof MenuItemWrapper;\n  Divider: typeof MenuDivider;\n};\n\nMenu.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  fluid: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n  onItemClick: PropTypes.func,\n  onActiveIndexChange: PropTypes.func,\n  pills: PropTypes.bool,\n  pointing: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'start' | 'end'>(['start', 'end'])]),\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  underlined: PropTypes.bool,\n  vertical: PropTypes.bool,\n  submenu: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n};\nMenu.defaultProps = {\n  as: 'ul',\n  accessibility: menuBehavior,\n};\n\nMenu.Item = MenuItem;\nMenu.ItemIcon = MenuItemIcon;\nMenu.ItemContent = MenuItemContent;\nMenu.ItemWrapper = MenuItemWrapper;\nMenu.ItemIndicator = MenuItemIndicator;\nMenu.Divider = MenuDivider;\n\nMenu.create = createShorthandFactory({ Component: Menu, mappedArrayProp: 'items' });\n"]},"metadata":{},"sourceType":"module"}