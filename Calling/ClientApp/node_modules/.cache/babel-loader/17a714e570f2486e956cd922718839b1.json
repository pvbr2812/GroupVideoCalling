{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"; //\n// This file is one-to-one copy-paste from Fela source code. It includes `_renderStyleToClassNames()` and all\n// non-exported utils.\n// A single change is only one line inside `generateDeclarationReference()`.\n//\n// @ts-ignore\n\nimport cssifyDeclaration from 'css-in-js-utils/lib/cssifyDeclaration';\nimport { // @ts-ignore\ngenerateCombinedMediaQuery // @ts-ignore\n, generateCSSSelector // @ts-ignore\n, isMediaQuery // @ts-ignore\n, isNestedSelector // @ts-ignore\n, isSupport // @ts-ignore\n, isUndefinedValue // @ts-ignore\n, normalizeNestedProperty, RULE_TYPE } from 'fela-utils';\n\nfunction isPlainObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n\nvar chars = 'abcdefghijklmnopqrstuvwxyz';\nvar charLength = chars.length;\n\nfunction generateUniqueClassName(id, className) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  if (id <= charLength) {\n    return chars[id - 1] + className;\n  } // Bitwise floor as safari performs much faster\n  // https://jsperf.com/math-floor-vs-math-round-vs-parseint/55\n\n\n  return generateUniqueClassName(id / charLength | 0, chars[id % charLength] + className);\n}\n\nfunction generateClassName(getId, filterClassName) {\n  if (filterClassName === void 0) {\n    filterClassName = function filterClassName() {\n      return true;\n    };\n  }\n\n  var startId = getId();\n  var generatedClassName = generateUniqueClassName(startId);\n\n  if (!filterClassName(generatedClassName)) {\n    return generateClassName(getId, filterClassName);\n  }\n\n  return generatedClassName;\n}\n\nfunction generateDeclarationReference(property, value, pseudo, media, support) {\n  if (pseudo === void 0) {\n    pseudo = '';\n  }\n\n  if (media === void 0) {\n    media = '';\n  }\n\n  if (support === void 0) {\n    support = '';\n  } //\n  // This a single perf change here, it removes `camelCaseProperty()` call\n  //\n  // CHANGE:START\n\n\n  return support + media + pseudo + property + value; // CHANGE:END\n} //\n\n\nexport function felaPerformanceEnhancer(renderer) {\n  renderer._renderStyleToClassNames = function _renderStyleToClassNames(_ref, pseudo, media, support) {\n    if (pseudo === void 0) {\n      pseudo = '';\n    }\n\n    if (media === void 0) {\n      media = '';\n    }\n\n    if (support === void 0) {\n      support = '';\n    }\n\n    var _className = _ref._className,\n        style = _objectWithoutPropertiesLoose(_ref, [\"_className\"]);\n\n    var classNames = _className ? \" \" + _className : '';\n\n    for (var property in style) {\n      var value = style[property];\n\n      if (isPlainObject(value)) {\n        if (isNestedSelector(property)) {\n          classNames += renderer._renderStyleToClassNames(value, pseudo + normalizeNestedProperty(property), media, support);\n        } else if (isMediaQuery(property)) {\n          var combinedMediaQuery = generateCombinedMediaQuery(media, property.slice(6).trim());\n          classNames += renderer._renderStyleToClassNames(value, pseudo, combinedMediaQuery, support);\n        } else if (isSupport(property)) {\n          var combinedSupport = generateCombinedMediaQuery(support, property.slice(9).trim());\n          classNames += renderer._renderStyleToClassNames(value, pseudo, media, combinedSupport);\n        } else {\n          // eslint-disable-next-line no-console\n          console.warn(\"The object key \\\"\" + property + \"\\\" is not a valid nested key in Fela.\\nMaybe you forgot to add a plugin to resolve it?\\nCheck http://fela.js.org/docs/basics/Rules.html#styleobject for more information.\");\n        }\n      } else {\n        var declarationReference = generateDeclarationReference(property, value, pseudo, media, support);\n\n        if (!renderer.cache.hasOwnProperty(declarationReference)) {\n          // we remove undefined values to enable\n          // usage of optional props without side-effects\n          if (isUndefinedValue(value)) {\n            renderer.cache[declarationReference] = {\n              className: ''\n            };\n            /* eslint-disable no-continue */\n\n            continue;\n            /* eslint-enable */\n          }\n\n          var className = renderer.selectorPrefix + generateClassName(renderer.getNextRuleIdentifier, renderer.filterClassName);\n          var declaration = cssifyDeclaration(property, value);\n          var selector = generateCSSSelector(className, pseudo);\n          var change = {\n            type: RULE_TYPE,\n            className: className,\n            selector: selector,\n            declaration: declaration,\n            pseudo: pseudo,\n            media: media,\n            support: support\n          };\n          renderer.cache[declarationReference] = change;\n\n          renderer._emitChange(change);\n        }\n\n        var cachedClassName = renderer.cache[declarationReference].className; // only append if we got a class cached\n\n        if (cachedClassName) {\n          classNames += \" \" + cachedClassName;\n        }\n      }\n    }\n\n    return classNames;\n  };\n\n  return renderer;\n}","map":{"version":3,"sources":["felaPerformanceEnhancer.ts"],"names":["val","Array","chars","charLength","className","id","generateUniqueClassName","filterClassName","startId","getId","generatedClassName","generateClassName","pseudo","media","support","renderer","_className","style","classNames","value","isPlainObject","isNestedSelector","normalizeNestedProperty","isMediaQuery","combinedMediaQuery","generateCombinedMediaQuery","property","isSupport","combinedSupport","console","declarationReference","generateDeclarationReference","isUndefinedValue","declaration","cssifyDeclaration","selector","generateCSSSelector","change","type","cachedClassName"],"mappings":"qGAAA;AACA;AACA;AACA;AACA;AAGA;;AACA,OAAA,iBAAA,MAAA,uCAAA;AACA,SACE;AADF,0BAAA,CAGE;AAHF,EAAA,mBAAA,CAKE;AALF,EAAA,YAAA,CAOE;AAPF,EAAA,gBAAA,CASE;AATF,EAAA,SAAA,CAWE;AAXF,EAAA,gBAAA,CAaE;AAbF,EAAA,uBAAA,EAAA,SAAA,QAAA,YAAA;;AAoBA,SAAA,aAAA,CAAA,GAAA,EAAiC;AAC/B,SAAOA,GAAG,IAAHA,IAAAA,IAAe,OAAA,GAAA,KAAfA,QAAAA,IAA0CC,KAAK,CAALA,OAAAA,CAAAA,GAAAA,MAAjD,KAAA;AACD;;AAED,IAAMC,KAAK,GAAX,4BAAA;AACA,IAAMC,UAAU,GAAGD,KAAK,CAAxB,MAAA;;AAEA,SAAA,uBAAA,CAAA,EAAA,EAAA,SAAA,EAA6E;AAAA,MAAhCE,SAAgC,KAAA,KAAA,CAAA,EAAA;AAAhCA,IAAAA,SAAgC,GAAZ,EAApBA;AAAgC;;AAC3E,MAAIC,EAAE,IAAN,UAAA,EAAsB;AACpB,WAAOH,KAAK,CAACG,EAAE,GAARH,CAAK,CAALA,GAAP,SAAA;AAFyE,GAAA,CAK3E;AACA;;;AACA,SAAOI,uBAAuB,CAAED,EAAE,GAAH,UAACA,GAAF,CAAA,EAAwBH,KAAK,CAACG,EAAE,GAARH,UAAK,CAALA,GAAtD,SAA8B,CAA9B;AACD;;AAED,SAAA,iBAAA,CAAA,KAAA,EAAA,eAAA,EAA4F;AAAA,MAAhDK,eAAgD,KAAA,KAAA,CAAA,EAAA;AAAhDA,IAAAA,eAAgD,GAApB,SAAA,eAAA,GAAA;AAAA,aAAA,IAAA;AAAoB,KAAhDA;AAAgD;;AAC1F,MAAMC,OAAO,GAAGC,KAAhB,EAAA;AACA,MAAMC,kBAAkB,GAAGJ,uBAAuB,CAAlD,OAAkD,CAAlD;;AAEA,MAAI,CAACC,eAAe,CAApB,kBAAoB,CAApB,EAA0C;AACxC,WAAOI,iBAAiB,CAAA,KAAA,EAAxB,eAAwB,CAAxB;AACD;;AAED,SAAA,kBAAA;AACD;;AAED,SAAA,4BAAA,CAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAMU;AAAA,MAHRC,MAGQ,KAAA,KAAA,CAAA,EAAA;AAHRA,IAAAA,MAGQ,GAHS,EAAjBA;AAGQ;;AAAA,MAFRC,KAEQ,KAAA,KAAA,CAAA,EAAA;AAFRA,IAAAA,KAEQ,GAFQ,EAAhBA;AAEQ;;AAAA,MADRC,OACQ,KAAA,KAAA,CAAA,EAAA;AADRA,IAAAA,OACQ,GADU,EAAlBA;AACQ,GAAA,CACR;AACA;AACA;AAEA;;;AACA,SAAOA,OAAO,GAAPA,KAAAA,GAAAA,MAAAA,GAAAA,QAAAA,GANC,KAMR,CANQ,CAOR;EAGF;;;AAEA,OAAO,SAAA,uBAAA,CAAA,QAAA,EAAyD;AAC9DC,EAAAA,QAAQ,CAARA,wBAAAA,GAAoC,SAAA,wBAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAK1B;AAAA,QAHRH,MAGQ,KAAA,KAAA,CAAA,EAAA;AAHRA,MAAAA,MAGQ,GAHS,EAAjBA;AAGQ;;AAAA,QAFRC,KAEQ,KAAA,KAAA,CAAA,EAAA;AAFRA,MAAAA,KAEQ,GAFQ,EAAhBA;AAEQ;;AAAA,QADRC,OACQ,KAAA,KAAA,CAAA,EAAA;AADRA,MAAAA,OACQ,GADU,EAAlBA;AACQ;;AAAA,QAJNE,UAIM,GAAA,IAAA,CAJNA,UAIM;AAAA,QAJSC,KAIT,GAAA,6BAAA,CAAA,IAAA,EAAA,CAAA,YAAA,CAAA,CAAA;;AACR,QAAIC,UAAU,GAAGF,UAAU,GAAA,MAAA,UAAA,GAA3B,EAAA;;AAEA,SAAK,IAAL,QAAA,IAAA,KAAA,EAA8B;AAC5B,UAAMG,KAAK,GAAGF,KAAK,CAAnB,QAAmB,CAAnB;;AAEA,UAAIG,aAAa,CAAjB,KAAiB,CAAjB,EAA0B;AACxB,YAAIC,gBAAgB,CAApB,QAAoB,CAApB,EAAgC;AAC9BH,UAAAA,UAAU,IAAIH,QAAQ,CAARA,wBAAAA,CAAAA,KAAAA,EAEZH,MAAM,GAAGU,uBAAuB,CAFpBP,QAEoB,CAFpBA,EAAAA,KAAAA,EAAdG,OAAcH,CAAdG;AADF,SAAA,MAOO,IAAIK,YAAY,CAAhB,QAAgB,CAAhB,EAA4B;AACjC,cAAMC,kBAAkB,GAAGC,0BAA0B,CAAA,KAAA,EAAQC,QAAQ,CAARA,KAAAA,CAAAA,CAAAA,EAA7D,IAA6DA,EAAR,CAArD;AACAR,UAAAA,UAAU,IAAIH,QAAQ,CAARA,wBAAAA,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,kBAAAA,EAAdG,OAAcH,CAAdG;AAFK,SAAA,MAGA,IAAIS,SAAS,CAAb,QAAa,CAAb,EAAyB;AAC9B,cAAMC,eAAe,GAAGH,0BAA0B,CAAA,OAAA,EAAUC,QAAQ,CAARA,KAAAA,CAAAA,CAAAA,EAA5D,IAA4DA,EAAV,CAAlD;AACAR,UAAAA,UAAU,IAAIH,QAAQ,CAARA,wBAAAA,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAdG,eAAcH,CAAdG;AAFK,SAAA,MAGA;AACL;AACAW,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,sBAAAA,QAAAA,GAAAA,2KAAAA;AAGD;AAnBH,OAAA,MAoBO;AACL,YAAMC,oBAAoB,GAAGC,4BAA4B,CAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAzD,OAAyD,CAAzD;;AAEA,YAAI,CAAChB,QAAQ,CAARA,KAAAA,CAAAA,cAAAA,CAAL,oBAAKA,CAAL,EAA0D;AACxD;AACA;AACA,cAAIiB,gBAAgB,CAApB,KAAoB,CAApB,EAA6B;AAC3BjB,YAAAA,QAAQ,CAARA,KAAAA,CAAAA,oBAAAA,IAAuC;AACrCX,cAAAA,SAAS,EAAE;AAD0B,aAAvCW;AAGA;;AACA;AACA;AACD;;AAED,cAAMX,SAAS,GACbW,QAAQ,CAARA,cAAAA,GAA0BJ,iBAAiB,CAACI,QAAQ,CAAT,qBAAA,EAAiCA,QAAQ,CADtF,eAC6C,CAD7C;AAGA,cAAMkB,WAAW,GAAGC,iBAAiB,CAAA,QAAA,EAArC,KAAqC,CAArC;AACA,cAAMC,QAAQ,GAAGC,mBAAmB,CAAA,SAAA,EAApC,MAAoC,CAApC;AAEA,cAAMC,MAAM,GAAG;AACbC,YAAAA,IAAI,EADS,SAAA;AAEblC,YAAAA,SAAS,EAFI,SAAA;AAGb+B,YAAAA,QAAQ,EAHK,QAAA;AAIbF,YAAAA,WAAW,EAJE,WAAA;AAKbrB,YAAAA,MAAM,EALO,MAAA;AAMbC,YAAAA,KAAK,EANQ,KAAA;AAObC,YAAAA,OAAO,EAAPA;AAPa,WAAf;AAUAC,UAAAA,QAAQ,CAARA,KAAAA,CAAAA,oBAAAA,IAAAA,MAAAA;;AACAA,UAAAA,QAAQ,CAARA,WAAAA,CAAAA,MAAAA;AACD;;AAED,YAAMwB,eAAe,GAAGxB,QAAQ,CAARA,KAAAA,CAAAA,oBAAAA,EAnCnB,SAmCL,CAnCK,CAqCL;;AACA,YAAA,eAAA,EAAqB;AACnBG,UAAAA,UAAU,IAAA,MAAVA,eAAAA;AACD;AACF;AACF;;AAED,WAAA,UAAA;AA3EFH,GAAAA;;AA8EA,SAAA,QAAA;AACD","sourcesContent":["//\n// This file is one-to-one copy-paste from Fela source code. It includes `_renderStyleToClassNames()` and all\n// non-exported utils.\n// A single change is only one line inside `generateDeclarationReference()`.\n//\n\nimport { ICSSInJSStyle } from '@fluentui/styles';\n// @ts-ignore\nimport cssifyDeclaration from 'css-in-js-utils/lib/cssifyDeclaration';\nimport {\n  // @ts-ignore\n  generateCombinedMediaQuery,\n  // @ts-ignore\n  generateCSSSelector,\n  // @ts-ignore\n  isMediaQuery,\n  // @ts-ignore\n  isNestedSelector,\n  // @ts-ignore\n  isSupport,\n  // @ts-ignore\n  isUndefinedValue,\n  // @ts-ignore\n  normalizeNestedProperty,\n  RULE_TYPE,\n} from 'fela-utils';\n\nimport { FelaRenderer, FelaRendererChange } from './types';\n\nfunction isPlainObject(val: any) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n\nconst chars = 'abcdefghijklmnopqrstuvwxyz';\nconst charLength = chars.length;\n\nfunction generateUniqueClassName(id: number, className: string = ''): string {\n  if (id <= charLength) {\n    return chars[id - 1] + className;\n  }\n\n  // Bitwise floor as safari performs much faster\n  // https://jsperf.com/math-floor-vs-math-round-vs-parseint/55\n  return generateUniqueClassName((id / charLength) | 0, chars[id % charLength] + className);\n}\n\nfunction generateClassName(getId: Function, filterClassName: Function = () => true): string {\n  const startId = getId();\n  const generatedClassName = generateUniqueClassName(startId);\n\n  if (!filterClassName(generatedClassName)) {\n    return generateClassName(getId, filterClassName);\n  }\n\n  return generatedClassName;\n}\n\nfunction generateDeclarationReference(\n  property: string,\n  value: any,\n  pseudo: string = '',\n  media: string = '',\n  support: string = '',\n): string {\n  //\n  // This a single perf change here, it removes `camelCaseProperty()` call\n  //\n\n  // CHANGE:START\n  return support + media + pseudo + property + value;\n  // CHANGE:END\n}\n\n//\n\nexport function felaPerformanceEnhancer(renderer: FelaRenderer) {\n  renderer._renderStyleToClassNames = function _renderStyleToClassNames(\n    { _className, ...style }: ICSSInJSStyle & { _className: string },\n    pseudo: string = '',\n    media: string = '',\n    support: string = '',\n  ): string {\n    let classNames = _className ? ` ${_className}` : '';\n\n    for (const property in style) {\n      const value = style[property];\n\n      if (isPlainObject(value)) {\n        if (isNestedSelector(property)) {\n          classNames += renderer._renderStyleToClassNames(\n            value,\n            pseudo + normalizeNestedProperty(property),\n            media,\n            support,\n          );\n        } else if (isMediaQuery(property)) {\n          const combinedMediaQuery = generateCombinedMediaQuery(media, property.slice(6).trim());\n          classNames += renderer._renderStyleToClassNames(value, pseudo, combinedMediaQuery, support);\n        } else if (isSupport(property)) {\n          const combinedSupport = generateCombinedMediaQuery(support, property.slice(9).trim());\n          classNames += renderer._renderStyleToClassNames(value, pseudo, media, combinedSupport);\n        } else {\n          // eslint-disable-next-line no-console\n          console.warn(`The object key \"${property}\" is not a valid nested key in Fela.\nMaybe you forgot to add a plugin to resolve it?\nCheck http://fela.js.org/docs/basics/Rules.html#styleobject for more information.`);\n        }\n      } else {\n        const declarationReference = generateDeclarationReference(property, value, pseudo, media, support);\n\n        if (!renderer.cache.hasOwnProperty(declarationReference)) {\n          // we remove undefined values to enable\n          // usage of optional props without side-effects\n          if (isUndefinedValue(value)) {\n            renderer.cache[declarationReference] = {\n              className: '',\n            } as FelaRendererChange;\n            /* eslint-disable no-continue */\n            continue;\n            /* eslint-enable */\n          }\n\n          const className =\n            renderer.selectorPrefix + generateClassName(renderer.getNextRuleIdentifier, renderer.filterClassName);\n\n          const declaration = cssifyDeclaration(property, value);\n          const selector = generateCSSSelector(className, pseudo);\n\n          const change = {\n            type: RULE_TYPE,\n            className,\n            selector,\n            declaration,\n            pseudo,\n            media,\n            support,\n          };\n\n          renderer.cache[declarationReference] = change;\n          renderer._emitChange(change);\n        }\n\n        const cachedClassName = renderer.cache[declarationReference].className;\n\n        // only append if we got a class cached\n        if (cachedClassName) {\n          classNames += ` ${cachedClassName}`;\n        }\n      }\n    }\n\n    return classNames;\n  };\n\n  return renderer;\n}\n"]},"metadata":{},"sourceType":"module"}