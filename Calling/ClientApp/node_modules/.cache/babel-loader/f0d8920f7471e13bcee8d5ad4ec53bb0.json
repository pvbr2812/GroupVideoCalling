{"ast":null,"code":"import * as React from 'react';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { useTelemetry, useFluentContext, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nexport var headerDescriptionClassName = 'ui-header__description';\n/**\n * A HeaderDescription provides more detailed information about the Header.\n */\n\nexport var HeaderDescription = /*#__PURE__*/function () {\n  var HeaderDescription = function HeaderDescription(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(HeaderDescription.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var children = props.children,\n        content = props.content,\n        color = props.color,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(HeaderDescription.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: HeaderDescription.displayName,\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(HeaderDescription.displayName, {\n      className: headerDescriptionClassName,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          color: color\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps, rtlTextContainer.getAttributes({\n      forElements: [children, content]\n    }))), childrenExist(children) ? children : content);\n    setEnd();\n    return element;\n  };\n\n  HeaderDescription.displayName = 'HeaderDescription';\n  HeaderDescription.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    color: true\n  }));\n  HeaderDescription.defaultProps = {\n    as: 'p'\n  };\n  HeaderDescription.handledProps = Object.keys(HeaderDescription.propTypes);\n  HeaderDescription.create = createShorthandFactory({\n    Component: HeaderDescription,\n    mappedProp: 'content'\n  });\n  return HeaderDescription;\n}();","map":{"version":3,"sources":["components/Header/HeaderDescription.tsx"],"names":["headerDescriptionClassName","HeaderDescription","context","useFluentContext","setStart","setEnd","useTelemetry","children","content","color","className","design","styles","variables","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","element","root","forElements","childrenExist","as","Object","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface HeaderDescriptionProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport const headerDescriptionClassName = 'ui-header__description';\nexport type HeaderDescriptionStylesProps = Pick<HeaderDescriptionProps, 'color'>;\n\n/**\n * A HeaderDescription provides more detailed information about the Header.\n */\nexport const HeaderDescription: ComponentWithAs<'p', HeaderDescriptionProps> &\n  FluentComponentStaticProps<HeaderDescriptionProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(HeaderDescription.displayName, context.telemetry);\n  setStart();\n  const { children, content, color, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(HeaderDescription.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: HeaderDescription.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<HeaderDescriptionStylesProps>(HeaderDescription.displayName, {\n    className: headerDescriptionClassName,\n    mapPropsToStyles: () => ({\n      color,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nHeaderDescription.displayName = 'HeaderDescription';\n\nHeaderDescription.propTypes = {\n  ...commonPropTypes.createCommon({ color: true }),\n};\n\nHeaderDescription.defaultProps = {\n  as: 'p',\n};\n\nHeaderDescription.handledProps = Object.keys(HeaderDescription.propTypes) as any;\n\nHeaderDescription.create = createShorthandFactory({\n  Component: HeaderDescription,\n  mappedProp: 'content',\n});\n"]},"metadata":{},"sourceType":"module"}