{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\n\nvar TopicCredentials =\n/** @class */\nfunction (_super) {\n  __extends(TopicCredentials, _super);\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @param topicKey - The EventGrid topic key\n   */\n\n\n  function TopicCredentials(topicKey) {\n    var _this = this;\n\n    if (!topicKey || topicKey && typeof topicKey !== \"string\") {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n\n    var options = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey\n      }\n    };\n    _this = _super.call(this, options) || this;\n    return _this;\n  }\n\n  return TopicCredentials;\n}(ApiKeyCredentials);\n\nexport { TopicCredentials };","map":{"version":3,"sources":["../../../src/credentials/topicCredentials.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA,SAAS,iBAAT,QAA2D,qBAA3D;;AAEA,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;AACpC;;;;AAIG;;;AACH,WAAA,gBAAA,CAAY,QAAZ,EAA4B;AAA5B,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,CAAC,QAAD,IAAc,QAAQ,IAAI,OAAO,QAAP,KAAoB,QAAlD,EAA6D;AAC3D,YAAM,IAAI,KAAJ,CAAU,kEAAV,CAAN;AACD;;AACD,QAAM,OAAO,GAA4B;AACvC,MAAA,QAAQ,EAAE;AACR,uBAAe;AADP;AAD6B,KAAzC;AAKA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IAAd;;AACD;;AACH,SAAA,gBAAA;AAAC,CAjBD,CAAsC,iBAAtC,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ApiKeyCredentials, ApiKeyCredentialOptions } from \"./apiKeyCredentials\";\n\nexport class TopicCredentials extends ApiKeyCredentials {\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @param topicKey - The EventGrid topic key\n   */\n  constructor(topicKey: string) {\n    if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    const options: ApiKeyCredentialOptions = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey\n      }\n    };\n    super(options);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}