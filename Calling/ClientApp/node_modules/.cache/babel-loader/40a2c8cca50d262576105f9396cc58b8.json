{"ast":null,"code":"import { keyboardKey, SpacebarKey } from '@fluentui/keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n/**\n * @description\n * Adds role 'treeitem' if the title is a leaf node inside the tree.\n * Adds 'tabIndex' as '-1' if the title is a leaf node inside the tree.\n *\n * @specification\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\n\nexport var hierarchicalTreeTitleBehavior = function hierarchicalTreeTitleBehavior(props) {\n  var _ref;\n\n  return {\n    attributes: {\n      root: Object.assign({}, !props.hasSubtree && (_ref = {\n        tabIndex: -1\n      }, _ref[IS_FOCUSABLE_ATTRIBUTE] = true, _ref.role = 'treeitem', _ref))\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Enter\n          }, {\n            keyCode: SpacebarKey\n          }]\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/HierarchicalTree/hierarchicalTreeTitleBehavior.ts"],"names":["hierarchicalTreeTitleBehavior","attributes","root","props","tabIndex","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","SpacebarKey"],"mappings":"AAAA,SAAA,WAAA,EAAA,WAAA,QAAA,wBAAA;AAEA,SAAA,sBAAA,QAAA,kBAAA;AAGA;;;;;;;;;AAQA,OAAO,IAAMA,6BAAgF,GAAG,SAAnFA,6BAAmF,CAAA,KAAA,EAAK;AAAA,MAAA,IAAA;;AAAA,SAAK;AACxGC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,CAACC,KAAK,CAAN,UAAA,KAAA,IAAA,GAAA;AACFC,QAAAA,QAAQ,EAAE,CAAC;AADT,OAAA,EAAA,IAAA,CAAA,sBAAA,CAAA,GAAA,IAAA,EAAA,IAAA,CAAA,IAAA,GAAA,UAAA,EADF,IACE,CADF;AADM,KAD4F;AAUxGC,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAE;AACJI,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEG;AAAX,WAAjC;AADL;AADV;AADI;AAV4F,GAAL;AAA9F,CAAA","sourcesContent":["import { keyboardKey, SpacebarKey } from '@fluentui/keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * Adds role 'treeitem' if the title is a leaf node inside the tree.\n * Adds 'tabIndex' as '-1' if the title is a leaf node inside the tree.\n *\n * @specification\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nexport const hierarchicalTreeTitleBehavior: Accessibility<HierarchicalTreeTitleBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      ...(!props.hasSubtree && {\n        tabIndex: -1,\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        role: 'treeitem',\n      }),\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n\nexport type HierarchicalTreeTitleBehaviorProps = {\n  /** Indicated if tree title has a subtree */\n  hasSubtree?: boolean;\n  /** If subtree is opened. */\n  open?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}