{"ast":null,"code":"function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nimport assignStyle from 'css-in-js-utils/lib/assignStyle';\nimport arrayReduce from 'fast-loops/lib/arrayReduce';\n\nfunction resolveRule(rule, props, renderer) {\n  if (Array.isArray(rule)) {\n    return resolveRule(combineRules.apply(undefined, _toConsumableArray(rule)), props, renderer);\n  }\n\n  if (typeof rule === 'function') {\n    return rule(props, renderer);\n  }\n\n  return rule;\n}\n\nexport default function combineRules() {\n  for (var _len = arguments.length, rules = Array(_len), _key = 0; _key < _len; _key++) {\n    rules[_key] = arguments[_key];\n  }\n\n  return function (props, renderer) {\n    return arrayReduce(rules, function (style, rule) {\n      var resolvedRule = resolveRule(rule, props, renderer); // special combination of our special _className key\n\n      if (style._className) {\n        resolvedRule._className = style._className + (resolvedRule._className ? ' ' + resolvedRule._className : '');\n      }\n\n      return assignStyle(style, resolvedRule);\n    }, {});\n  };\n}","map":{"version":3,"sources":["C:/Users/VISHWANATH REDDY/Documents/Git Uploads/GroupVideoCalling/Calling/ClientApp/node_modules/fela/es/combineRules.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","assignStyle","arrayReduce","resolveRule","rule","props","renderer","combineRules","apply","undefined","_len","arguments","rules","_key","style","resolvedRule","_className"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGH,KAAK,CAACD,GAAG,CAACK,MAAL,CAA5B,EAA0CF,CAAC,GAAGH,GAAG,CAACK,MAAlD,EAA0DF,CAAC,EAA3D,EAA+D;AAAEC,MAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUH,GAAG,CAACG,CAAD,CAAb;AAAmB;;AAAC,WAAOC,IAAP;AAAc,GAA7H,MAAmI;AAAE,WAAOH,KAAK,CAACK,IAAN,CAAWN,GAAX,CAAP;AAAyB;AAAE;;AAEnM,OAAOO,WAAP,MAAwB,iCAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AAC1C,MAAIX,KAAK,CAACC,OAAN,CAAcQ,IAAd,CAAJ,EAAyB;AACvB,WAAOD,WAAW,CAACI,YAAY,CAACC,KAAb,CAAmBC,SAAnB,EAA8BhB,kBAAkB,CAACW,IAAD,CAAhD,CAAD,EAA0DC,KAA1D,EAAiEC,QAAjE,CAAlB;AACD;;AAED,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAOA,IAAI,CAACC,KAAD,EAAQC,QAAR,CAAX;AACD;;AAED,SAAOF,IAAP;AACD;;AAED,eAAe,SAASG,YAAT,GAAwB;AACrC,OAAK,IAAIG,IAAI,GAAGC,SAAS,CAACZ,MAArB,EAA6Ba,KAAK,GAAGjB,KAAK,CAACe,IAAD,CAA1C,EAAkDG,IAAI,GAAG,CAA9D,EAAiEA,IAAI,GAAGH,IAAxE,EAA8EG,IAAI,EAAlF,EAAsF;AACpFD,IAAAA,KAAK,CAACC,IAAD,CAAL,GAAcF,SAAS,CAACE,IAAD,CAAvB;AACD;;AAED,SAAO,UAAUR,KAAV,EAAiBC,QAAjB,EAA2B;AAChC,WAAOJ,WAAW,CAACU,KAAD,EAAQ,UAAUE,KAAV,EAAiBV,IAAjB,EAAuB;AAC/C,UAAIW,YAAY,GAAGZ,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,CAA9B,CAD+C,CAG/C;;AACA,UAAIQ,KAAK,CAACE,UAAV,EAAsB;AACpBD,QAAAA,YAAY,CAACC,UAAb,GAA0BF,KAAK,CAACE,UAAN,IAAoBD,YAAY,CAACC,UAAb,GAA0B,MAAMD,YAAY,CAACC,UAA7C,GAA0D,EAA9E,CAA1B;AACD;;AAED,aAAOf,WAAW,CAACa,KAAD,EAAQC,YAAR,CAAlB;AACD,KATiB,EASf,EATe,CAAlB;AAUD,GAXD;AAYD","sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport assignStyle from 'css-in-js-utils/lib/assignStyle';\nimport arrayReduce from 'fast-loops/lib/arrayReduce';\n\nfunction resolveRule(rule, props, renderer) {\n  if (Array.isArray(rule)) {\n    return resolveRule(combineRules.apply(undefined, _toConsumableArray(rule)), props, renderer);\n  }\n\n  if (typeof rule === 'function') {\n    return rule(props, renderer);\n  }\n\n  return rule;\n}\n\nexport default function combineRules() {\n  for (var _len = arguments.length, rules = Array(_len), _key = 0; _key < _len; _key++) {\n    rules[_key] = arguments[_key];\n  }\n\n  return function (props, renderer) {\n    return arrayReduce(rules, function (style, rule) {\n      var resolvedRule = resolveRule(rule, props, renderer);\n\n      // special combination of our special _className key\n      if (style._className) {\n        resolvedRule._className = style._className + (resolvedRule._className ? ' ' + resolvedRule._className : '');\n      }\n\n      return assignStyle(style, resolvedRule);\n    }, {});\n  };\n}"]},"metadata":{},"sourceType":"module"}