{"ast":null,"code":"import { keyboardKey, SpacebarKey } from '@fluentui/keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n/**\n * @description\n * The behavior is designed for particular structure of menu item. The item consists of root element and anchor inside the root element.\n *\n * @specification\n * Adds role 'presentation' to 'wrapper' slot.\n * Adds role 'button' to 'root' slot.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=false' to 'root' slot if 'disabled' property is true. Sets the attribute to 'true' otherwise.\n * Adds attribute 'aria-label' based on the property 'aria-label' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Adds attribute 'aria-describedby' based on the property 'aria-describedby' to 'root' slot.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Adds attribute 'aria-haspopup=true' to 'root' slot if 'hasMenu' property is set.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'wrapper'.\n * Triggers 'closeMenuAndFocusTrigger' action with 'Escape' on 'wrapper'.\n * Triggers 'openMenu' action with 'ArrowDown' on 'wrapper', when orientation is horizontal.\n * Triggers 'doNotNavigateNextParentItem' action with 'ArrowLeft' or 'ArrowRight' on 'wrapper', when toolbar button has submenu and it is opened.\n */\n\nexport var menuItemAsToolbarButtonBehavior = function menuItemAsToolbarButtonBehavior(props) {\n  var _root;\n\n  return {\n    attributes: {\n      wrapper: {\n        role: 'presentation'\n      },\n      root: (_root = {\n        role: 'button',\n        tabIndex: 0,\n        'aria-haspopup': props.hasMenu ? 'true' : undefined,\n        'aria-disabled': props['disabled'],\n        'aria-label': props['aria-label'],\n        'aria-labelledby': props['aria-labelledby'],\n        'aria-describedby': props['aria-describedby']\n      }, _root[IS_FOCUSABLE_ATTRIBUTE] = !props.disabled, _root)\n    },\n    keyActions: {\n      wrapper: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Enter\n          }, {\n            keyCode: SpacebarKey\n          }]\n        },\n        closeMenuAndFocusTrigger: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Escape\n          }]\n        },\n        openMenu: !props.vertical && {\n          keyCombinations: [{\n            keyCode: keyboardKey.ArrowDown\n          }]\n        },\n        doNotNavigateNextParentItem: {\n          keyCombinations: props.hasMenu && props.menuOpen ? [{\n            keyCode: keyboardKey.ArrowLeft\n          }, {\n            keyCode: keyboardKey.ArrowRight\n          }] : null\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Toolbar/menuItemAsToolbarButtonBehavior.ts"],"names":["menuItemAsToolbarButtonBehavior","attributes","wrapper","role","root","tabIndex","props","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","SpacebarKey","closeMenuAndFocusTrigger","Escape","openMenu","ArrowDown","doNotNavigateNextParentItem","ArrowLeft","ArrowRight"],"mappings":"AAAA,SAAA,WAAA,EAAA,WAAA,QAAA,wBAAA;AAEA,SAAA,sBAAA,QAAA,kBAAA;AAIA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,IAAMA,+BAAqE,GAAG,SAAxEA,+BAAwE,CAAA,KAAA,EAAK;AAAA,MAAA,KAAA;;AAAA,SAAK;AAC7FC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OADC;AAIVC,MAAAA,IAAI,GAAA,KAAA,GAAA;AACFD,QAAAA,IAAI,EADF,QAAA;AAEFE,QAAAA,QAAQ,EAFN,CAAA;AAGF,yBAAiBC,KAAK,CAALA,OAAAA,GAAAA,MAAAA,GAHf,SAAA;AAIF,yBAAiBA,KAAK,CAJpB,UAIoB,CAJpB;AAKF,sBAAcA,KAAK,CALjB,YAKiB,CALjB;AAMF,2BAAmBA,KAAK,CANtB,iBAMsB,CANtB;AAOF,4BAAoBA,KAAK,CAAA,kBAAA;AAPvB,OAAA,EAAA,KAAA,CAAA,sBAAA,CAAA,GAQwB,CAACA,KAAK,CAR9B,QAAA,EAAA,KAAA;AAJM,KADiF;AAiB7FC,IAAAA,UAAU,EAAE;AACVL,MAAAA,OAAO,EAAE;AACPM,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEG;AAAX,WAAjC;AADL,SADP;AAIPC,QAAAA,wBAAwB,EAAE;AACxBL,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACI;AAAvB,WAAD;AADO,SAJnB;AAOPC,QAAAA,QAAQ,EAAE,CAACV,KAAK,CAAN,QAAA,IAAmB;AAC3BG,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACM;AAAvB,WAAD;AADU,SAPtB;AAUPC,QAAAA,2BAA2B,EAAE;AAC3BT,UAAAA,eAAe,EACb,KAAK,CAAL,OAAA,IAAiBH,KAAK,CAAtB,QAAA,GACI,CAAC;AAAEI,YAAAA,OAAO,EAAEC,WAAW,CAACQ;AAAvB,WAAD,EAAqC;AAAET,YAAAA,OAAO,EAAEC,WAAW,CAACS;AAAvB,WAArC,CADJ,GAEI;AAJqB;AAVtB;AADC;AAjBiF,GAAL;AAAnF,CAAA","sourcesContent":["import { keyboardKey, SpacebarKey } from '@fluentui/keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { MenuItemBehaviorProps } from '../Menu/menuItemBehavior';\n\n/**\n * @description\n * The behavior is designed for particular structure of menu item. The item consists of root element and anchor inside the root element.\n *\n * @specification\n * Adds role 'presentation' to 'wrapper' slot.\n * Adds role 'button' to 'root' slot.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=false' to 'root' slot if 'disabled' property is true. Sets the attribute to 'true' otherwise.\n * Adds attribute 'aria-label' based on the property 'aria-label' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Adds attribute 'aria-describedby' based on the property 'aria-describedby' to 'root' slot.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Adds attribute 'aria-haspopup=true' to 'root' slot if 'hasMenu' property is set.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'wrapper'.\n * Triggers 'closeMenuAndFocusTrigger' action with 'Escape' on 'wrapper'.\n * Triggers 'openMenu' action with 'ArrowDown' on 'wrapper', when orientation is horizontal.\n * Triggers 'doNotNavigateNextParentItem' action with 'ArrowLeft' or 'ArrowRight' on 'wrapper', when toolbar button has submenu and it is opened.\n */\nexport const menuItemAsToolbarButtonBehavior: Accessibility<MenuItemBehaviorProps> = props => ({\n  attributes: {\n    wrapper: {\n      role: 'presentation',\n    },\n    root: {\n      role: 'button',\n      tabIndex: 0,\n      'aria-haspopup': props.hasMenu ? 'true' : undefined,\n      'aria-disabled': props['disabled'],\n      'aria-label': props['aria-label'],\n      'aria-labelledby': props['aria-labelledby'],\n      'aria-describedby': props['aria-describedby'],\n      [IS_FOCUSABLE_ATTRIBUTE]: !props.disabled,\n    },\n  },\n\n  keyActions: {\n    wrapper: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n      closeMenuAndFocusTrigger: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n      openMenu: !props.vertical && {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowDown }],\n      },\n      doNotNavigateNextParentItem: {\n        keyCombinations:\n          props.hasMenu && props.menuOpen\n            ? [{ keyCode: keyboardKey.ArrowLeft }, { keyCode: keyboardKey.ArrowRight }]\n            : null,\n      },\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}