{"ast":null,"code":"import { isEnabled as isDebugEnabled } from './debugEnabled';\nexport var withDebugId = process.env.NODE_ENV === 'production' ? function (data, debugId) {\n  return data;\n} : function (data, debugId) {\n  if (!isDebugEnabled || debugId === undefined) {\n    return data;\n  }\n\n  if (typeof data === 'object' && data !== null) {\n    if (!Object.prototype.hasOwnProperty.call(data, '_debugId')) {\n      var copy = Object.assign({}, data);\n      Object.defineProperty(copy, '_debugId', {\n        value: debugId,\n        writable: false,\n        enumerable: false\n      });\n      return copy;\n    }\n  }\n\n  if (typeof data === 'function') {\n    return function () {\n      var result = data.apply(void 0, arguments);\n      return withDebugId(result, debugId);\n    };\n  }\n\n  return data;\n};","map":{"version":3,"sources":["withDebugId.ts"],"names":["isEnabled","withDebugId","debugId","data","Object","copy","value","writable","enumerable","result"],"mappings":"AAAA,SAASA,SAAS,IAAlB,cAAA,QAAA,gBAAA;AAEA,OAAO,IAAMC,WAAW,GACtB,OAAO,CAAP,GAAA,CAAA,QAAA,KAAA,YAAA,GACI,UAAA,IAAA,EAAA,OAAA,EAAA;AAAA,SAAA,IAAA;AADJ,CAAA,GAEI,UAAA,IAAA,EAAA,OAAA,EAAoC;AAClC,MAAI,CAAA,cAAA,IAAmBC,OAAO,KAA9B,SAAA,EAA8C;AAC5C,WAAA,IAAA;AACD;;AAED,MAAI,OAAA,IAAA,KAAA,QAAA,IAA4BC,IAAI,KAApC,IAAA,EAA+C;AAC7C,QAAI,CAACC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAL,UAAKA,CAAL,EAA6D;AAC3D,UAAMC,IAAI,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAV,IAAU,CAAV;AACAD,MAAAA,MAAM,CAANA,cAAAA,CAAAA,IAAAA,EAAAA,UAAAA,EAAwC;AACtCE,QAAAA,KAAK,EADiC,OAAA;AAEtCC,QAAAA,QAAQ,EAF8B,KAAA;AAGtCC,QAAAA,UAAU,EAAE;AAH0B,OAAxCJ;AAKA,aAAA,IAAA;AACD;AACF;;AAED,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9B,WAAS,YAAa;AACpB,UAAMK,MAAM,GAAGN,IAAI,CAAJA,KAAAA,CAAAA,KAAAA,CAAAA,EAAf,SAAeA,CAAf;AACA,aAAOF,WAAW,CAAA,MAAA,EAAlB,OAAkB,CAAlB;AAFF,KAAA;AAID;;AAED,SAAA,IAAA;AA3BD,CAAA","sourcesContent":["import { isEnabled as isDebugEnabled } from './debugEnabled';\n\nexport const withDebugId =\n  process.env.NODE_ENV === 'production'\n    ? <T>(data: T, debugId: string): T => data\n    : <T>(data: T, debugId: string): T => {\n        if (!isDebugEnabled || debugId === undefined) {\n          return data;\n        }\n\n        if (typeof data === 'object' && data !== null) {\n          if (!Object.prototype.hasOwnProperty.call(data, '_debugId')) {\n            const copy = { ...data };\n            Object.defineProperty(copy, '_debugId', {\n              value: debugId,\n              writable: false,\n              enumerable: false,\n            });\n            return copy;\n          }\n        }\n\n        if (typeof data === 'function') {\n          return (((...args) => {\n            const result = data(...args);\n            return withDebugId(result, debugId);\n          }) as unknown) as T;\n        }\n\n        return data;\n      };\n"]},"metadata":{},"sourceType":"module"}