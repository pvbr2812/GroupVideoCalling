{"ast":null,"code":"import { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemBehavior } from './menuItemBehavior';\nimport { menuDividerBehavior } from './menuDividerBehavior';\n/**\n * @description\n * Implements ARIA Menu design pattern.\n * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.\n *\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in horizontal direction.\n * When 'vertical' prop is used, provides keyboard navigation in vertical direction.\n * Keyboard navigation is circular.\n */\n\nexport var menuBehavior = function menuBehavior(props) {\n  return {\n    attributes: {\n      root: {\n        role: 'menu'\n      }\n    },\n    focusZone: {\n      props: {\n        isCircularNavigation: true,\n        shouldFocusInnerElementWhenReceivedFocus: true,\n        direction: props.vertical ? FocusZoneDirection.vertical : FocusZoneDirection.horizontal\n      }\n    },\n    childBehaviors: {\n      item: menuItemBehavior,\n      divider: menuDividerBehavior\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Menu/menuBehavior.ts"],"names":["menuBehavior","attributes","root","role","focusZone","props","isCircularNavigation","shouldFocusInnerElementWhenReceivedFocus","direction","FocusZoneDirection","horizontal","childBehaviors","item","divider","menuDividerBehavior"],"mappings":"AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,SAAA,gBAAA,QAAA,oBAAA;AACA,SAAA,mBAAA,QAAA,uBAAA;AAEA;;;;;;;;;;;;AAWA,OAAO,IAAMA,YAA8C,GAAG,SAAjDA,YAAiD,CAAA,KAAA,EAAK;AAAA,SAAK;AACtEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD0D;AAMtEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,oBAAoB,EADf,IAAA;AAELC,QAAAA,wCAAwC,EAFnC,IAAA;AAGLC,QAAAA,SAAS,EAAEH,KAAK,CAALA,QAAAA,GAAiBI,kBAAkB,CAAnCJ,QAAAA,GAA+CI,kBAAkB,CAACC;AAHxE;AADE,KAN2D;AAatEC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EADU,gBAAA;AAEdC,MAAAA,OAAO,EAAEC;AAFK;AAbsD,GAAL;AAA5D,CAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemBehavior } from './menuItemBehavior';\nimport { menuDividerBehavior } from './menuDividerBehavior';\n\n/**\n * @description\n * Implements ARIA Menu design pattern.\n * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.\n *\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in horizontal direction.\n * When 'vertical' prop is used, provides keyboard navigation in vertical direction.\n * Keyboard navigation is circular.\n */\nexport const menuBehavior: Accessibility<MenuBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'menu',\n    },\n  },\n  focusZone: {\n    props: {\n      isCircularNavigation: true,\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: props.vertical ? FocusZoneDirection.vertical : FocusZoneDirection.horizontal,\n    },\n  },\n  childBehaviors: {\n    item: menuItemBehavior,\n    divider: menuDividerBehavior,\n  },\n});\n\nexport type MenuBehaviorProps = {\n  /** Indicates if menu has its items displayed vertically. */\n  vertical?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}