{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _invoke from \"lodash/invoke\";\nimport { buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { getElementType, useFluentContext, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport { Box } from '../Box/Box';\nexport var carouselPaddleClassName = 'ui-carousel__paddle';\nexport var carouselPaddleSlotClassNames = {\n  content: carouselPaddleClassName + \"__content\"\n};\n/**\n * A CarouselPaddle allows users to customize the paddles inside the Carousel component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\n\nexport var CarouselPaddle = /*#__PURE__*/function () {\n  var CarouselPaddle = function CarouselPaddle(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(CarouselPaddle.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var accessibility = props.accessibility,\n        as = props.as,\n        children = props.children,\n        className = props.className,\n        content = props.content,\n        disabled = props.disabled,\n        design = props.design,\n        hidden = props.hidden,\n        next = props.next,\n        previous = props.previous,\n        styles = props.styles,\n        variables = props.variables;\n    var hasChildren = childrenExist(children);\n    var getA11Props = useAccessibility(accessibility, {\n      debugName: CarouselPaddle.displayName,\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          as: String(as),\n          disabled: disabled\n        };\n      },\n      actionHandlers: {\n        performClick: function performClick(event) {\n          event.preventDefault();\n          handleClick(event);\n        }\n      },\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(CarouselPaddle.displayName, {\n      className: carouselPaddleClassName,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          disabled: disabled,\n          hidden: hidden,\n          next: next,\n          previous: previous\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes,\n        resolvedStyles = _useStyles.styles;\n\n    var unhandledProps = useUnhandledProps(CarouselPaddle.handledProps, props);\n    var ElementType = getElementType(props);\n\n    var handleClick = function handleClick(e) {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(props, 'onClick', e, props);\n    };\n\n    var result = /*#__PURE__*/React.createElement(ElementType, _extends({}, rtlTextContainer.getAttributes({\n      forElements: [children]\n    }), getA11Props('root', Object.assign({\n      onClick: handleClick,\n      disabled: disabled,\n      className: classes.root\n    }, unhandledProps))), hasChildren ? children : Box.create(content, {\n      defaultProps: function defaultProps() {\n        return getA11Props('content', {\n          as: 'span',\n          className: carouselPaddleSlotClassNames.content,\n          styles: resolvedStyles.content\n        });\n      }\n    }));\n    setEnd();\n    return result;\n  };\n\n  CarouselPaddle.defaultProps = {\n    as: 'button',\n    accessibility: buttonBehavior,\n    content: {}\n  };\n  CarouselPaddle.displayName = 'CarouselPaddle';\n  CarouselPaddle.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: 'shorthand'\n  }), {\n    disabled: PropTypes.bool,\n    hidden: PropTypes.bool,\n    onClick: PropTypes.func,\n    next: customPropTypes.every([customPropTypes.disallow(['previous']), PropTypes.bool]),\n    previous: customPropTypes.every([customPropTypes.disallow(['next']), PropTypes.bool])\n  });\n  CarouselPaddle.handledProps = Object.keys(CarouselPaddle.propTypes);\n  CarouselPaddle.create = createShorthandFactory({\n    Component: CarouselPaddle,\n    mappedProp: 'content'\n  });\n  return CarouselPaddle;\n}();","map":{"version":3,"sources":["components/Carousel/CarouselPaddle.tsx"],"names":["carouselPaddleClassName","carouselPaddleSlotClassNames","content","CarouselPaddle","context","useFluentContext","setStart","setEnd","useTelemetry","accessibility","as","children","className","disabled","design","hidden","next","previous","styles","variables","props","hasChildren","childrenExist","getA11Props","useAccessibility","debugName","mapPropsToBehavior","String","actionHandlers","performClick","event","handleClick","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unhandledProps","useUnhandledProps","ElementType","getElementType","e","result","forElements","onClick","root","defaultProps","PropTypes","customPropTypes","Object","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\n\nexport interface CarouselPaddleProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A paddle can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** Indicates whether the paddle should be hidden. */\n  hidden?: boolean;\n\n  /**\n   * Called after a user clicks the paddle.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselPaddleProps>;\n\n  /** A paddle can indicate that it slides to the next item. */\n  next?: boolean;\n\n  /** A paddle can indicate that it slides to the previous item. */\n  previous?: boolean;\n}\n\nexport type CarouselPaddleSlotClassNames = {\n  content: string;\n};\n\nexport type CarouselPaddleStylesProps = Pick<CarouselPaddleProps, 'disabled' | 'next' | 'previous' | 'hidden'>;\nexport const carouselPaddleClassName = 'ui-carousel__paddle';\nexport const carouselPaddleSlotClassNames: CarouselPaddleSlotClassNames = {\n  content: `${carouselPaddleClassName}__content`,\n};\n\n/**\n * A CarouselPaddle allows users to customize the paddles inside the Carousel component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport const CarouselPaddle: ComponentWithAs<'button', CarouselPaddleProps> &\n  FluentComponentStaticProps<CarouselPaddleProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselPaddle.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    as,\n    children,\n    className,\n    content,\n    disabled,\n    design,\n    hidden,\n    next,\n    previous,\n    styles,\n    variables,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: CarouselPaddle.displayName,\n    mapPropsToBehavior: () => ({\n      as: String(as),\n      disabled,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<CarouselPaddleStylesProps>(CarouselPaddle.displayName, {\n    className: carouselPaddleClassName,\n    mapPropsToStyles: () => ({\n      disabled,\n      hidden,\n      next,\n      previous,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(CarouselPaddle.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren\n        ? children\n        : Box.create(content, {\n            defaultProps: () =>\n              getA11Props('content', {\n                as: 'span',\n                className: carouselPaddleSlotClassNames.content,\n                styles: resolvedStyles.content,\n              }),\n          })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nCarouselPaddle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {},\n};\n\nCarouselPaddle.displayName = 'CarouselPaddle';\n\nCarouselPaddle.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  hidden: PropTypes.bool,\n  onClick: PropTypes.func,\n  next: customPropTypes.every([customPropTypes.disallow(['previous']), PropTypes.bool]),\n  previous: customPropTypes.every([customPropTypes.disallow(['next']), PropTypes.bool]),\n};\n\nCarouselPaddle.handledProps = Object.keys(CarouselPaddle.propTypes) as any;\n\nCarouselPaddle.create = createShorthandFactory({ Component: CarouselPaddle, mappedProp: 'content' });\n"]},"metadata":{},"sourceType":"module"}