{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport { childrenExist, commonPropTypes, rtlTextContainer, createShorthandFactory } from '../../utils';\nimport { Reaction } from './Reaction';\nimport { getElementType, useUnhandledProps, useFluentContext, useAccessibility, useTelemetry, useStyles } from '@fluentui/react-bindings';\nexport var reactionGroupClassName = 'ui-reactions';\n/**\n * A ReactionGroup groups multiple Reaction elements.\n */\n\nexport var ReactionGroup = /*#__PURE__*/function () {\n  var ReactionGroup = function ReactionGroup(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(ReactionGroup.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var children = props.children,\n        items = props.items,\n        content = props.content,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(ReactionGroup.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: ReactionGroup.displayName,\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(ReactionGroup.displayName, {\n      className: reactionGroupClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes,\n        resolvedStyles = _useStyles.styles;\n\n    var element = _isNil(items) ? /*#__PURE__*/React.createElement(ElementType, _extends({}, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), rtlTextContainer.getAttributes({\n      forElements: [children, content]\n    })), childrenExist(children) ? children : content) : /*#__PURE__*/React.createElement(ElementType, _extends({}, unhandledProps, {\n      className: classes.root\n    }), _map(items, function (reaction) {\n      return Reaction.create(reaction, {\n        defaultProps: function defaultProps() {\n          return {\n            styles: resolvedStyles.reaction\n          };\n        }\n      });\n    }));\n    setEnd();\n    return element;\n  };\n\n  ReactionGroup.displayName = 'ReactionGroup';\n  ReactionGroup.propTypes = Object.assign({}, commonPropTypes.createCommon(), {\n    items: customPropTypes.collectionShorthand\n  });\n  ReactionGroup.handledProps = Object.keys(ReactionGroup.propTypes);\n  ReactionGroup.create = createShorthandFactory({\n    Component: ReactionGroup,\n    mappedProp: 'content',\n    mappedArrayProp: 'items'\n  });\n  return ReactionGroup;\n}();","map":{"version":3,"sources":["components/Reaction/ReactionGroup.tsx"],"names":["reactionGroupClassName","ReactionGroup","context","useFluentContext","setStart","setEnd","useTelemetry","children","items","content","className","design","styles","variables","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","resolvedStyles","useStyles","mapPropsToInlineStyles","element","root","forElements","childrenExist","defaultProps","reaction","commonPropTypes","customPropTypes","collectionShorthand","Object","createShorthandFactory","Component","mappedProp","mappedArrayProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport { ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { Reaction, ReactionProps } from './Reaction';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface ReactionGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** The reactions contained inside the reaction group. */\n  items?: ShorthandCollection<ReactionProps>;\n}\n\nexport const reactionGroupClassName = 'ui-reactions';\n\nexport type ReactionGroupStylesProps = never;\n\n/**\n * A ReactionGroup groups multiple Reaction elements.\n */\nexport const ReactionGroup: ComponentWithAs<'div', ReactionGroupProps> &\n  FluentComponentStaticProps<ReactionGroupProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ReactionGroup.displayName, context.telemetry);\n  setStart();\n  const { children, items, content, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ReactionGroup.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: ReactionGroup.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ReactionGroupStylesProps>(ReactionGroup.displayName, {\n    className: reactionGroupClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = _.isNil(items) ? (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  ) : (\n    <ElementType {...unhandledProps} className={classes.root}>\n      {_.map(items, reaction =>\n        Reaction.create(reaction, {\n          defaultProps: () => ({\n            styles: resolvedStyles.reaction,\n          }),\n        }),\n      )}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nReactionGroup.displayName = 'ReactionGroup';\n\nReactionGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  items: customPropTypes.collectionShorthand,\n};\n\nReactionGroup.handledProps = Object.keys(ReactionGroup.propTypes) as any;\n\nReactionGroup.create = createShorthandFactory({\n  Component: ReactionGroup,\n  mappedProp: 'content',\n  mappedArrayProp: 'items',\n});\n"]},"metadata":{},"sourceType":"module"}