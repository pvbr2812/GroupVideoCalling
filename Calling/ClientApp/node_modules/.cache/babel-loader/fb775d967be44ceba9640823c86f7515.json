{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport { tabListBehavior } from '@fluentui/accessibility';\nimport { useTelemetry, mergeVariablesOverrides, getElementType, useFluentContext, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { CarouselNavigationItem } from './CarouselNavigationItem';\nexport var carouselNavigationClassName = 'ui-carousel__navigation';\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\n\nexport var CarouselNavigation = /*#__PURE__*/function () {\n  var CarouselNavigation = function CarouselNavigation(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(CarouselNavigation.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var accessibility = props.accessibility,\n        variables = props.variables,\n        children = props.children,\n        className = props.className,\n        design = props.design,\n        activeIndex = props.activeIndex,\n        iconOnly = props.iconOnly,\n        items = props.items,\n        primary = props.primary,\n        secondary = props.secondary,\n        vertical = props.vertical,\n        thumbnails = props.thumbnails,\n        styles = props.styles;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(CarouselNavigation.handledProps, props);\n    var getA11yProps = useAccessibility(accessibility, {\n      debugName: CarouselNavigation.displayName,\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(CarouselNavigation.displayName, {\n      className: carouselNavigationClassName,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          activeIndex: activeIndex,\n          iconOnly: iconOnly,\n          primary: primary,\n          vertical: vertical,\n          thumbnails: thumbnails\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var handleItemOverrides = function handleItemOverrides(variables) {\n      return function (predefinedProps) {\n        return {\n          onClick: function onClick(e, itemProps) {\n            _invoke(props, 'onItemClick', e, itemProps);\n\n            _invoke(predefinedProps, 'onClick', e, itemProps);\n          },\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables)\n        };\n      };\n    };\n\n    var renderItems = function renderItems() {\n      return _map(items, function (item, index) {\n        return CarouselNavigationItem.create(item, {\n          defaultProps: function defaultProps() {\n            return getA11yProps('item', {\n              active: index === activeIndex,\n              iconOnly: iconOnly,\n              index: index,\n              primary: primary,\n              secondary: secondary,\n              vertical: vertical,\n              thumbnails: thumbnails\n            });\n          },\n          overrideProps: handleItemOverrides(variables)\n        });\n      });\n    };\n\n    var element = getA11yProps.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, _extends({}, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps)), rtlTextContainer.getAttributes({\n      forElements: [children]\n    })), childrenExist(children) ? children : renderItems()));\n    setEnd();\n    return element;\n  };\n\n  CarouselNavigation.displayName = 'CarouselNavigation';\n  CarouselNavigation.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: false\n  }), {\n    activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    iconOnly: PropTypes.bool,\n    thumbnails: PropTypes.bool,\n    items: customPropTypes.collectionShorthand,\n    onItemClick: PropTypes.func,\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    vertical: PropTypes.bool\n  });\n  CarouselNavigation.defaultProps = {\n    accessibility: tabListBehavior,\n    as: 'ul'\n  };\n  CarouselNavigation.handledProps = Object.keys(CarouselNavigation.propTypes);\n  CarouselNavigation.create = createShorthandFactory({\n    Component: CarouselNavigation,\n    mappedArrayProp: 'items'\n  });\n  return CarouselNavigation;\n}();","map":{"version":3,"sources":["components/Carousel/CarouselNavigation.tsx"],"names":["carouselNavigationClassName","CarouselNavigation","context","useFluentContext","setStart","setEnd","useTelemetry","accessibility","variables","children","className","design","activeIndex","iconOnly","items","primary","secondary","vertical","thumbnails","styles","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","handleItemOverrides","onClick","mergeVariablesOverrides","predefinedProps","renderItems","defaultProps","active","index","overrideProps","element","root","forElements","childrenExist","content","PropTypes","customPropTypes","onItemClick","bool","as","Object","createShorthandFactory","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { tabListBehavior, Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  mergeVariablesOverrides,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { ShorthandCollection, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { CarouselNavigationItem, CarouselNavigationItemProps } from './CarouselNavigationItem';\n\nexport interface CarouselNavigationProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** A navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** A navigation may have thumbnails. */\n  thumbnails?: boolean;\n\n  /** Shorthand array of props for Navigation. */\n  items?: ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport type CarouselNavigationStylesProps = Required<\n  Pick<CarouselNavigationProps, 'activeIndex' | 'iconOnly' | 'primary' | 'vertical' | 'thumbnails'>\n>;\n\nexport const carouselNavigationClassName = 'ui-carousel__navigation';\n\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\nexport const CarouselNavigation: ComponentWithAs<'ul', CarouselNavigationProps> &\n  FluentComponentStaticProps<CarouselNavigationProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselNavigation.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibility,\n    variables,\n    children,\n    className,\n    design,\n    activeIndex,\n    iconOnly,\n    items,\n    primary,\n    secondary,\n    vertical,\n    thumbnails,\n    styles,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigation.handledProps, props);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: CarouselNavigation.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CarouselNavigationStylesProps>(CarouselNavigation.displayName, {\n    className: carouselNavigationClassName,\n    mapPropsToStyles: () => ({\n      activeIndex,\n      iconOnly,\n      primary,\n      vertical,\n      thumbnails,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n  });\n\n  const renderItems = () => {\n    return _.map(items, (item, index) =>\n      CarouselNavigationItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            active: index === activeIndex,\n            iconOnly,\n            index,\n            primary,\n            secondary,\n            vertical,\n            thumbnails,\n          }),\n        overrideProps: handleItemOverrides(variables),\n      }),\n    );\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderItems()}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n};\n\nCarouselNavigation.displayName = 'CarouselNavigation';\n\nCarouselNavigation.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconOnly: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n};\n\nCarouselNavigation.defaultProps = {\n  accessibility: tabListBehavior,\n  as: 'ul',\n};\n\nCarouselNavigation.handledProps = Object.keys(CarouselNavigation.propTypes) as any;\n\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items',\n});\n"]},"metadata":{},"sourceType":"module"}