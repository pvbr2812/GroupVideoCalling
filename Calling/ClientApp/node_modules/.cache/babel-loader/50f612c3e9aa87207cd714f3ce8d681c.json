{"ast":null,"code":"import { compareDatePart } from '../dateMath/dateMath';\n/**\n * Generates a list of dates, bounded by min and max dates\n * @param dateRange - input date range\n * @param minDate - min date to limit the range\n * @param maxDate - max date to limit the range\n */\n\nexport var getBoundedDateRange = function getBoundedDateRange(dateRange, minDate, maxDate) {\n  var boundedDateRange = [].concat(dateRange);\n\n  if (minDate) {\n    boundedDateRange = boundedDateRange.filter(function (date) {\n      return compareDatePart(date, minDate) >= 0;\n    });\n  }\n\n  if (maxDate) {\n    boundedDateRange = boundedDateRange.filter(function (date) {\n      return compareDatePart(date, maxDate) <= 0;\n    });\n  }\n\n  return boundedDateRange;\n};","map":{"version":3,"sources":["utils/date-time-utilities/dateGrid/getBoundedDateRange.ts"],"names":["getBoundedDateRange","boundedDateRange","compareDatePart"],"mappings":"AAAA,SAAA,eAAA,QAAA,sBAAA;AAEA;;;;;;;AAMA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAA+D;AAChG,MAAIC,gBAAgB,GAAA,GAAA,MAAA,CAApB,SAAoB,CAApB;;AACA,MAAA,OAAA,EAAa;AACXA,IAAAA,gBAAgB,GAAG,gBAAgB,CAAhB,MAAA,CAAwB,UAAA,IAAA,EAAA;AAAA,aAAgBC,eAAe,CAAA,IAAA,EAAfA,OAAe,CAAfA,IAAhB,CAAA;AAA3CD,KAAmB,CAAnBA;AACD;;AACD,MAAA,OAAA,EAAa;AACXA,IAAAA,gBAAgB,GAAG,gBAAgB,CAAhB,MAAA,CAAwB,UAAA,IAAA,EAAA;AAAA,aAAgBC,eAAe,CAAA,IAAA,EAAfA,OAAe,CAAfA,IAAhB,CAAA;AAA3CD,KAAmB,CAAnBA;AACD;;AACD,SAAA,gBAAA;AARK,CAAA","sourcesContent":["import { compareDatePart } from '../dateMath/dateMath';\n\n/**\n * Generates a list of dates, bounded by min and max dates\n * @param dateRange - input date range\n * @param minDate - min date to limit the range\n * @param maxDate - max date to limit the range\n */\nexport const getBoundedDateRange = (dateRange: Date[], minDate?: Date, maxDate?: Date): Date[] => {\n  let boundedDateRange = [...dateRange];\n  if (minDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, minDate as Date) >= 0);\n  }\n  if (maxDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, maxDate as Date) <= 0);\n  }\n  return boundedDateRange;\n};\n"]},"metadata":{},"sourceType":"module"}