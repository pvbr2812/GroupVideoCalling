{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./serializer.common\"; // tslint:disable-next-line:no-null-keyword\n\nvar doc = document.implementation.createDocument(null, null, null);\nvar parser = new DOMParser();\nexport function parseXML(str, opts) {\n  var _a, _b, _c;\n\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  try {\n    var updatedOptions = {\n      rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"\",\n      includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n      xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY\n    };\n    var dom = parser.parseFromString(str, \"application/xml\");\n    throwIfError(dom);\n    var obj = void 0;\n\n    if (updatedOptions.includeRoot) {\n      obj = domToObject(dom, updatedOptions);\n    } else {\n      obj = domToObject(dom.childNodes[0], updatedOptions);\n    }\n\n    return Promise.resolve(obj);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nvar errorNS;\n\nfunction getErrorNamespace() {\n  var _a;\n\n  if (errorNS === undefined) {\n    try {\n      errorNS = (_a = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0].namespaceURI) !== null && _a !== void 0 ? _a : \"\";\n    } catch (ignored) {\n      // Most browsers will return a document containing <parsererror>, but IE will throw.\n      errorNS = \"\";\n    }\n  }\n\n  return errorNS;\n}\n\nfunction throwIfError(dom) {\n  var parserErrors = dom.getElementsByTagName(\"parsererror\");\n\n  if (parserErrors.length > 0 && getErrorNamespace()) {\n    for (var i = 0; i < parserErrors.length; i++) {\n      if (parserErrors[i].namespaceURI === errorNS) {\n        throw new Error(parserErrors[i].innerHTML);\n      }\n    }\n  }\n}\n\nfunction isElement(node) {\n  return !!node.attributes;\n}\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\n\n\nfunction asElementWithAttributes(node) {\n  return isElement(node) && node.hasAttributes() ? node : undefined;\n}\n\nfunction domToObject(node, options) {\n  var result = {};\n  var childNodeCount = node.childNodes.length;\n  var firstChildNode = node.childNodes[0];\n  var onlyChildTextValue = firstChildNode && childNodeCount === 1 && firstChildNode.nodeType === Node.TEXT_NODE && firstChildNode.nodeValue || undefined;\n  var elementWithAttributes = asElementWithAttributes(node);\n\n  if (elementWithAttributes) {\n    result[XML_ATTRKEY] = {};\n\n    for (var i = 0; i < elementWithAttributes.attributes.length; i++) {\n      var attr = elementWithAttributes.attributes[i];\n      result[XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n    }\n\n    if (onlyChildTextValue) {\n      result[options.xmlCharKey] = onlyChildTextValue;\n    }\n  } else if (childNodeCount === 0) {\n    result = \"\";\n  } else if (onlyChildTextValue) {\n    result = onlyChildTextValue;\n  }\n\n  if (!onlyChildTextValue) {\n    for (var i = 0; i < childNodeCount; i++) {\n      var child = node.childNodes[i]; // Ignore leading/trailing whitespace nodes\n\n      if (child.nodeType !== Node.TEXT_NODE) {\n        var childObject = domToObject(child, options);\n\n        if (!result[child.nodeName]) {\n          result[child.nodeName] = childObject;\n        } else if (Array.isArray(result[child.nodeName])) {\n          result[child.nodeName].push(childObject);\n        } else {\n          result[child.nodeName] = [result[child.nodeName], childObject];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nvar serializer = new XMLSerializer();\nexport function stringifyXML(content, opts) {\n  var _a, _b, _c;\n\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var updatedOptions = {\n    rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"root\",\n    includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n    xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY\n  };\n  var dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n  return '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom);\n}\n\nfunction buildAttributes(attrs) {\n  var result = [];\n\n  for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n    var key = _a[_i];\n    var attr = doc.createAttribute(key);\n    attr.value = attrs[key].toString();\n    result.push(attr);\n  }\n\n  return result;\n}\n\nfunction buildNode(obj, elementName, options) {\n  if (obj === undefined || obj === null || typeof obj === \"string\" || typeof obj === \"number\" || typeof obj === \"boolean\") {\n    var elem = doc.createElement(elementName);\n    elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n    return [elem];\n  } else if (Array.isArray(obj)) {\n    var result = [];\n\n    for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {\n      var arrayElem = obj_1[_i];\n\n      for (var _a = 0, _b = buildNode(arrayElem, elementName, options); _a < _b.length; _a++) {\n        var child = _b[_a];\n        result.push(child);\n      }\n    }\n\n    return result;\n  } else if (typeof obj === \"object\") {\n    var elem = doc.createElement(elementName);\n\n    for (var _c = 0, _d = Object.keys(obj); _c < _d.length; _c++) {\n      var key = _d[_c];\n\n      if (key === XML_ATTRKEY) {\n        for (var _e = 0, _f = buildAttributes(obj[key]); _e < _f.length; _e++) {\n          var attr = _f[_e];\n          elem.attributes.setNamedItem(attr);\n        }\n      } else if (key === options.xmlCharKey) {\n        elem.textContent = obj[key].toString();\n      } else {\n        for (var _g = 0, _h = buildNode(obj[key], key, options); _g < _h.length; _g++) {\n          var child = _h[_g];\n          elem.appendChild(child);\n        }\n      }\n    }\n\n    return [elem];\n  } else {\n    throw new Error(\"Illegal value passed to buildObject: \" + obj);\n  }\n}","map":{"version":3,"sources":["../../../src/util/xml.browser.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { XML_ATTRKEY, XML_CHARKEY, SerializerOptions } from \"./serializer.common\";\n\n// tslint:disable-next-line:no-null-keyword\nconst doc = document.implementation.createDocument(null, null, null);\n\nconst parser = new DOMParser();\nexport function parseXML(str: string, opts: SerializerOptions = {}): Promise<any> {\n  try {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: opts.rootName ?? \"\",\n      includeRoot: opts.includeRoot ?? false,\n      xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY\n    };\n    const dom = parser.parseFromString(str, \"application/xml\");\n    throwIfError(dom);\n\n    let obj;\n    if (updatedOptions.includeRoot) {\n      obj = domToObject(dom, updatedOptions);\n    } else {\n      obj = domToObject(dom.childNodes[0], updatedOptions);\n    }\n\n    return Promise.resolve(obj);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nlet errorNS: string | undefined;\n\nfunction getErrorNamespace(): string {\n  if (errorNS === undefined) {\n    try {\n      errorNS =\n        parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n          .namespaceURI! ?? \"\";\n    } catch (ignored) {\n      // Most browsers will return a document containing <parsererror>, but IE will throw.\n      errorNS = \"\";\n    }\n  }\n  return errorNS;\n}\n\nfunction throwIfError(dom: Document): void {\n  const parserErrors = dom.getElementsByTagName(\"parsererror\");\n  if (parserErrors.length > 0 && getErrorNamespace()) {\n    for (let i = 0; i < parserErrors.length; i++) {\n      if (parserErrors[i].namespaceURI === errorNS) {\n        throw new Error(parserErrors[i].innerHTML);\n      }\n    }\n  }\n}\n\nfunction isElement(node: Node): node is Element {\n  return !!(node as Element).attributes;\n}\n\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node: Node): Element | undefined {\n  return isElement(node) && node.hasAttributes() ? node : undefined;\n}\n\nfunction domToObject(node: Node, options: Required<SerializerOptions>): any {\n  let result: any = {};\n\n  const childNodeCount: number = node.childNodes.length;\n\n  const firstChildNode: Node = node.childNodes[0];\n  const onlyChildTextValue: string | undefined =\n    (firstChildNode &&\n      childNodeCount === 1 &&\n      firstChildNode.nodeType === Node.TEXT_NODE &&\n      firstChildNode.nodeValue) ||\n    undefined;\n\n  const elementWithAttributes: Element | undefined = asElementWithAttributes(node);\n  if (elementWithAttributes) {\n    result[XML_ATTRKEY] = {};\n\n    for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n      const attr = elementWithAttributes.attributes[i];\n      result[XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n    }\n\n    if (onlyChildTextValue) {\n      result[options.xmlCharKey] = onlyChildTextValue;\n    }\n  } else if (childNodeCount === 0) {\n    result = \"\";\n  } else if (onlyChildTextValue) {\n    result = onlyChildTextValue;\n  }\n\n  if (!onlyChildTextValue) {\n    for (let i = 0; i < childNodeCount; i++) {\n      const child = node.childNodes[i];\n      // Ignore leading/trailing whitespace nodes\n      if (child.nodeType !== Node.TEXT_NODE) {\n        const childObject: any = domToObject(child, options);\n        if (!result[child.nodeName]) {\n          result[child.nodeName] = childObject;\n        } else if (Array.isArray(result[child.nodeName])) {\n          result[child.nodeName].push(childObject);\n        } else {\n          result[child.nodeName] = [result[child.nodeName], childObject];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nconst serializer = new XMLSerializer();\n\nexport function stringifyXML(content: unknown, opts: SerializerOptions = {}): string {\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: opts.rootName ?? \"root\",\n    includeRoot: opts.includeRoot ?? false,\n    xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY\n  };\n  const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n  return (\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom)\n  );\n}\n\nfunction buildAttributes(attrs: { [key: string]: { toString(): string } }): Attr[] {\n  const result = [];\n  for (const key of Object.keys(attrs)) {\n    const attr = doc.createAttribute(key);\n    attr.value = attrs[key].toString();\n    result.push(attr);\n  }\n  return result;\n}\n\nfunction buildNode(obj: any, elementName: string, options: Required<SerializerOptions>): Node[] {\n  if (\n    obj === undefined ||\n    obj === null ||\n    typeof obj === \"string\" ||\n    typeof obj === \"number\" ||\n    typeof obj === \"boolean\"\n  ) {\n    const elem = doc.createElement(elementName);\n    elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n    return [elem];\n  } else if (Array.isArray(obj)) {\n    const result = [];\n    for (const arrayElem of obj) {\n      for (const child of buildNode(arrayElem, elementName, options)) {\n        result.push(child);\n      }\n    }\n    return result;\n  } else if (typeof obj === \"object\") {\n    const elem = doc.createElement(elementName);\n    for (const key of Object.keys(obj)) {\n      if (key === XML_ATTRKEY) {\n        for (const attr of buildAttributes(obj[key])) {\n          elem.attributes.setNamedItem(attr);\n        }\n      } else if (key === options.xmlCharKey) {\n        elem.textContent = obj[key].toString();\n      } else {\n        for (const child of buildNode(obj[key], key, options)) {\n          elem.appendChild(child);\n        }\n      }\n    }\n    return [elem];\n  } else {\n    throw new Error(`Illegal value passed to buildObject: ${obj}`);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}