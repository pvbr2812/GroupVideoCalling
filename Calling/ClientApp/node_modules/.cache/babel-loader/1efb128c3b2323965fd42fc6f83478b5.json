{"ast":null,"code":"import { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Button } from '../Button/Button';\nimport { _FormFieldBase } from './utils/formFieldBase';\nexport var formButtonClassName = 'ui-form__button';\n/**\n * An FormButton renders a Button wrapped by FormField.\n */\n\nexport var FormButton = /*#__PURE__*/function () {\n  var FormButton = compose(_FormFieldBase, {\n    className: formButtonClassName,\n    displayName: 'FormButton',\n    overrideStyles: true,\n    slots: {\n      control: Button\n    }\n  });\n  FormButton.propTypes = commonPropTypes.createCommon({\n    content: false,\n    // Should be `true`, but will be passed via unhandled props to a Button\n    children: false\n  });\n  return FormButton;\n}();","map":{"version":3,"sources":["components/Form/FormButton.tsx"],"names":["formButtonClassName","FormButton","compose","className","displayName","overrideStyles","slots","control","Button","content","children"],"mappings":"AAAA,SAAA,OAAA,QAAA,0BAAA;AACA,SAAA,eAAA,QAAA,aAAA;AACA,SAAA,MAAA,QAAA,kBAAA;AACA,SAAA,cAAA,QAAA,uBAAA;AAUA,OAAO,IAAMA,mBAAmB,GAAzB,iBAAA;AAEP;;;;AAGA,OAAO,IAAMC,UAAN,GAAA,aAAA,YAAA;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAA,cAAA,EAE/B;AACEC,IAAAA,SAAS,EADX,mBAAA;AAEEC,IAAAA,WAAW,EAFb,YAAA;AAGEC,IAAAA,cAAc,EAHhB,IAAA;AAIEC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEC;AADJ;AAJT,GAF+B,CAA1B;AAYPP,EAAAA,UAAU,CAAVA,SAAAA,GAAuB,eAAe,CAAf,YAAA,CAA6B;AAClDQ,IAAAA,OAAO,EAD2C,KAAA;AAClC;AAChBC,IAAAA,QAAQ,EAAE;AAFwC,GAA7B,CAAvBT;AAZO,SAAA,UAAA;AAAA,CAAA,EAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { _FormFieldBase, FormFieldBaseProps } from './utils/formFieldBase';\n\ninterface FormButtonOwnProps extends ButtonProps {}\ntype SelectedFormFieldCustomProps = Omit<\n  FormFieldBaseProps,\n  'control' | 'styles' | 'accessibility' | 'design' | 'variables'\n>;\nexport interface FormButtonProps extends SelectedFormFieldCustomProps, FormButtonOwnProps {}\nexport type FormButtonStylesProps = never;\n\nexport const formButtonClassName = 'ui-form__button';\n\n/**\n * An FormButton renders a Button wrapped by FormField.\n */\nexport const FormButton = compose<'div', FormButtonProps, FormButtonStylesProps, SelectedFormFieldCustomProps, {}>(\n  _FormFieldBase,\n  {\n    className: formButtonClassName,\n    displayName: 'FormButton',\n    overrideStyles: true,\n    slots: {\n      control: Button,\n    },\n  },\n);\n\nFormButton.propTypes = commonPropTypes.createCommon({\n  content: false, // Should be `true`, but will be passed via unhandled props to a Button\n  children: false,\n});\n"]},"metadata":{},"sourceType":"module"}