{"ast":null,"code":"import { pxToRem } from '../../../../utils';\nimport { getColorScheme } from '../../colors';\nexport var menuStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    var iconOnly = p.iconOnly,\n        fluid = p.fluid,\n        pointing = p.pointing,\n        pills = p.pills,\n        primary = p.primary,\n        underlined = p.underlined,\n        vertical = p.vertical,\n        submenu = p.submenu;\n    var colors = getColorScheme(v.colorScheme, null, primary);\n    return Object.assign({\n      display: 'flex',\n      minHeight: pxToRem(24),\n      margin: 0,\n      padding: 0,\n      color: v.color,\n      backgroundColor: v.backgroundColor || 'inherit',\n      listStyleType: 'none'\n    }, iconOnly && {\n      alignItems: 'center'\n    }, vertical && Object.assign({\n      flexDirection: 'column',\n      backgroundColor: v.verticalBackgroundColor,\n      padding: pxToRem(8) + \" 0\"\n    }, submenu && {\n      boxShadow: v.verticalBoxShadow\n    }, !fluid && !submenu && {\n      width: 'fit-content'\n    }, iconOnly && {\n      display: 'inline-block',\n      width: 'auto'\n    }), !pills && !iconOnly && !(pointing && vertical) && !underlined && {\n      // primary has hardcoded grey border color\n      border: v.borderWidth + \" solid \" + (primary ? v.primaryBorderColor : v.borderColor || colors.border),\n      borderRadius: pxToRem(4)\n    }, underlined && {\n      borderBottom: v.underlinedBottomBorderWidth + \" solid \" + v.underlinedBorderColor\n    });\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Menu/menuStyles.ts"],"names":["menuStyles","root","props","p","variables","v","iconOnly","fluid","pointing","pills","primary","underlined","vertical","submenu","colors","getColorScheme","display","minHeight","pxToRem","margin","padding","color","backgroundColor","listStyleType","alignItems","flexDirection","boxShadow","verticalBoxShadow","width","border","borderRadius","borderBottom","underlinedBorderColor"],"mappings":"AAAA,SAAA,OAAA,QAAA,mBAAA;AAIA,SAAA,cAAA,QAAA,cAAA;AAEA,OAAO,IAAMA,UAAuE,GAAG;AACrFC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAA+C;AAAA,QAArCE,CAAqC,GAAA,IAAA,CAA5CD,KAA4C;AAAA,QAAvBG,CAAuB,GAAA,IAAA,CAAlCD,SAAkC;AAAA,QAC3CE,QAD2C,GACkCH,CADlC,CAAA,QAAA;AAAA,QACjCI,KADiC,GACkCJ,CADlC,CAAA,KAAA;AAAA,QAC1BK,QAD0B,GACkCL,CADlC,CAAA,QAAA;AAAA,QAChBM,KADgB,GACkCN,CADlC,CAAA,KAAA;AAAA,QACTO,OADS,GACkCP,CADlC,CAAA,OAAA;AAAA,QACAQ,UADA,GACkCR,CADlC,CAAA,UAAA;AAAA,QACYS,QADZ,GACkCT,CADlC,CAAA,QAAA;AAAA,QACsBU,OADtB,GACkCV,CADlC,CAAA,OAAA;AAEnD,QAAMW,MAAM,GAAGC,cAAc,CAACV,CAAC,CAAF,WAAA,EAAA,IAAA,EAA7B,OAA6B,CAA7B;AAEA,WAAA,MAAA,CAAA,MAAA,CAAA;AACEW,MAAAA,OAAO,EADT,MAAA;AAEEC,MAAAA,SAAS,EAAEC,OAAO,CAFpB,EAEoB,CAFpB;AAGEC,MAAAA,MAAM,EAHR,CAAA;AAIEC,MAAAA,OAAO,EAJT,CAAA;AAKEC,MAAAA,KAAK,EAAEhB,CAAC,CALV,KAAA;AAMEiB,MAAAA,eAAe,EAAEjB,CAAC,CAADA,eAAAA,IANnB,SAAA;AAOEkB,MAAAA,aAAa,EAAE;AAPjB,KAAA,EASMjB,QAAQ,IAAI;AAAEkB,MAAAA,UAAU,EAAE;AAAd,KATlB,EAUMZ,QAAQ,IAAA,MAAA,CAAA,MAAA,CAAA;AACVa,MAAAA,aAAa,EADH,QAAA;AAEVH,MAAAA,eAAe,EAAEjB,CAAC,CAFR,uBAAA;AAGVe,MAAAA,OAAO,EAAKF,OAAO,CAAZ,CAAY,CAAPA,GAAL;AAHG,KAAA,EAINL,OAAO,IAAI;AACba,MAAAA,SAAS,EAAErB,CAAC,CAACsB;AADA,KAJL,EAON,CAAA,KAAA,IAAU,CAAV,OAAA,IAAsB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAPhB,EAQNtB,QAAQ,IAAI;AACdU,MAAAA,OAAO,EADO,cAAA;AAEdY,MAAAA,KAAK,EAAE;AAFO,KARN,CAVd,EAuBM,CAAA,KAAA,IACF,CADE,QAAA,IAEF,EAAEpB,QAAQ,IAFR,QAEF,CAFE,IAGF,CAHE,UAAA,IAGa;AACb;AACAqB,MAAAA,MAAM,EAAKxB,CAAC,CAAN,WAAKA,GAAL,SAAKA,IAAuBK,OAAO,GAAGL,CAAC,CAAJ,kBAAA,GAA0BA,CAAC,CAADA,WAAAA,IAAiBS,MAAM,CAF7E,MAEFT,CAFE;AAGbyB,MAAAA,YAAY,EAAEZ,OAAO,CAAA,CAAA;AAHR,KA1BnB,EA+BMP,UAAU,IAAI;AAChBoB,MAAAA,YAAY,EAAK1B,CAAC,CAAN,2BAAKA,GAAL,SAAKA,GAAuCA,CAAC,CAAC2B;AAD1C,KA/BpB,CAAA;AAmCD;AAxCoF,CAAhF","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { MenuStylesProps } from '../../../../components/Menu/Menu';\nimport { MenuVariables } from './menuVariables';\nimport { getColorScheme } from '../../colors';\n\nexport const menuStyles: ComponentSlotStylesPrepared<MenuStylesProps, MenuVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const { iconOnly, fluid, pointing, pills, primary, underlined, vertical, submenu } = p;\n    const colors = getColorScheme(v.colorScheme, null, primary);\n\n    return {\n      display: 'flex',\n      minHeight: pxToRem(24),\n      margin: 0,\n      padding: 0,\n      color: v.color,\n      backgroundColor: v.backgroundColor || 'inherit',\n      listStyleType: 'none',\n\n      ...(iconOnly && { alignItems: 'center' }),\n      ...(vertical && {\n        flexDirection: 'column',\n        backgroundColor: v.verticalBackgroundColor,\n        padding: `${pxToRem(8)} 0`,\n        ...(submenu && {\n          boxShadow: v.verticalBoxShadow,\n        }),\n        ...(!fluid && !submenu && { width: 'fit-content' }),\n        ...(iconOnly && {\n          display: 'inline-block',\n          width: 'auto',\n        }),\n      }),\n      ...(!pills &&\n        !iconOnly &&\n        !(pointing && vertical) &&\n        !underlined && {\n          // primary has hardcoded grey border color\n          border: `${v.borderWidth} solid ${primary ? v.primaryBorderColor : v.borderColor || colors.border}`,\n          borderRadius: pxToRem(4),\n        }),\n      ...(underlined && {\n        borderBottom: `${v.underlinedBottomBorderWidth} solid ${v.underlinedBorderColor}`,\n      }),\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"module"}