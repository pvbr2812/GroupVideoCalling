{"ast":null,"code":"export var toFlexAlignment = function toFlexAlignment(propValue) {\n  var trimmedValue = propValue.trim();\n\n  if (trimmedValue === 'start' || trimmedValue === 'end') {\n    return \"flex-\" + trimmedValue;\n  }\n\n  return trimmedValue;\n};\nexport var toFlexItemSizeValues = function toFlexItemSizeValues(sizeValue) {\n  return {\n    flexBasis: sizeValue\n  };\n};","map":{"version":3,"sources":["themes/teams/components/Flex/utils.ts"],"names":["toFlexAlignment","trimmedValue","propValue","toFlexItemSizeValues","flexBasis","sizeValue"],"mappings":"AAAA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAA,SAAA,EAAuB;AACpD,MAAMC,YAAY,GAAGC,SAAS,CAA9B,IAAqBA,EAArB;;AAEA,MAAID,YAAY,KAAZA,OAAAA,IAA4BA,YAAY,KAA5C,KAAA,EAAwD;AACtD,WAAA,UAAA,YAAA;AACD;;AAED,SAAA,YAAA;AAPK,CAAA;AAUP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,SAAA,EAAA;AAAA,SAAwB;AAC1DC,IAAAA,SAAS,EAAEC;AAD+C,GAAxB;AAA7B,CAAA","sourcesContent":["export const toFlexAlignment = (propValue: string) => {\n  const trimmedValue = propValue.trim();\n\n  if (trimmedValue === 'start' || trimmedValue === 'end') {\n    return `flex-${trimmedValue}`;\n  }\n\n  return trimmedValue;\n};\n\nexport const toFlexItemSizeValues = (sizeValue: string) => ({\n  flexBasis: sizeValue,\n});\n"]},"metadata":{},"sourceType":"module"}