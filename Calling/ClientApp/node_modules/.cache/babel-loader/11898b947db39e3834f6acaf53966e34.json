{"ast":null,"code":"/**\n * @description\n * Icon is usually only visual representation and therefore is hidden from screen readers, unless 'alt' or 'aria-label' property is provided.\n *\n * @specification\n * Adds role='img'.\n * Adds attribute 'aria-hidden=true', if there is no 'alt' property provided.\n * Adds attribute 'aria-hidden=true', if there is no 'aria-label' property provided.\n */\nexport var iconBehavior = function iconBehavior(props) {\n  return {\n    attributes: {\n      root: {\n        role: 'img',\n        'aria-hidden': props.alt || props['aria-label'] ? undefined : 'true'\n      }\n    }\n  };\n};","map":{"version":3,"sources":["behaviors/Icon/iconBehavior.ts"],"names":["iconBehavior","attributes","root","role","props"],"mappings":"AAEA;;;;;;;;;AASA,OAAO,IAAMA,YAA8C,GAAG,SAAjDA,YAAiD,CAAA,KAAA,EAAK;AAAA,SAAK;AACtEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EADA,KAAA;AAEJ,uBAAeC,KAAK,CAALA,GAAAA,IAAaA,KAAK,CAAlBA,YAAkB,CAAlBA,GAAAA,SAAAA,GAA+C;AAF1D;AADI;AAD0D,GAAL;AAA5D,CAAA","sourcesContent":["import { Accessibility, AccessibilityAttributes } from '../../types';\n\n/**\n * @description\n * Icon is usually only visual representation and therefore is hidden from screen readers, unless 'alt' or 'aria-label' property is provided.\n *\n * @specification\n * Adds role='img'.\n * Adds attribute 'aria-hidden=true', if there is no 'alt' property provided.\n * Adds attribute 'aria-hidden=true', if there is no 'aria-label' property provided.\n */\nexport const iconBehavior: Accessibility<IconBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'img',\n      'aria-hidden': props.alt || props['aria-label'] ? undefined : 'true',\n    },\n  },\n});\n\nexport type IconBehaviorProps = {\n  /** Alternative text. */\n  alt?: string;\n} & Pick<AccessibilityAttributes, 'aria-label'>;\n"]},"metadata":{},"sourceType":"module"}