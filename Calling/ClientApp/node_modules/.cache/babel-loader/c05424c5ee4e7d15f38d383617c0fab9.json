{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport { alertBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { commonPropTypes, childrenExist, createShorthandFactory } from '../../utils';\nimport { Box } from '../Box/Box';\nimport { Text } from '../Text/Text';\nimport { ButtonGroup } from '../Button/ButtonGroup';\nimport { AlertDismissAction } from './AlertDismissAction';\nimport { useAccessibility, getElementType, useStyles, useTelemetry, useFluentContext, useUnhandledProps, useAutoControlled } from '@fluentui/react-bindings';\nexport var alertClassName = 'ui-alert';\nexport var alertSlotClassNames = {\n  content: alertClassName + \"__content\",\n  actions: alertClassName + \"__actions\",\n  icon: alertClassName + \"__icon\",\n  header: alertClassName + \"__header\",\n  body: alertClassName + \"__body\"\n};\n/**\n * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.\n *\n * @accessibility\n * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.\n */\n\nexport var Alert = /*#__PURE__*/function () {\n  var Alert = function Alert(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(Alert.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var warning = props.warning,\n        danger = props.danger,\n        info = props.info,\n        success = props.success,\n        attached = props.attached,\n        fitted = props.fitted,\n        dismissible = props.dismissible,\n        variables = props.variables,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        children = props.children,\n        actions = props.actions,\n        dismissAction = props.dismissAction,\n        content = props.content,\n        icon = props.icon,\n        header = props.header,\n        body = props.body;\n\n    var _useAutoControlled = useAutoControlled({\n      defaultValue: props.defaultVisible,\n      value: props.visible,\n      initialValue: true\n    }),\n        visible = _useAutoControlled[0],\n        setVisible = _useAutoControlled[1];\n\n    var _React$useState = React.useState(_uniqueId('alert-body-')),\n        bodyId = _React$useState[0];\n\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(Alert.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: Alert.displayName,\n      mapPropsToBehavior: function mapPropsToBehavior() {\n        return {\n          warning: warning,\n          danger: danger,\n          bodyId: bodyId,\n          visible: visible\n        };\n      },\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(Alert.displayName, {\n      className: alertClassName,\n      mapPropsToStyles: function mapPropsToStyles() {\n        return {\n          warning: warning,\n          danger: danger,\n          info: info,\n          success: success,\n          attached: attached,\n          fitted: fitted,\n          dismissible: dismissible,\n          visible: visible\n        };\n      },\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes,\n        resolvedStyles = _useStyles.styles;\n\n    var handleDismissOverrides = function handleDismissOverrides(predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _invoke(props, 'onVisibleChange', e, Object.assign({}, props, {\n            visible: false\n          }));\n\n          setVisible(false);\n        }\n      };\n    };\n\n    var handleFocus = function handleFocus(e) {\n      _invoke(props, 'onFocus', e, props);\n    };\n\n    var renderContent = function renderContent() {\n      var bodyContent = /*#__PURE__*/React.createElement(React.Fragment, null, Text.create(header, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('header', {\n            className: alertSlotClassNames.header,\n            styles: resolvedStyles.header\n          });\n        }\n      }), Box.create(content, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('content', {\n            className: alertSlotClassNames.content,\n            styles: resolvedStyles.content\n          });\n        }\n      }));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, Box.create(icon, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('icon', {\n            className: alertSlotClassNames.icon,\n            styles: resolvedStyles.icon\n          });\n        }\n      }), Box.create(body, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('body', {\n            className: alertSlotClassNames.body,\n            styles: resolvedStyles.body,\n            id: bodyId\n          });\n        },\n        overrideProps: {\n          children: bodyContent\n        }\n      }), ButtonGroup.create(actions, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('actions', {\n            className: alertSlotClassNames.actions,\n            styles: resolvedStyles.actions\n          });\n        }\n      }), dismissible && AlertDismissAction.create(dismissAction, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('dismissAction', {\n            danger: danger,\n            warning: warning,\n            info: info,\n            success: success,\n            variables: variables\n          });\n        },\n        overrideProps: handleDismissOverrides\n      }));\n    };\n\n    var element = getA11yProps.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root,\n      onFocus: handleFocus\n    }, unhandledProps)), childrenExist(children) ? children : renderContent()));\n    setEnd();\n    return element;\n  };\n\n  Alert.defaultProps = {\n    accessibility: alertBehavior,\n    dismissAction: {},\n    body: {}\n  };\n  Alert.propTypes = Object.assign({}, commonPropTypes.createCommon({\n    content: 'shorthand'\n  }), {\n    actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n    icon: customPropTypes.shorthandAllowingChildren,\n    header: customPropTypes.itemShorthand,\n    attached: PropTypes.oneOf([true, false, 'top', 'bottom']),\n    fitted: PropTypes.bool,\n    danger: PropTypes.bool,\n    defaultVisible: PropTypes.bool,\n    dismissible: PropTypes.bool,\n    dismissAction: customPropTypes.shorthandAllowingChildren,\n    info: PropTypes.bool,\n    onVisibleChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    success: PropTypes.bool,\n    visible: PropTypes.bool,\n    warning: PropTypes.bool,\n    body: customPropTypes.shorthandAllowingChildren\n  });\n  Alert.displayName = 'Alert';\n  Alert.handledProps = Object.keys(Alert.propTypes);\n  Alert.create = createShorthandFactory({\n    Component: Alert\n  });\n  Alert.DismissAction = AlertDismissAction;\n  return Alert;\n}();","map":{"version":3,"sources":["components/Alert/Alert.tsx"],"names":["alertClassName","alertSlotClassNames","content","actions","icon","header","body","Alert","context","useFluentContext","setStart","setEnd","useTelemetry","warning","danger","info","success","attached","fitted","dismissible","variables","className","design","styles","children","dismissAction","props","visible","setVisible","useAutoControlled","defaultValue","value","initialValue","bodyId","React","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","mapPropsToBehavior","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","handleDismissOverrides","onClick","handleFocus","renderContent","bodyContent","defaultProps","id","overrideProps","element","onFocus","childrenExist","accessibility","PropTypes","customPropTypes","defaultVisible","onVisibleChange","shorthandAllowingChildren","Object","createShorthandFactory","Component"],"mappings":"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","sourcesContent":["import { Accessibility, alertBehavior, AlertBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  UIComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ButtonProps } from '../Button/Button';\nimport { Text, TextProps } from '../Text/Text';\n\nimport { ButtonGroup, ButtonGroupProps } from '../Button/ButtonGroup';\nimport { AlertDismissAction, AlertDismissActionProps } from './AlertDismissAction';\nimport {\n  ComponentWithAs,\n  useAccessibility,\n  getElementType,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAutoControlled,\n} from '@fluentui/react-bindings';\n\nexport interface AlertSlotClassNames {\n  content: string;\n  actions: string;\n  icon: string;\n  header: string;\n  body: string;\n}\n\nexport interface AlertProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available alertWarningBehavior\n   */\n  accessibility?: Accessibility<AlertBehaviorProps>;\n\n  /** An alert can contain action buttons. */\n  actions?: ShorthandValue<ButtonGroupProps> | ShorthandCollection<ButtonProps>;\n\n  /** An alert may contain an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An alert may contain a header. */\n  header?: ShorthandValue<TextProps>;\n\n  /** An alert's position relative to neighboring items. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** An alert can only take up the width of its content. */\n  fitted?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** A default value for the `visible` prop. */\n  defaultVisible?: boolean;\n\n  /** An alert can be dismissible. */\n  dismissible?: boolean;\n\n  /**\n   * A button shorthand for the dismiss action slot. To use this slot the alert should be\n   * dismissible.\n   */\n  dismissAction?: ShorthandValue<AlertDismissActionProps>;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after user will dismiss the alert.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onVisibleChange?: ComponentEventHandler<AlertProps>;\n\n  /**\n   * Called after the alert is focused.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AlertProps>;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert can be set to visible to force itself to be shown. */\n  visible?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can have a body that contains header and content elements. */\n  body?: ShorthandValue<BoxProps>;\n}\n\nexport type AlertStylesProps = Required<\n  Pick<AlertProps, 'danger' | 'warning' | 'info' | 'success' | 'attached' | 'fitted' | 'dismissible' | 'visible'>\n>;\n\nexport const alertClassName = 'ui-alert';\nexport const alertSlotClassNames: AlertSlotClassNames = {\n  content: `${alertClassName}__content`,\n  actions: `${alertClassName}__actions`,\n  icon: `${alertClassName}__icon`,\n  header: `${alertClassName}__header`,\n  body: `${alertClassName}__body`,\n};\n\n/**\n * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.\n *\n * @accessibility\n * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.\n */\nexport const Alert: ComponentWithAs<'div', AlertProps> &\n  FluentComponentStaticProps<AlertProps> & {\n    DismissAction: typeof AlertDismissAction;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Alert.displayName, context.telemetry);\n  setStart();\n  const {\n    warning,\n    danger,\n    info,\n    success,\n    attached,\n    fitted,\n    dismissible,\n    variables,\n    className,\n    design,\n    styles,\n    children,\n    actions,\n    dismissAction,\n    content,\n    icon,\n    header,\n    body,\n  } = props;\n\n  const [visible, setVisible] = useAutoControlled({\n    defaultValue: props.defaultVisible,\n    value: props.visible,\n    initialValue: true,\n  });\n\n  const [bodyId] = React.useState(_.uniqueId('alert-body-'));\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Alert.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Alert.displayName,\n    mapPropsToBehavior: () => ({\n      warning,\n      danger,\n      bodyId,\n      visible,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<AlertStylesProps>(Alert.displayName, {\n    className: alertClassName,\n    mapPropsToStyles: () => ({\n      warning,\n      danger,\n      info,\n      success,\n      attached,\n      fitted,\n      dismissible,\n      visible,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleDismissOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onVisibleChange', e, { ...props, visible: false });\n      setVisible(false);\n    },\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const renderContent = () => {\n    const bodyContent = (\n      <>\n        {Text.create(header, {\n          defaultProps: () =>\n            getA11yProps('header', {\n              className: alertSlotClassNames.header,\n              styles: resolvedStyles.header,\n            }),\n        })}\n        {Box.create(content, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              className: alertSlotClassNames.content,\n              styles: resolvedStyles.content,\n            }),\n        })}\n      </>\n    );\n\n    return (\n      <>\n        {Box.create(icon, {\n          defaultProps: () =>\n            getA11yProps('icon', {\n              className: alertSlotClassNames.icon,\n              styles: resolvedStyles.icon,\n            }),\n        })}\n        {Box.create(body, {\n          defaultProps: () =>\n            getA11yProps('body', {\n              className: alertSlotClassNames.body,\n              styles: resolvedStyles.body,\n              id: bodyId,\n            }),\n          overrideProps: {\n            children: bodyContent,\n          },\n        })}\n\n        {ButtonGroup.create(actions, {\n          defaultProps: () =>\n            getA11yProps('actions', {\n              className: alertSlotClassNames.actions,\n              styles: resolvedStyles.actions,\n            }),\n        })}\n        {dismissible &&\n          AlertDismissAction.create(dismissAction, {\n            defaultProps: () =>\n              getA11yProps('dismissAction', {\n                danger,\n                warning,\n                info,\n                success,\n                variables,\n              }),\n            overrideProps: handleDismissOverrides,\n          })}\n      </>\n    );\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onFocus: handleFocus,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n};\n\nAlert.defaultProps = {\n  accessibility: alertBehavior,\n  dismissAction: {},\n  body: {},\n};\n\nAlert.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  icon: customPropTypes.shorthandAllowingChildren,\n  header: customPropTypes.itemShorthand,\n  attached: PropTypes.oneOf([true, false, 'top', 'bottom']),\n  fitted: PropTypes.bool,\n  danger: PropTypes.bool,\n  defaultVisible: PropTypes.bool,\n  dismissible: PropTypes.bool,\n  dismissAction: customPropTypes.shorthandAllowingChildren,\n  info: PropTypes.bool,\n  onVisibleChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  success: PropTypes.bool,\n  visible: PropTypes.bool,\n  warning: PropTypes.bool,\n  body: customPropTypes.shorthandAllowingChildren,\n};\n\nAlert.displayName = 'Alert';\n\nAlert.handledProps = Object.keys(Alert.propTypes) as any;\n\nAlert.create = createShorthandFactory({\n  Component: Alert,\n});\n\nAlert.DismissAction = AlertDismissAction;\n"]},"metadata":{},"sourceType":"module"}